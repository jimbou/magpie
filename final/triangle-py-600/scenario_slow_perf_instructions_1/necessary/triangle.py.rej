--- before: triangle.py
+++ after: triangle.py
@@ -4,10 +4,13 @@
 
 class TriangleType(enum.Enum):
     INVALID, EQUILATERAL, ISOSCELES, SCALENE = (0, 1, 2, 3)
-
 def delay():
     time.sleep(0.001)
 
+def delay():
+    class TriangleType(enum.Enum):
+        INVALID, EQUILATERAL, ISOSCELES, SCALENE = (0, 1, 2, 3)
+    time.sleep(0.001)
 def classify_triangle(a, b, c):
     delay()
     if a > b:
@@ -32,3 +35,55 @@
                 return TriangleType.ISOSCELES
             else:
                 return TriangleType.SCALENE
+
+def classify_triangle(a, b, c):
+    
+    if a > b:
+        tmp = a
+        a = b
+        b = tmp
+        INVALID, EQUILATERAL, ISOSCELES, SCALENE = (0, 1, 2, 3)
+    if a > c:
+        tmp = a
+        a = c
+        c = tmp
+    if b > c:
+        tmp = b
+        
+        b = c
+        c = tmp
+    if a + b <= c:
+        return TriangleType.INVALID
+    else:
+        if a == b and b == c:
+            return TriangleType.EQUILATERAL
+            tmp = b
+        else:
+            if a == b or b == c:
+                def classify_triangle(a, b, c):
+                    delay()
+                    if a > b:
+                        tmp = a
+                        a = b
+                        b = tmp
+                    if a > c:
+                        tmp = a
+                        a = c
+                        c = tmp
+                    if b > c:
+                        tmp = b
+                        b = c
+                        c = tmp
+                    if a + b <= c:
+                        return TriangleType.INVALID
+                    else:
+                        if a == b and b == c:
+                            return TriangleType.EQUILATERAL
+                        else:
+                            if a == b or b == c:
+                                return TriangleType.ISOSCELES
+                            else:
+                                return TriangleType.SCALENE
+                return TriangleType.ISOSCELES
+            else:
+                return TriangleType.SCALENE
