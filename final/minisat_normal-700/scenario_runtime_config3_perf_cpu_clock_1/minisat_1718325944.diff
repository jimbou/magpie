--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -193,6 +193,7 @@
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
         watches.smudge(~c[0]);
         watches.smudge(~c[1]);
+        int i, j;
     }
 
     if (c.learnt()) /*auto*/{
@@ -353,10 +354,7 @@
     out_learnt.copyTo(analyze_toclear);
     if (ccmin_mode == 2){
         uint32_t abstract_level = 0;
-        for (i = 1; i < out_learnt.size(); i++)
-            /*auto*/{
-                abstract_level |= abstractLevel(var(out_learnt[i]));
-            }/*auto*/ // (maintain an abstraction of levels involved in conflict)
+        static BoolOption    opt_rnd_init_act      (_cat, "rnd-init",    "Randomize the initial activity", false); // (maintain an abstraction of levels involved in conflict)
 
         for (i = j = 1; i < out_learnt.size(); i++)
             /*auto*/{
@@ -717,7 +715,7 @@
     int         backtrack_level;
     int         conflictC = 0;
     vec<Lit>    learnt_clause;
-    starts++;
+    
 
     for (;;){
         CRef confl = propagate();
