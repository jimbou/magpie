2024-06-13 10:22:45,972	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 6248378890470686
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 100
default_lengthout = 1e6
diff_method = unified
trust_local_filesystem = True
run_timeout = 100

[magpie.log]
color_output = True
format_info = {counter:<7} {status:<20} {best}{fitness} ({ratio}) [{size}] {cached} {log}
format_debug = patch({counter})="{patch}"{diffifbest}
format_fitness = {:.6f}
format_ratio = {:.2%%}
format_patchif = 
	 --> {patch}
format_diffif = 
	{diff}

[software]
path = examples/minisat
target_files = 
	core/Solver.cc.xml
software = BasicSoftware
model_rules = 
	*.params : ParamFileConfigModel
	*.xml : SrcmlModel
	* : LineModel
model_config = 
	*.params : [paramconfig]
	*.xml : [srcml]
init_cmd = bash init.sh
init_timeout = 60
init_lengthout = -1
setup_cmd = bash compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = bash compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = bash test.sh
test_timeout = 
test_lengthout = 
run_cmd = perf stat -e branches bash run_fixed.sh
run_timeout = 
run_lengthout = 
retries = 2
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = perf_branches

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[paramconfig]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
cli_none = hide
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = FirstImprovement
possible_edits = 
	SrcmlStmtReplacement
	SrcmlStmtInsertion
	SrcmlStmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 10000
max_time = 700
target_fitness = 
cache_maxsize = 100
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2024-06-13 10:22:45,973	[DEBUG]	
2024-06-13 10:22:45,973	[INFO]	==== SEARCH: FirstImprovement ====
2024-06-13 10:22:45,973	[INFO]	~~~~ WARMUP ~~~~
2024-06-13 10:23:12,697	[DEBUG]	EXEC>  SUCCESS 8638279562.0
2024-06-13 10:23:12,698	[INFO]	WARM    SUCCESS               8638279562.000000 (--) [0 edit(s)]  
2024-06-13 10:23:36,138	[DEBUG]	EXEC>  SUCCESS 8638343826.0
2024-06-13 10:23:36,138	[INFO]	WARM    SUCCESS               8638343826.000000 (--) [0 edit(s)]  
2024-06-13 10:23:59,560	[DEBUG]	EXEC>  SUCCESS 8638215664.5
2024-06-13 10:23:59,560	[INFO]	WARM    SUCCESS               8638215664.500000 (--) [0 edit(s)]  
2024-06-13 10:23:59,560	[INFO]	REF     SUCCESS               8638215664.500000 (--) [0 edit(s)]  
2024-06-13 10:23:59,561	[INFO]	
2024-06-13 10:23:59,561	[INFO]	~~~~ START ~~~~
2024-06-13 10:24:38,094	[DEBUG]	EXEC>  SUCCESS 15416311423.0
2024-06-13 10:24:38,094	[INFO]	1       SUCCESS               15416311423.000000 (178.47%) [1 edit(s)]  
2024-06-13 10:24:38,094	[DEBUG]	patch(1)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 272), ('core/Solver.cc.xml', 'stmt', 149))"
2024-06-13 10:24:38,351	[INFO]	2       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-13 10:24:38,351	[DEBUG]	patch(2)="SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 170), ('core/Solver.cc.xml', 'stmt', 411))"
2024-06-13 10:25:02,921	[DEBUG]	EXEC>  SUCCESS 8638289080.5
2024-06-13 10:25:02,921	[INFO]	3       SUCCESS               8638289080.500000 (100.00%) [1 edit(s)]  
2024-06-13 10:25:02,921	[DEBUG]	patch(3)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 483), ('core/Solver.cc.xml', 'stmt', 235))"
2024-06-13 10:25:40,273	[DEBUG]	EXEC>  SUCCESS 15384328925.0
2024-06-13 10:25:40,273	[INFO]	4       SUCCESS               15384328925.000000 (178.10%) [1 edit(s)]  
2024-06-13 10:25:40,273	[DEBUG]	patch(4)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 383), ('core/Solver.cc.xml', 'stmt', 266))"
2024-06-13 10:26:01,741	[DEBUG]	EXEC>  SUCCESS 7421501918.0
2024-06-13 10:26:01,741	[INFO]	5       SUCCESS              *7421501918.000000 (85.91%) [1 edit(s)]  
2024-06-13 10:26:01,742	[DEBUG]	patch(5)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -738,7 +738,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 

2024-06-13 10:26:03,082	[INFO]	6       TEST_CODE_ERROR       None (--) [2 edit(s)]  
2024-06-13 10:26:03,082	[DEBUG]	patch(6)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 283))"
2024-06-13 10:26:03,306	[INFO]	7       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 10:26:03,306	[DEBUG]	patch(7)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 351), ('core/Solver.cc.xml', 'stmt', 127))"
2024-06-13 10:26:03,312	[INFO]	8       SUCCESS               8638215664.500000 (100.00%) [0 edit(s)] [cached] 
2024-06-13 10:26:03,312	[DEBUG]	patch(8)=""
2024-06-13 10:26:03,532	[INFO]	9       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 10:26:03,532	[DEBUG]	patch(9)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 352), ('core/Solver.cc.xml', 'stmt', 85))"
2024-06-13 10:26:03,776	[INFO]	10      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 10:26:03,776	[DEBUG]	patch(10)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 309), ('core/Solver.cc.xml', 'stmt', 158))"
2024-06-13 10:26:04,018	[INFO]	11      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 10:26:04,018	[DEBUG]	patch(11)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 326), ('core/Solver.cc.xml', 'stmt', 43))"
2024-06-13 10:26:25,494	[DEBUG]	EXEC>  SUCCESS 7421488572.5
2024-06-13 10:26:25,494	[INFO]	12      SUCCESS              *7421488572.500000 (85.91%) [2 edit(s)]  
2024-06-13 10:26:25,495	[DEBUG]	patch(12)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -738,7 +738,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -1032,6 +1032,7 @@
     for (int v = 0; v < nVars(); v++)
         /*auto*/{
             for (int s = 0; s < 2; s++){
+            int         conflictC = 0;
             Lit p = mkLit(v, s);
             // printf(" >>> RELOCING: %s%d\n", sign(p)?"-":"", var(p)+1);
             vec<Watcher>& ws = watches[p];

2024-06-13 10:26:26,805	[INFO]	13      TEST_CODE_ERROR       None (--) [3 edit(s)]  
2024-06-13 10:26:26,805	[DEBUG]	patch(13)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 108), ('core/Solver.cc.xml', 'stmt', 296))"
2024-06-13 10:26:51,450	[DEBUG]	EXEC>  SUCCESS 8638553599.0
2024-06-13 10:26:51,450	[INFO]	14      SUCCESS               8638553599.000000 (100.00%) [1 edit(s)]  
2024-06-13 10:26:51,450	[DEBUG]	patch(14)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272))"
2024-06-13 10:27:12,983	[DEBUG]	EXEC>  SUCCESS 7421479636.5
2024-06-13 10:27:12,983	[INFO]	15      SUCCESS              *7421479636.500000 (85.91%) [3 edit(s)]  
2024-06-13 10:27:12,983	[DEBUG]	patch(15)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -607,7 +607,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -738,7 +739,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -1032,6 +1033,7 @@
     for (int v = 0; v < nVars(); v++)
         /*auto*/{
             for (int s = 0; s < 2; s++){
+            int         conflictC = 0;
             Lit p = mkLit(v, s);
             // printf(" >>> RELOCING: %s%d\n", sign(p)?"-":"", var(p)+1);
             vec<Watcher>& ws = watches[p];

2024-06-13 10:27:34,221	[DEBUG]	EXEC>  SUCCESS 7421401878.0
2024-06-13 10:27:34,222	[INFO]	16      SUCCESS              *7421401878.000000 (85.91%) [4 edit(s)]  
2024-06-13 10:27:34,222	[DEBUG]	patch(16)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -607,7 +607,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -738,7 +739,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -877,6 +878,7 @@
 
     if (verbosity >= 1){
         printf("============================[ Search Statistics ]==============================\n");
+        static DoubleOption  opt_random_seed       (_cat, "rnd-seed",    "Used by the random variable selection",         91648253, DoubleRange(0, false, HUGE_VAL, false));
         printf("| Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
         printf("|           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
         printf("===============================================================================\n");
@@ -1032,6 +1034,7 @@
     for (int v = 0; v < nVars(); v++)
         /*auto*/{
             for (int s = 0; s < 2; s++){
+            int         conflictC = 0;
             Lit p = mkLit(v, s);
             // printf(" >>> RELOCING: %s%d\n", sign(p)?"-":"", var(p)+1);
             vec<Watcher>& ws = watches[p];

2024-06-13 10:27:58,749	[DEBUG]	EXEC>  SUCCESS 8638564446.0
2024-06-13 10:27:58,749	[INFO]	17      SUCCESS               8638564446.000000 (100.00%) [3 edit(s)]  
2024-06-13 10:27:58,749	[DEBUG]	patch(17)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4))"
2024-06-13 10:27:59,017	[INFO]	18      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-13 10:27:59,018	[DEBUG]	patch(18)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 367), ('core/Solver.cc.xml', 'stmt', 202))"
2024-06-13 10:28:20,380	[DEBUG]	EXEC>  SUCCESS 7421382305.0
2024-06-13 10:28:20,381	[INFO]	19      SUCCESS              *7421382305.000000 (85.91%) [5 edit(s)]  
2024-06-13 10:28:20,381	[DEBUG]	patch(19)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -607,7 +607,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -738,7 +739,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -785,7 +786,7 @@
                 Lit p = assumptions[decisionLevel()];
                 if (value(p) == l_True){
                     // Dummy decision level:
-                    newDecisionLevel();
+                    Lit next = lit_Undef;
                 }else if (value(p) == l_False){
                     analyzeFinal(~p, conflict);
                     return l_False;
@@ -877,6 +878,7 @@
 
     if (verbosity >= 1){
         printf("============================[ Search Statistics ]==============================\n");
+        static DoubleOption  opt_random_seed       (_cat, "rnd-seed",    "Used by the random variable selection",         91648253, DoubleRange(0, false, HUGE_VAL, false));
         printf("| Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
         printf("|           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
         printf("===============================================================================\n");
@@ -1032,6 +1034,7 @@
     for (int v = 0; v < nVars(); v++)
         /*auto*/{
             for (int s = 0; s < 2; s++){
+            int         conflictC = 0;
             Lit p = mkLit(v, s);
             // printf(" >>> RELOCING: %s%d\n", sign(p)?"-":"", var(p)+1);
             vec<Watcher>& ws = watches[p];

2024-06-13 10:28:20,616	[INFO]	20      COMPILE_CODE_ERROR    None (--) [6 edit(s)]  
2024-06-13 10:28:20,617	[DEBUG]	patch(20)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 242), ('core/Solver.cc.xml', 'stmt', 48))"
2024-06-13 10:28:20,886	[INFO]	21      COMPILE_CODE_ERROR    None (--) [6 edit(s)]  
2024-06-13 10:28:20,886	[DEBUG]	patch(21)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 292), ('core/Solver.cc.xml', 'stmt', 256))"
2024-06-13 10:28:45,426	[DEBUG]	EXEC>  SUCCESS 8638496117.0
2024-06-13 10:28:45,426	[INFO]	22      SUCCESS               8638496117.000000 (100.00%) [4 edit(s)]  
2024-06-13 10:28:45,426	[DEBUG]	patch(22)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308))"
2024-06-13 10:29:06,784	[DEBUG]	EXEC>  SUCCESS 7421311682.0
2024-06-13 10:29:06,784	[INFO]	23      SUCCESS              *7421311682.000000 (85.91%) [6 edit(s)]  
2024-06-13 10:29:06,784	[DEBUG]	patch(23)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 370))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -607,7 +607,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -738,7 +739,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -785,7 +786,7 @@
                 Lit p = assumptions[decisionLevel()];
                 if (value(p) == l_True){
                     // Dummy decision level:
-                    newDecisionLevel();
+                    Lit next = lit_Undef;
                 }else if (value(p) == l_False){
                     analyzeFinal(~p, conflict);
                     return l_False;
@@ -877,6 +878,7 @@
 
     if (verbosity >= 1){
         printf("============================[ Search Statistics ]==============================\n");
+        static DoubleOption  opt_random_seed       (_cat, "rnd-seed",    "Used by the random variable selection",         91648253, DoubleRange(0, false, HUGE_VAL, false));
         printf("| Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
         printf("|           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
         printf("===============================================================================\n");
@@ -921,10 +923,7 @@
 
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
-    if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
-        map[x] = max++;
-    }
+    
     return map[x];
 }
 
@@ -1032,6 +1031,7 @@
     for (int v = 0; v < nVars(); v++)
         /*auto*/{
             for (int s = 0; s < 2; s++){
+            int         conflictC = 0;
             Lit p = mkLit(v, s);
             // printf(" >>> RELOCING: %s%d\n", sign(p)?"-":"", var(p)+1);
             vec<Watcher>& ws = watches[p];

2024-06-13 10:29:31,221	[DEBUG]	EXEC>  SUCCESS 8638265329.5
2024-06-13 10:29:31,221	[INFO]	24      SUCCESS               8638265329.500000 (100.00%) [5 edit(s)]  
2024-06-13 10:29:31,221	[DEBUG]	patch(24)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 370))"
2024-06-13 10:29:52,676	[DEBUG]	EXEC>  SUCCESS 7417668363.5
2024-06-13 10:29:52,676	[INFO]	25      SUCCESS              *7417668363.500000 (85.87%) [7 edit(s)]  
2024-06-13 10:29:52,677	[DEBUG]	patch(25)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 370)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -607,7 +607,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -738,7 +739,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -780,20 +781,7 @@
                 }/*auto*/
 
             Lit next = lit_Undef;
-            while (decisionLevel() < assumptions.size()){
-                // Perform user provided assumption:
-                Lit p = assumptions[decisionLevel()];
-                if (value(p) == l_True){
-                    // Dummy decision level:
-                    newDecisionLevel();
-                }else if (value(p) == l_False){
-                    analyzeFinal(~p, conflict);
-                    return l_False;
-                }else{
-                    next = p;
-                    break;
-                }
-            }
+            
 
             if (next == lit_Undef){
                 // New variable decision:
@@ -877,6 +865,7 @@
 
     if (verbosity >= 1){
         printf("============================[ Search Statistics ]==============================\n");
+        static DoubleOption  opt_random_seed       (_cat, "rnd-seed",    "Used by the random variable selection",         91648253, DoubleRange(0, false, HUGE_VAL, false));
         printf("| Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
         printf("|           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
         printf("===============================================================================\n");
@@ -921,10 +910,7 @@
 
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
-    if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
-        map[x] = max++;
-    }
+    
     return map[x];
 }
 
@@ -1032,6 +1018,7 @@
     for (int v = 0; v < nVars(); v++)
         /*auto*/{
             for (int s = 0; s < 2; s++){
+            int         conflictC = 0;
             Lit p = mkLit(v, s);
             // printf(" >>> RELOCING: %s%d\n", sign(p)?"-":"", var(p)+1);
             vec<Watcher>& ws = watches[p];

2024-06-13 10:29:52,697	[INFO]	26      SUCCESS               7421311682.000000 (85.91%) [6 edit(s)] [cached] 
2024-06-13 10:29:52,697	[DEBUG]	patch(26)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 551), ('core/Solver.cc.xml', 'stmt', 272)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 370))"
2024-06-13 10:30:14,208	[DEBUG]	EXEC>  SUCCESS 7417590918.0
2024-06-13 10:30:14,208	[INFO]	27      SUCCESS              *7417590918.000000 (85.87%) [6 edit(s)]  
2024-06-13 10:30:14,208	[DEBUG]	patch(27)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 370)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -607,7 +607,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -738,7 +739,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -780,20 +781,7 @@
                 }/*auto*/
 
             Lit next = lit_Undef;
-            while (decisionLevel() < assumptions.size()){
-                // Perform user provided assumption:
-                Lit p = assumptions[decisionLevel()];
-                if (value(p) == l_True){
-                    // Dummy decision level:
-                    newDecisionLevel();
-                }else if (value(p) == l_False){
-                    analyzeFinal(~p, conflict);
-                    return l_False;
-                }else{
-                    next = p;
-                    break;
-                }
-            }
+            
 
             if (next == lit_Undef){
                 // New variable decision:
@@ -877,6 +865,7 @@
 
     if (verbosity >= 1){
         printf("============================[ Search Statistics ]==============================\n");
+        static DoubleOption  opt_random_seed       (_cat, "rnd-seed",    "Used by the random variable selection",         91648253, DoubleRange(0, false, HUGE_VAL, false));
         printf("| Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
         printf("|           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
         printf("===============================================================================\n");
@@ -921,10 +910,7 @@
 
 static Var mapVar(Var x, vec<Var>& map, Var& max)
 {
-    if (map.size() <= x || map[x] == -1){
-        map.growTo(x+1, -1);
-        map[x] = max++;
-    }
+    
     return map[x];
 }
 

2024-06-13 10:30:14,457	[INFO]	28      COMPILE_CODE_ERROR    None (--) [7 edit(s)]  
2024-06-13 10:30:14,457	[DEBUG]	patch(28)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 370)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 247), ('core/Solver.cc.xml', 'stmt', 82))"
2024-06-13 10:30:35,811	[DEBUG]	EXEC>  SUCCESS 7417445701.5
2024-06-13 10:30:35,811	[INFO]	29      SUCCESS              *7417445701.500000 (85.87%) [5 edit(s)]  
2024-06-13 10:30:35,811	[DEBUG]	patch(29)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -607,7 +607,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -738,7 +739,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -780,20 +781,7 @@
                 }/*auto*/
 
             Lit next = lit_Undef;
-            while (decisionLevel() < assumptions.size()){
-                // Perform user provided assumption:
-                Lit p = assumptions[decisionLevel()];
-                if (value(p) == l_True){
-                    // Dummy decision level:
-                    newDecisionLevel();
-                }else if (value(p) == l_False){
-                    analyzeFinal(~p, conflict);
-                    return l_False;
-                }else{
-                    next = p;
-                    break;
-                }
-            }
+            
 
             if (next == lit_Undef){
                 // New variable decision:
@@ -877,6 +865,7 @@
 
     if (verbosity >= 1){
         printf("============================[ Search Statistics ]==============================\n");
+        static DoubleOption  opt_random_seed       (_cat, "rnd-seed",    "Used by the random variable selection",         91648253, DoubleRange(0, false, HUGE_VAL, false));
         printf("| Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
         printf("|           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
         printf("===============================================================================\n");

2024-06-13 10:30:57,190	[DEBUG]	EXEC>  SUCCESS 7421679567.0
2024-06-13 10:30:57,190	[INFO]	30      SUCCESS               7421679567.000000 (85.92%) [4 edit(s)]  
2024-06-13 10:30:57,190	[DEBUG]	patch(30)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308))"
2024-06-13 10:31:18,508	[DEBUG]	EXEC>  SUCCESS 7419049032.5
2024-06-13 10:31:18,509	[INFO]	31      SUCCESS               7419049032.500000 (85.89%) [6 edit(s)]  
2024-06-13 10:31:18,509	[DEBUG]	patch(31)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 135), ('core/Solver.cc.xml', 'stmt', 172))"
2024-06-13 10:31:39,917	[DEBUG]	EXEC>  SUCCESS 7417420602.0
2024-06-13 10:31:39,918	[INFO]	32      SUCCESS              *7417420602.000000 (85.87%) [6 edit(s)]  
2024-06-13 10:31:39,918	[DEBUG]	patch(32)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -607,7 +607,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -738,7 +739,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -780,20 +781,7 @@
                 }/*auto*/
 
             Lit next = lit_Undef;
-            while (decisionLevel() < assumptions.size()){
-                // Perform user provided assumption:
-                Lit p = assumptions[decisionLevel()];
-                if (value(p) == l_True){
-                    // Dummy decision level:
-                    newDecisionLevel();
-                }else if (value(p) == l_False){
-                    analyzeFinal(~p, conflict);
-                    return l_False;
-                }else{
-                    next = p;
-                    break;
-                }
-            }
+            
 
             if (next == lit_Undef){
                 // New variable decision:
@@ -877,6 +865,7 @@
 
     if (verbosity >= 1){
         printf("============================[ Search Statistics ]==============================\n");
+        static DoubleOption  opt_random_seed       (_cat, "rnd-seed",    "Used by the random variable selection",         91648253, DoubleRange(0, false, HUGE_VAL, false));
         printf("| Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
         printf("|           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
         printf("===============================================================================\n");
@@ -954,7 +943,7 @@
             fprintf(stderr, "could not open file %s\n", file), exit(1);
         }/*auto*/
     toDimacs(f, assumps);
-    fclose(f);
+    
 }
 
 

2024-06-13 10:32:01,345	[DEBUG]	EXEC>  SUCCESS 7417681276.0
2024-06-13 10:32:01,345	[INFO]	33      SUCCESS               7417681276.000000 (85.87%) [5 edit(s)]  
2024-06-13 10:32:01,345	[DEBUG]	patch(33)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384))"
2024-06-13 10:32:15,953	[DEBUG]	EXEC>  SUCCESS 5166599839.5
2024-06-13 10:32:15,954	[INFO]	34      SUCCESS              *5166599839.500000 (59.81%) [7 edit(s)]  
2024-06-13 10:32:15,954	[DEBUG]	patch(34)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -332,6 +332,7 @@
                     }/*auto*/
             }
         }
+        learntsize_adjust_confl *= learntsize_adjust_inc;
         
         // Select next clause to look at:
         while (!seen[var(trail[index--])])/*auto*/{
@@ -607,7 +608,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -738,7 +740,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -780,20 +782,7 @@
                 }/*auto*/
 
             Lit next = lit_Undef;
-            while (decisionLevel() < assumptions.size()){
-                // Perform user provided assumption:
-                Lit p = assumptions[decisionLevel()];
-                if (value(p) == l_True){
-                    // Dummy decision level:
-                    newDecisionLevel();
-                }else if (value(p) == l_False){
-                    analyzeFinal(~p, conflict);
-                    return l_False;
-                }else{
-                    next = p;
-                    break;
-                }
-            }
+            
 
             if (next == lit_Undef){
                 // New variable decision:
@@ -877,6 +866,7 @@
 
     if (verbosity >= 1){
         printf("============================[ Search Statistics ]==============================\n");
+        static DoubleOption  opt_random_seed       (_cat, "rnd-seed",    "Used by the random variable selection",         91648253, DoubleRange(0, false, HUGE_VAL, false));
         printf("| Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
         printf("|           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
         printf("===============================================================================\n");
@@ -954,7 +944,7 @@
             fprintf(stderr, "could not open file %s\n", file), exit(1);
         }/*auto*/
     toDimacs(f, assumps);
-    fclose(f);
+    
 }
 
 

2024-06-13 10:32:16,220	[INFO]	35      COMPILE_CODE_ERROR    None (--) [8 edit(s)]  
2024-06-13 10:32:16,220	[DEBUG]	patch(35)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 183), ('core/Solver.cc.xml', 'stmt', 240))"
2024-06-13 10:32:30,745	[DEBUG]	EXEC>  SUCCESS 5166590769.0
2024-06-13 10:32:30,745	[INFO]	36      SUCCESS              *5166590769.000000 (59.81%) [8 edit(s)]  
2024-06-13 10:32:30,745	[DEBUG]	patch(36)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -237,6 +237,7 @@
         for (int c = trail.size()-1; c >= trail_lim[level]; c--){
             Var      x  = var(trail[c]);
             assigns [x] = l_Undef;
+            Lit next = lit_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())
                 /*auto*/{
                     polarity[x] = sign(trail[c]);
@@ -332,6 +333,7 @@
                     }/*auto*/
             }
         }
+        learntsize_adjust_confl *= learntsize_adjust_inc;
         
         // Select next clause to look at:
         while (!seen[var(trail[index--])])/*auto*/{
@@ -607,7 +609,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -738,7 +741,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -780,20 +783,7 @@
                 }/*auto*/
 
             Lit next = lit_Undef;
-            while (decisionLevel() < assumptions.size()){
-                // Perform user provided assumption:
-                Lit p = assumptions[decisionLevel()];
-                if (value(p) == l_True){
-                    // Dummy decision level:
-                    newDecisionLevel();
-                }else if (value(p) == l_False){
-                    analyzeFinal(~p, conflict);
-                    return l_False;
-                }else{
-                    next = p;
-                    break;
-                }
-            }
+            
 
             if (next == lit_Undef){
                 // New variable decision:
@@ -877,6 +867,7 @@
 
     if (verbosity >= 1){
         printf("============================[ Search Statistics ]==============================\n");
+        static DoubleOption  opt_random_seed       (_cat, "rnd-seed",    "Used by the random variable selection",         91648253, DoubleRange(0, false, HUGE_VAL, false));
         printf("| Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
         printf("|           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
         printf("===============================================================================\n");
@@ -954,7 +945,7 @@
             fprintf(stderr, "could not open file %s\n", file), exit(1);
         }/*auto*/
     toDimacs(f, assumps);
-    fclose(f);
+    
 }
 
 

2024-06-13 10:32:31,017	[INFO]	37      COMPILE_CODE_ERROR    None (--) [9 edit(s)]  
2024-06-13 10:32:31,017	[DEBUG]	patch(37)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 359), ('core/Solver.cc.xml', 'stmt', 84))"
2024-06-13 10:32:31,037	[INFO]	38      SUCCESS               5166599839.500000 (59.81%) [7 edit(s)] [cached] 
2024-06-13 10:32:31,038	[DEBUG]	patch(38)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295))"
2024-06-13 10:32:31,064	[INFO]	39      SUCCESS              +5166590769.000000 (59.81%) [9 edit(s)] [cached] 
2024-06-13 10:32:31,064	[DEBUG]	patch(39)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 465), ('core/Solver.cc.xml', 'stmt', 4)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315))"
2024-06-13 10:32:45,716	[DEBUG]	EXEC>  SUCCESS 5166579185.5
2024-06-13 10:32:45,716	[INFO]	40      SUCCESS              *5166579185.500000 (59.81%) [8 edit(s)]  
2024-06-13 10:32:45,716	[DEBUG]	patch(40)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -237,6 +237,7 @@
         for (int c = trail.size()-1; c >= trail_lim[level]; c--){
             Var      x  = var(trail[c]);
             assigns [x] = l_Undef;
+            Lit next = lit_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())
                 /*auto*/{
                     polarity[x] = sign(trail[c]);
@@ -332,6 +333,7 @@
                     }/*auto*/
             }
         }
+        learntsize_adjust_confl *= learntsize_adjust_inc;
         
         // Select next clause to look at:
         while (!seen[var(trail[index--])])/*auto*/{
@@ -607,7 +609,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -738,7 +741,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -780,20 +783,7 @@
                 }/*auto*/
 
             Lit next = lit_Undef;
-            while (decisionLevel() < assumptions.size()){
-                // Perform user provided assumption:
-                Lit p = assumptions[decisionLevel()];
-                if (value(p) == l_True){
-                    // Dummy decision level:
-                    newDecisionLevel();
-                }else if (value(p) == l_False){
-                    analyzeFinal(~p, conflict);
-                    return l_False;
-                }else{
-                    next = p;
-                    break;
-                }
-            }
+            
 
             if (next == lit_Undef){
                 // New variable decision:
@@ -954,7 +944,7 @@
             fprintf(stderr, "could not open file %s\n", file), exit(1);
         }/*auto*/
     toDimacs(f, assumps);
-    fclose(f);
+    
 }
 
 

2024-06-13 10:33:00,375	[DEBUG]	EXEC>  SUCCESS 5166696789.5
2024-06-13 10:33:00,375	[INFO]	41      SUCCESS               5166696789.500000 (59.81%) [9 edit(s)]  
2024-06-13 10:33:00,376	[DEBUG]	patch(41)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 14))"
2024-06-13 10:33:14,914	[DEBUG]	EXEC>  SUCCESS 5166706468.5
2024-06-13 10:33:14,915	[INFO]	42      SUCCESS               5166706468.500000 (59.81%) [7 edit(s)]  
2024-06-13 10:33:14,915	[DEBUG]	patch(42)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315))"
2024-06-13 10:33:21,834	[DEBUG]	EXEC>  SUCCESS 1989904767.0
2024-06-13 10:33:21,834	[INFO]	43      SUCCESS              *1989904767.000000 (23.04%) [9 edit(s)]  
2024-06-13 10:33:21,834	[DEBUG]	patch(43)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 279))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -237,6 +237,7 @@
         for (int c = trail.size()-1; c >= trail_lim[level]; c--){
             Var      x  = var(trail[c]);
             assigns [x] = l_Undef;
+            Lit next = lit_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())
                 /*auto*/{
                     polarity[x] = sign(trail[c]);
@@ -332,6 +333,7 @@
                     }/*auto*/
             }
         }
+        learntsize_adjust_confl *= learntsize_adjust_inc;
         
         // Select next clause to look at:
         while (!seen[var(trail[index--])])/*auto*/{
@@ -607,7 +609,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -723,7 +726,7 @@
         CRef confl = propagate();
         if (confl != CRef_Undef){
             // CONFLICT
-            conflicts++; conflictC++;
+            conflicts++; 
             if (decisionLevel() == 0) /*auto*/{
                 return l_False;
             }/*auto*/
@@ -738,7 +741,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -780,20 +783,7 @@
                 }/*auto*/
 
             Lit next = lit_Undef;
-            while (decisionLevel() < assumptions.size()){
-                // Perform user provided assumption:
-                Lit p = assumptions[decisionLevel()];
-                if (value(p) == l_True){
-                    // Dummy decision level:
-                    newDecisionLevel();
-                }else if (value(p) == l_False){
-                    analyzeFinal(~p, conflict);
-                    return l_False;
-                }else{
-                    next = p;
-                    break;
-                }
-            }
+            
 
             if (next == lit_Undef){
                 // New variable decision:
@@ -954,7 +944,7 @@
             fprintf(stderr, "could not open file %s\n", file), exit(1);
         }/*auto*/
     toDimacs(f, assumps);
-    fclose(f);
+    
 }
 
 

2024-06-13 10:33:28,723	[DEBUG]	EXEC>  SUCCESS 2040212590.5
2024-06-13 10:33:28,724	[INFO]	44      SUCCESS               2040212590.500000 (23.62%) [10 edit(s)]  
2024-06-13 10:33:28,724	[DEBUG]	patch(44)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 279)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 51), ('core/Solver.cc.xml', 'stmt', 258))"
2024-06-13 10:33:28,763	[INFO]	45      SUCCESS              +1989904767.000000 (23.04%) [8 edit(s)] [cached] 
2024-06-13 10:33:28,763	[DEBUG]	patch(45)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 279))"
2024-06-13 10:33:28,783	[INFO]	46      SUCCESS               5166579185.500000 (59.81%) [7 edit(s)] [cached] 
2024-06-13 10:33:28,783	[DEBUG]	patch(46)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315))"
2024-06-13 10:33:30,033	[INFO]	47      TEST_CODE_ERROR       None (--) [9 edit(s)]  
2024-06-13 10:33:30,033	[DEBUG]	patch(47)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 279)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 122))"
2024-06-13 10:33:31,396	[INFO]	48      TEST_CODE_ERROR       None (--) [9 edit(s)]  
2024-06-13 10:33:31,396	[DEBUG]	patch(48)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 279)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 179), ('core/Solver.cc.xml', 'stmt', 232))"
2024-06-13 10:33:38,318	[DEBUG]	EXEC>  SUCCESS 1989846087.0
2024-06-13 10:33:38,318	[INFO]	49      SUCCESS              *1989846087.000000 (23.04%) [9 edit(s)]  
2024-06-13 10:33:38,318	[DEBUG]	patch(49)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 279)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 498), ('core/Solver.cc.xml', 'stmt', 304))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -237,6 +237,7 @@
         for (int c = trail.size()-1; c >= trail_lim[level]; c--){
             Var      x  = var(trail[c]);
             assigns [x] = l_Undef;
+            Lit next = lit_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())
                 /*auto*/{
                     polarity[x] = sign(trail[c]);
@@ -332,6 +333,7 @@
                     }/*auto*/
             }
         }
+        learntsize_adjust_confl *= learntsize_adjust_inc;
         
         // Select next clause to look at:
         while (!seen[var(trail[index--])])/*auto*/{
@@ -607,7 +609,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -723,7 +726,7 @@
         CRef confl = propagate();
         if (confl != CRef_Undef){
             // CONFLICT
-            conflicts++; conflictC++;
+            conflicts++; 
             if (decisionLevel() == 0) /*auto*/{
                 return l_False;
             }/*auto*/
@@ -738,7 +741,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -780,20 +783,7 @@
                 }/*auto*/
 
             Lit next = lit_Undef;
-            while (decisionLevel() < assumptions.size()){
-                // Perform user provided assumption:
-                Lit p = assumptions[decisionLevel()];
-                if (value(p) == l_True){
-                    // Dummy decision level:
-                    newDecisionLevel();
-                }else if (value(p) == l_False){
-                    analyzeFinal(~p, conflict);
-                    return l_False;
-                }else{
-                    next = p;
-                    break;
-                }
-            }
+            
 
             if (next == lit_Undef){
                 // New variable decision:
@@ -941,6 +931,10 @@
             /*auto*/{
                 fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
             }/*auto*/
+            if (decisionLevel() == 0 && !simplify())
+                /*auto*/{
+                    return l_False;
+                }/*auto*/
         }/*auto*/
     fprintf(f, "0\n");
 }
@@ -954,7 +948,7 @@
             fprintf(stderr, "could not open file %s\n", file), exit(1);
         }/*auto*/
     toDimacs(f, assumps);
-    fclose(f);
+    
 }
 
 

2024-06-13 10:35:19,712	[INFO]	50      TEST_TIMEOUT          None (--) [10 edit(s)]  
2024-06-13 10:35:19,712	[DEBUG]	patch(50)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 279)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 498), ('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 90), ('core/Solver.cc.xml', 'stmt', 307))"
2024-06-13 10:35:19,985	[INFO]	51      COMPILE_CODE_ERROR    None (--) [10 edit(s)]  
2024-06-13 10:35:19,986	[DEBUG]	patch(51)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 279)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 498), ('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 9), ('core/Solver.cc.xml', 'stmt', 362))"
2024-06-13 10:35:21,390	[INFO]	52      TEST_CODE_ERROR       None (--) [10 edit(s)]  
2024-06-13 10:35:21,391	[DEBUG]	patch(52)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 279)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 498), ('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 189))"
2024-06-13 10:35:21,671	[INFO]	53      COMPILE_CODE_ERROR    None (--) [10 edit(s)]  
2024-06-13 10:35:21,671	[DEBUG]	patch(53)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 279)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 498), ('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 130))"
2024-06-13 10:35:21,930	[INFO]	54      COMPILE_CODE_ERROR    None (--) [10 edit(s)]  
2024-06-13 10:35:21,930	[DEBUG]	patch(54)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 279)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 498), ('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 165), ('core/Solver.cc.xml', 'stmt', 121))"
2024-06-13 10:35:36,571	[DEBUG]	EXEC>  SUCCESS 5166554584.5
2024-06-13 10:35:36,571	[INFO]	55      SUCCESS               5166554584.500000 (59.81%) [8 edit(s)]  
2024-06-13 10:35:36,572	[DEBUG]	patch(55)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 498), ('core/Solver.cc.xml', 'stmt', 304))"
2024-06-13 10:35:43,508	[DEBUG]	EXEC>  SUCCESS 1973311426.5
2024-06-13 10:35:43,508	[INFO]	56      SUCCESS              *1973311426.500000 (22.84%) [8 edit(s)]  
2024-06-13 10:35:43,508	[DEBUG]	patch(56)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 279)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 498), ('core/Solver.cc.xml', 'stmt', 304))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -237,6 +237,7 @@
         for (int c = trail.size()-1; c >= trail_lim[level]; c--){
             Var      x  = var(trail[c]);
             assigns [x] = l_Undef;
+            Lit next = lit_Undef;
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())
                 /*auto*/{
                     polarity[x] = sign(trail[c]);
@@ -332,6 +333,7 @@
                     }/*auto*/
             }
         }
+        learntsize_adjust_confl *= learntsize_adjust_inc;
         
         // Select next clause to look at:
         while (!seen[var(trail[index--])])/*auto*/{
@@ -607,7 +609,8 @@
 void Solver::reduceDB()
 {
     int     i, j;
-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity
+    double  extra_lim = cla_inc / learnts.size();
+    checkGarbage();    // Remove any clause below this activity
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
@@ -723,7 +726,7 @@
         CRef confl = propagate();
         if (confl != CRef_Undef){
             // CONFLICT
-            conflicts++; conflictC++;
+            conflicts++; 
             if (decisionLevel() == 0) /*auto*/{
                 return l_False;
             }/*auto*/
@@ -780,20 +783,7 @@
                 }/*auto*/
 
             Lit next = lit_Undef;
-            while (decisionLevel() < assumptions.size()){
-                // Perform user provided assumption:
-                Lit p = assumptions[decisionLevel()];
-                if (value(p) == l_True){
-                    // Dummy decision level:
-                    newDecisionLevel();
-                }else if (value(p) == l_False){
-                    analyzeFinal(~p, conflict);
-                    return l_False;
-                }else{
-                    next = p;
-                    break;
-                }
-            }
+            
 
             if (next == lit_Undef){
                 // New variable decision:
@@ -941,6 +931,10 @@
             /*auto*/{
                 fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
             }/*auto*/
+            if (decisionLevel() == 0 && !simplify())
+                /*auto*/{
+                    return l_False;
+                }/*auto*/
         }/*auto*/
     fprintf(f, "0\n");
 }
@@ -954,7 +948,7 @@
             fprintf(stderr, "could not open file %s\n", file), exit(1);
         }/*auto*/
     toDimacs(f, assumps);
-    fclose(f);
+    
 }
 
 

2024-06-13 10:35:43,532	[INFO]	~~~~ END ~~~~
2024-06-13 10:35:43,532	[INFO]	
2024-06-13 10:35:43,532	[INFO]	==== REPORT ====
2024-06-13 10:35:43,532	[INFO]	Termination: time budget
2024-06-13 10:35:43,532	[INFO]	Retries: 2
2024-06-13 10:35:43,532	[INFO]	Log file: /home/jim/magpie/_magpie_logs/minisat_1718270565.log
2024-06-13 10:35:43,533	[INFO]	Patch file: _magpie_logs/minisat_1718270565.patch
2024-06-13 10:35:43,533	[INFO]	Diff file: _magpie_logs/minisat_1718270565.diff
2024-06-13 10:35:43,533	[INFO]	Reference fitness: 8638215664.500000
2024-06-13 10:35:43,533	[INFO]	Best fitness: 1973311426.500000
2024-06-13 10:35:43,533	[INFO]	
2024-06-13 10:35:43,535	[INFO]	==== BEST PATCH ====
SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 308), ('core/Solver.cc.xml', 'stmt', 265)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 309)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 384)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 130), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 89), ('core/Solver.cc.xml', 'stmt', 308)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 279)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 498), ('core/Solver.cc.xml', 'stmt', 304))
2024-06-13 10:35:43,535	[INFO]	
2024-06-13 10:35:43,535	[INFO]	==== DIFF ====
[1m--- before: core/Solver.cc[0m
[1m+++ after: core/Solver.cc[0m
[36m@@ -237,6 +237,7 @@[0m
         for (int c = trail.size()-1; c >= trail_lim[level]; c--){
             Var      x  = var(trail[c]);
             assigns [x] = l_Undef;
[32m+            Lit next = lit_Undef;[0m
             if (phase_saving > 1 || (phase_saving == 1) && c > trail_lim.last())
                 /*auto*/{
                     polarity[x] = sign(trail[c]);
[36m@@ -332,6 +333,7 @@[0m
                     }/*auto*/
             }
         }
[32m+        learntsize_adjust_confl *= learntsize_adjust_inc;[0m
         
         // Select next clause to look at:
         while (!seen[var(trail[index--])])/*auto*/{
[36m@@ -607,7 +609,8 @@[0m
 void Solver::reduceDB()
 {
     int     i, j;
[31m-    double  extra_lim = cla_inc / learnts.size();    // Remove any clause below this activity[0m
[32m+    double  extra_lim = cla_inc / learnts.size();[0m
[32m+    checkGarbage();    // Remove any clause below this activity[0m
 
     sort(learnts, reduceDB_lt(ca));
     // Don't delete binary or locked clauses. From the rest, delete clauses from the first half
[36m@@ -723,7 +726,7 @@[0m
         CRef confl = propagate();
         if (confl != CRef_Undef){
             // CONFLICT
[31m-            conflicts++; conflictC++;[0m
[32m+            conflicts++; [0m
             if (decisionLevel() == 0) /*auto*/{
                 return l_False;
             }/*auto*/
[36m@@ -780,20 +783,7 @@[0m
                 }/*auto*/
 
             Lit next = lit_Undef;
[31m-            while (decisionLevel() < assumptions.size()){[0m
[31m-                // Perform user provided assumption:[0m
[31m-                Lit p = assumptions[decisionLevel()];[0m
[31m-                if (value(p) == l_True){[0m
[31m-                    // Dummy decision level:[0m
[31m-                    newDecisionLevel();[0m
[31m-                }else if (value(p) == l_False){[0m
[31m-                    analyzeFinal(~p, conflict);[0m
[31m-                    return l_False;[0m
[31m-                }else{[0m
[31m-                    next = p;[0m
[31m-                    break;[0m
[31m-                }[0m
[31m-            }[0m
[32m+            [0m
 
             if (next == lit_Undef){
                 // New variable decision:
[36m@@ -941,6 +931,10 @@[0m
             /*auto*/{
                 fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
             }/*auto*/
[32m+            if (decisionLevel() == 0 && !simplify())[0m
[32m+                /*auto*/{[0m
[32m+                    return l_False;[0m
[32m+                }/*auto*/[0m
         }/*auto*/
     fprintf(f, "0\n");
 }
[36m@@ -954,7 +948,7 @@[0m
             fprintf(stderr, "could not open file %s\n", file), exit(1);
         }/*auto*/
     toDimacs(f, assumps);
[31m-    fclose(f);[0m
[32m+    [0m
 }
 
 

