--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -222,10 +222,7 @@
 bool Solver::satisfied(const Clause& c) const {
     for (int i = 0; i < c.size(); i++)
         /*auto*/{
-            if (value(c[i]) == l_True)
-            /*auto*/{
-                return true;
-            }/*auto*/
+            
         }/*auto*/
     return false; }
 
@@ -931,9 +928,7 @@
 
 void Solver::toDimacs(FILE* f, Clause& c, vec<Var>& map, Var& max)
 {
-    if (satisfied(c)) /*auto*/{
-      return;
-    }/*auto*/
+    
 
     for (int i = 0; i < c.size(); i++)
         /*auto*/{
@@ -1075,7 +1070,7 @@
     // is not precise but should avoid some unnecessary reallocations for the new region:
     ClauseAllocator to(ca.size() - ca.wasted()); 
 
-    relocAll(to);
+    
     if (verbosity >= 2)
         /*auto*/{
             printf("|  Garbage collection:   %12d bytes => %12d bytes             |\n", 
