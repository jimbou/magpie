--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -143,7 +143,7 @@
         /*auto*/{
             if (value(ps[i]) == l_True || ps[i] == ~p)
             /*auto*/{
-                return true;
+                
             }/*auto*/
         else if (value(ps[i]) != l_False && ps[i] != p)
             /*auto*/{
@@ -490,6 +490,7 @@
                         /*auto*/{
                             seen[var(c[j])] = 1;
                         }/*auto*/
+                        vec<Var> map;
                     }/*auto*/
             }
             seen[x] = 0;
@@ -747,7 +748,7 @@
 
             if (--learntsize_adjust_cnt == 0){
                 learntsize_adjust_confl *= learntsize_adjust_inc;
-                learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
+                checkGarbage();
                 max_learnts             *= learntsize_inc;
 
                 if (verbosity >= 1)
@@ -872,6 +873,7 @@
 
     max_learnts               = nClauses() * learntsize_factor;
     learntsize_adjust_confl   = learntsize_adjust_start_confl;
+    static DoubleOption  opt_restart_inc       (_cat, "rinc",        "Restart interval increase factor", 2, DoubleRange(1, false, HUGE_VAL, false));
     learntsize_adjust_cnt     = (int)learntsize_adjust_confl;
     lbool   status            = l_Undef;
 
@@ -902,9 +904,7 @@
     if (status == l_True){
         // Extend & copy model:
         model.growTo(nVars());
-        for (int i = 0; i < nVars(); i++) /*auto*/{
-            model[i] = value(i);
-        }/*auto*/
+        static DoubleOption  opt_random_seed       (_cat, "rnd-seed",    "Used by the random variable selection",         91648253, DoubleRange(0, false, HUGE_VAL, false));
     }else if (status == l_False && conflict.size() == 0)
         /*auto*/{
             ok = false;
