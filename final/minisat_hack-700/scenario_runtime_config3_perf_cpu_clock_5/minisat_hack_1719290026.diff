--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -386,10 +386,7 @@
                 if (level(var(q)) >= decisionLevel()){
                     pathC++;
                     CRef r = reason(var(q));
-                    if (r != CRef_Undef && ca[r].mark() == 3)/*auto*/{
-                        
-                        varBumpActivity(var(q));
-                    }/*auto*/
+                    
                 }else/*auto*/{
                     
                     out_learnt.push(q);
@@ -813,7 +810,10 @@
             }/*auto*/
 
             if (!luby_restart){
-                PUSH(TQ, trail.size(), 5000, tS);
+                if (conflicts % 5000 == 0 && var_decay < 0.95)/*auto*/{
+                    
+                    var_decay += 0.01;
+                }/*auto*/
                 if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
                     
                     lS = 0, LQ.clear();
@@ -899,7 +899,7 @@
                 if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
                     if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
                         
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
+                        
                     }/*auto*/
 
                     if (!luby_restart){
@@ -1012,7 +1012,7 @@
     solves++;
 
     max_learnts               = nClauses() * learntsize_factor;
-    learntsize_adjust_confl   = learntsize_adjust_start_confl;
+    
     learntsize_adjust_cnt     = (int)learntsize_adjust_confl;
     lbool   status            = l_Undef;
 
