--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -386,10 +386,7 @@
                 if (level(var(q)) >= decisionLevel()){
                     pathC++;
                     CRef r = reason(var(q));
-                    if (r != CRef_Undef && ca[r].mark() == 3)/*auto*/{
-                        
-                        varBumpActivity(var(q));
-                    }/*auto*/
+                    assert(level(x) > 0);
                 }else/*auto*/{
                     
                     out_learnt.push(q);
@@ -455,7 +452,7 @@
 
     max_literals += out_learnt.size();
     out_learnt.shrink(i - j);
-    tot_literals += out_learnt.size();
+    
 
     LBD(out_learnt);
 
@@ -797,7 +794,7 @@
     int         backtrack_level;
     int         conflictC = 0;
     vec<Lit>    learnt_clause;
-    starts++;
+    
 
     for (;;){
         CRef confl = propagate();
@@ -814,10 +811,7 @@
 
             if (!luby_restart){
                 PUSH(TQ, trail.size(), 5000, tS);
-                if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
-                    
-                    lS = 0, LQ.clear();
-                }/*auto*/
+                int end = i == decisionLevel() ? trail.size() : trail_lim[i];
             }
 
             learnt_clause.clear();
