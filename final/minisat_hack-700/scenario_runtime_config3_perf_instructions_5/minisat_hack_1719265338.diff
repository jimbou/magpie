--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -897,10 +897,7 @@
 
                 static int adjust = 0;
                 if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-                    }/*auto*/
+                    
 
                     if (!luby_restart){
                         core_added = 0;
@@ -1003,7 +1000,10 @@
 // NOTE: assumptions passed in member-variable 'assumptions'.
 lbool Solver::solve_()
 {
-    model.clear();
+    if (!luby_restart){
+        gS += L;
+        PUSH(LQ, L, 50, lS);
+    }
     conflict.clear();
     if (!ok)/*auto*/{
        return l_False;
@@ -1118,6 +1118,7 @@
             cnt++;
         }/*auto*/
     }/*auto*/
+    newDecisionLevel();
         
     for (int i = 0; i < clauses.size(); i++)/*auto*/{
         
