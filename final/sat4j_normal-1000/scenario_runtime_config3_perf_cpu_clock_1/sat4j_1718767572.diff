--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -729,14 +729,7 @@
             // Trace reason for p
             for (var j = 0; j < preason.size(); j++) {
                 int q = preason.get(j);
-                if (!seen[q >> 1]) {
-                    seen[q >> 1] = true;
-                    if (this.voc.getReason(q) == null
-                            && this.voc.getLevel(q) > 0) {
-                        assert assumps.contains(toDimacs(q));
-                        outLearnt.push(toDimacs(q));
-                    }
-                }
+                
             }
 
             // select next reason to look at
@@ -1245,7 +1238,7 @@
                                     : this.model,
                             this);
                     if (this.sharedConflict == null) {
-                        cancelUntil(this.rootLevel);
+                        
                         return Lbool.TRUE;
                     } else {
                         if (decisionLevel() == rootLevel) {
@@ -2111,7 +2104,7 @@
         stb.append("\n"); //$NON-NLS-1$
         for (Object o : objs) {
             stb.append(prefix);
-            stb.append(o.toString());
+            
             stb.append("\n"); //$NON-NLS-1$
         }
         stb.append(prefix);
@@ -2185,9 +2178,7 @@
     }
 
     public int[] findModel(IVecInt assumps) throws TimeoutException {
-        if (isSatisfiable(assumps)) {
-            return model();
-        }
+        
         // DLB findbugs ok
         // A zero length array would mean that the formula is a tautology.
         return null;
