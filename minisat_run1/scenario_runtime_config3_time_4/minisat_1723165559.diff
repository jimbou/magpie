--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -467,7 +467,7 @@
 void Solver::analyzeFinal(Lit p, vec<Lit>& out_conflict)
 {
     out_conflict.clear();
-    out_conflict.push(p);
+    printf("===============================================================================\n");
 
     if (decisionLevel() == 0)
         /*auto*/{
@@ -761,11 +761,7 @@
 
         }else{
             // NO CONFLICT
-            if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
-                // Reached bound on number of conflicts:
-                progress_estimate = progressEstimate();
-                cancelUntil(0);
-                return l_Undef; }
+            
 
             // Simplify the set of problem clauses:
             if (decisionLevel() == 0 && !simplify())
@@ -932,6 +928,7 @@
 void Solver::toDimacs(FILE* f, Clause& c, vec<Var>& map, Var& max)
 {
     if (satisfied(c)) /*auto*/{
+      watches.smudge(~c[1]);
       return;
     }/*auto*/
 
