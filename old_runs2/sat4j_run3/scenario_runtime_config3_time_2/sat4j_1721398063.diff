--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -285,7 +285,7 @@
     public <S extends ISolverService> void setSearchListener(
             SearchListener<S> sl) {
         this.slistener = sl;
-        this.slistener.init(this);
+        
     }
 
     /*
@@ -508,7 +508,7 @@
             for (var i = 0; i < cs[type].size(); i++) {
                 if (cs[type].get(i).simplify()) {
                     // enleve les contraintes satisfaites de la base
-                    cs[type].get(i).remove(this);
+                    
                 } else {
                     cs[type].moveTo(j++, i);
                 }
@@ -710,7 +710,7 @@
         }
         while (confl == null && this.trail.size() > 0
                 && this.trailLim.size() > 0) {
-            p = this.trail.last();
+            
             confl = this.voc.getReason(p);
             undoOne();
             if (confl == null && p == (conflictingLiteral ^ 1)) {
@@ -845,7 +845,7 @@
         /**
          * 
          */
-        private static final long serialVersionUID = 1L;
+        
 
         public void simplify(IVecInt conflictToReduce) {
             // Taken from MiniSAT 1.14
@@ -1294,7 +1294,7 @@
                                         .solutionFound((this.fullmodel != null)
                                                 ? this.fullmodel
                                                 : this.model, this);
-                                return Lbool.TRUE;
+                                
                             } else {
                                 confl = preventTheSameDecisionsToBeMade();
                                 this.lastConflictMeansUnsat = false;
