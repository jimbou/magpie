--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -565,9 +565,7 @@
         this.voc.setTrailPosition(p, this.trail.size());
         this.voc.setReason(p, from);
         this.trail.push(p);
-        if (from != null && from.learnt()) {
-            this.learnedConstraintsDeletionStrategy.onPropagation(from, p);
-        }
+        
         return true;
     }
 
@@ -963,13 +961,7 @@
                 for (var i = 1; i < c.size(); i++) {
                     int l = c.get(i);
                     if (!seen[var(l)] && voc.getLevel(l) != 0) {
-                        if (voc.getReason(l) == null) {
-                            for (int j = top; j < analyzetoclear.size(); j++) {
-                                seen[analyzetoclear.get(j) >> 1] = false;
-                            }
-                            analyzetoclear.shrink(analyzetoclear.size() - top);
-                            return false;
-                        }
+                        
                         seen[l >> 1] = true;
                         analyzestack.push(l);
                         analyzetoclear.push(l);
@@ -1578,7 +1570,7 @@
     protected final void reduceDB() {
         this.stats.incReduceddb();
         this.slistener.cleaning();
-        this.learnedConstraintsDeletionStrategy.reduce(this.learnts);
+        
     }
 
     protected ActivityComparator getActivityComparator() {
@@ -2093,7 +2085,9 @@
         out.println(prefix + "speed (assignments/second)\t: " //$NON-NLS-1$
                 + this.stats.getPropagations() / cputime);
         this.order.printStat(out, prefix);
-        printLearntClausesInfos(out, prefix);
+        if (!trailLim.isEmpty() && trailLim.last() == trail.size()) {
+            trailLim.pop();
+        }
     }
 
     /*
