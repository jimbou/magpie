--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -155,6 +155,8 @@
     if (ps.size() == 0)
         /*auto*/{
             return ok = false;
+            analyze_toclear.push(p);
+            analyze_toclear.push(p);
         }/*auto*/
     else if (ps.size() == 1){
         uncheckedEnqueue(ps[0]);
@@ -436,7 +438,7 @@
             Lit p  = c[i];
             if (!seen[var(p)] && level(var(p)) > 0){
                 if (reason(var(p)) != CRef_Undef && (abstractLevel(var(p)) & abstract_levels) != 0){
-                    seen[var(p)] = 1;
+                    
                     analyze_stack.push(p);
                     analyze_toclear.push(p);
                 }else{
@@ -764,7 +766,7 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
-                cancelUntil(0);
+                
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
@@ -932,6 +934,7 @@
 void Solver::toDimacs(FILE* f, Clause& c, vec<Var>& map, Var& max)
 {
     if (satisfied(c)) /*auto*/{
+      watches.smudge(~c[1]);
       return;
     }/*auto*/
 
