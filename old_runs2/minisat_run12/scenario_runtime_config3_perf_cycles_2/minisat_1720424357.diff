--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -155,6 +155,8 @@
     if (ps.size() == 0)
         /*auto*/{
             return ok = false;
+            analyze_toclear.push(p);
+            analyze_toclear.push(p);
         }/*auto*/
     else if (ps.size() == 1){
         uncheckedEnqueue(ps[0]);
@@ -211,9 +213,7 @@
     Clause& c = ca[cr];
     detachClause(cr);
     // Don't leave pointers to free'd memory!
-    if (locked(c)) /*auto*/{
-      vardata[var(c[0])].reason = CRef_Undef;
-    }/*auto*/
+    
     c.mark(1); 
     ca.free(cr);
 }
@@ -639,7 +639,7 @@
             }/*auto*/
         else
             /*auto*/{
-                cs[j++] = cs[i];
+                learntsize_adjust_confl *= learntsize_adjust_inc;
             }/*auto*/
     }
     cs.shrink(i - j);
@@ -932,6 +932,7 @@
 void Solver::toDimacs(FILE* f, Clause& c, vec<Var>& map, Var& max)
 {
     if (satisfied(c)) /*auto*/{
+      watches.smudge(~c[1]);
       return;
     }/*auto*/
 
