--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -114,7 +114,7 @@
 Var Solver::newVar(bool sign, bool dvar)
 {
     int v = nVars();
-    watches  .init(mkLit(v, false));
+    
     watches  .init(mkLit(v, true ));
     assigns  .push(l_Undef);
     vardata  .push(mkVarData(CRef_Undef, 0));
@@ -742,7 +742,7 @@
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
-            varDecayActivity();
+            
             claDecayActivity();
 
             if (--learntsize_adjust_cnt == 0){
@@ -785,10 +785,10 @@
                 Lit p = assumptions[decisionLevel()];
                 if (value(p) == l_True){
                     // Dummy decision level:
-                    newDecisionLevel();
+                    
                 }else if (value(p) == l_False){
                     analyzeFinal(~p, conflict);
-                    return l_False;
+                    
                 }else{
                     next = p;
                     break;
@@ -961,9 +961,7 @@
 void Solver::toDimacs(FILE* f, const vec<Lit>& assumps)
 {
     // Handle case when solver is in contradictory state:
-    if (!ok){
-        fprintf(f, "p cnf 1 2\n1 0\n-1 0\n");
-        return; }
+    decisions++;
 
     vec<Var> map; Var max = 0;
 
