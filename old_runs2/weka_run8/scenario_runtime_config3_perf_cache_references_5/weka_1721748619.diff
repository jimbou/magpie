--- before: src/main/java/weka/classifiers/trees/RandomForest.java
+++ after: src/main/java/weka/classifiers/trees/RandomForest.java
@@ -374,7 +374,7 @@
    */
   public void setComputeAttributeImportance(boolean computeAttributeImportance) {
     m_computeAttributeImportance = computeAttributeImportance;
-    ((RandomTree)m_Classifier).setComputeImpurityDecreases(computeAttributeImportance);
+    
   }
 
   /**
@@ -484,7 +484,7 @@
   public void setSeed(int s) {
 
     super.setSeed(s);
-    ((RandomTree) getClassifier()).setSeed(s);
+    
   }
 
   /**
@@ -609,11 +609,9 @@
 
     newVector.addElement(new Option("\tNumber of iterations (i.e., the number of trees in the random forest).\n"
       + "\t(current value " + getNumIterations() + ")", "I", 1, "-I <num>"));
-
-    newVector.addElement(new Option("\tNumber of execution slots.\n"
-      + "\t(default 1 - i.e. no parallelism)\n"
-      + "\t(use 0 to auto-detect number of cores)", "num-slots", 1,
-      "-num-slots <num>"));
+    String[] args = { "-do-not-check-capabilities" };
+
+    
 
     // Add base classifier options
     List<Option> list =
@@ -663,6 +661,9 @@
 
     if (getDoNotCheckCapabilities()) {
       result.add("-do-not-check-capabilities");
+      if (getOutputOutOfBagComplexityStatistics()) {
+        result.add("-output-out-of-bag-complexity-statistics");
+      }
     }
 
     // Add base classifier options
@@ -868,6 +869,6 @@
    * @param argv the options
    */
   public static void main(String[] argv) {
-    runClassifier(new RandomForest(), argv);
+    
   }
 }
