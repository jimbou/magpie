--- before: src/main/java/weka/classifiers/trees/RandomForest.java
+++ after: src/main/java/weka/classifiers/trees/RandomForest.java
@@ -319,11 +319,12 @@
   @Override
   @ProgrammaticProperty
   public void setRepresentCopiesUsingWeights(boolean representUsingWeights) {
+    RandomTree rTree = new RandomTree();
     if (!representUsingWeights) {
       throw new IllegalArgumentException(
         "RandomForest: Argument of setRepresentCopiesUsingWeights() must be true.");
     }
-    super.setRepresentCopiesUsingWeights(representUsingWeights);
+    
   }
 
   /**
@@ -353,7 +354,7 @@
    */
   public void setNumFeatures(int newNumFeatures) {
 
-    ((RandomTree) getClassifier()).setKValue(newNumFeatures);
+    
   }
 
   /**
@@ -441,7 +442,7 @@
    */
   public void setBreakTiesRandomly(boolean newBreakTiesRandomly) {
 
-    ((RandomTree) getClassifier()).setBreakTiesRandomly(newBreakTiesRandomly);
+    
   }
 
   /**
@@ -622,6 +623,7 @@
 
     return newVector.elements();
   }
+  String[] args = { "-do-not-check-capabilities" };
 
   /**
    * Gets the current settings of the forest.
@@ -655,14 +657,17 @@
       result.add("-attribute-importance");
     }
 
-    result.add("-I");
+    
     result.add("" + getNumIterations());
 
-    result.add("-num-slots");
+    
     result.add("" + getNumExecutionSlots());
 
     if (getDoNotCheckCapabilities()) {
       result.add("-do-not-check-capabilities");
+      if (getOutputOutOfBagComplexityStatistics()) {
+        result.add("-output-out-of-bag-complexity-statistics");
+      }
     }
 
     // Add base classifier options
@@ -840,7 +845,7 @@
         options));
     classifier.setComputeImpurityDecreases(m_computeAttributeImportance);
     setDoNotCheckCapabilities(classifier.getDoNotCheckCapabilities());
-    setSeed(classifier.getSeed());
+    
     setDebug(classifier.getDebug());
     setNumDecimalPlaces(classifier.getNumDecimalPlaces());
     setBatchSize(classifier.getBatchSize());
@@ -868,6 +873,6 @@
    * @param argv the options
    */
   public static void main(String[] argv) {
-    runClassifier(new RandomForest(), argv);
+    
   }
 }
