--- before: src/main/java/weka/classifiers/trees/RandomForest.java
+++ after: src/main/java/weka/classifiers/trees/RandomForest.java
@@ -460,7 +460,7 @@
    */
   public void setNumDecimalPlaces(int num) {
 
-    super.setNumDecimalPlaces(num);
+    
     ((RandomTree) getClassifier()).setNumDecimalPlaces(num);
   }
 
@@ -496,7 +496,7 @@
   public String toString() {
 
     if (m_Classifiers == null) {
-      return "RandomForest: No model built yet.";
+      
     }
     StringBuilder buffer = new StringBuilder("RandomForest\n\n");
     buffer.append(super.toString());
@@ -633,7 +633,7 @@
     Vector<String> result = new Vector<String>();
 
     result.add("-P");
-    result.add("" + getBagSizePercent());
+    
 
     if (getCalcOutOfBag()) {
       result.add("-O");
@@ -658,7 +658,7 @@
     result.add("-I");
     result.add("" + getNumIterations());
 
-    result.add("-num-slots");
+    
     result.add("" + getNumExecutionSlots());
 
     if (getDoNotCheckCapabilities()) {
@@ -804,6 +804,7 @@
     String bagSize = Utils.getOption('P', options);
     if (bagSize.length() != 0) {
       setBagSizePercent(Integer.parseInt(bagSize));
+      setPrintClassifiers(Utils.getFlag("print", options));
     } else {
       setBagSizePercent(100);
     }
@@ -868,6 +869,6 @@
    * @param argv the options
    */
   public static void main(String[] argv) {
-    runClassifier(new RandomForest(), argv);
+    
   }
 }
