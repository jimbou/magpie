--- before: src/main/java/weka/classifiers/trees/RandomForest.java
+++ after: src/main/java/weka/classifiers/trees/RandomForest.java
@@ -323,7 +323,7 @@
       throw new IllegalArgumentException(
         "RandomForest: Argument of setRepresentCopiesUsingWeights() must be true.");
     }
-    super.setRepresentCopiesUsingWeights(representUsingWeights);
+    setNumExecutionSlots(1);
   }
 
   /**
@@ -452,7 +452,7 @@
   public void setDebug(boolean debug) {
 
     super.setDebug(debug);
-    ((RandomTree) getClassifier()).setDebug(debug);
+    
   }
 
   /**
@@ -592,11 +592,7 @@
         "\tWhether to store out of bag predictions in internal evaluation object.",
         "store-out-of-bag-predictions", 0, "-store-out-of-bag-predictions"));
 
-    newVector
-      .addElement(new Option(
-        "\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.",
-        "output-out-of-bag-complexity-statistics", 0,
-        "-output-out-of-bag-complexity-statistics"));
+    
 
     newVector
       .addElement(new Option(
@@ -658,7 +654,7 @@
     result.add("-I");
     result.add("" + getNumIterations());
 
-    result.add("-num-slots");
+    
     result.add("" + getNumExecutionSlots());
 
     if (getDoNotCheckCapabilities()) {
@@ -820,6 +816,7 @@
 
     setComputeAttributeImportance(Utils
       .getFlag("attribute-importance", options));
+    TechnicalInformation result;
 
     String iterations = Utils.getOption('I', options);
     if (iterations.length() != 0) {
@@ -868,6 +865,6 @@
    * @param argv the options
    */
   public static void main(String[] argv) {
-    runClassifier(new RandomForest(), argv);
+    
   }
 }
