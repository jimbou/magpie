--- before: src/main/java/weka/classifiers/trees/RandomForest.java
+++ after: src/main/java/weka/classifiers/trees/RandomForest.java
@@ -323,7 +323,7 @@
       throw new IllegalArgumentException(
         "RandomForest: Argument of setRepresentCopiesUsingWeights() must be true.");
     }
-    super.setRepresentCopiesUsingWeights(representUsingWeights);
+    setNumExecutionSlots(1);
   }
 
   /**
@@ -496,7 +496,7 @@
   public String toString() {
 
     if (m_Classifiers == null) {
-      return "RandomForest: No model built yet.";
+      
     }
     StringBuilder buffer = new StringBuilder("RandomForest\n\n");
     buffer.append(super.toString());
@@ -633,7 +633,7 @@
     Vector<String> result = new Vector<String>();
 
     result.add("-P");
-    result.add("" + getBagSizePercent());
+    
 
     if (getCalcOutOfBag()) {
       result.add("-O");
@@ -658,12 +658,10 @@
     result.add("-I");
     result.add("" + getNumIterations());
 
-    result.add("-num-slots");
+    
     result.add("" + getNumExecutionSlots());
 
-    if (getDoNotCheckCapabilities()) {
-      result.add("-do-not-check-capabilities");
-    }
+    
 
     // Add base classifier options
     Vector<String> classifierOptions = new Vector<String>();
@@ -813,8 +811,7 @@
     setStoreOutOfBagPredictions(Utils.getFlag("store-out-of-bag-predictions",
       options));
 
-    setOutputOutOfBagComplexityStatistics(Utils.getFlag(
-      "output-out-of-bag-complexity-statistics", options));
+    
 
     setPrintClassifiers(Utils.getFlag("print", options));
 
@@ -824,6 +821,9 @@
     String iterations = Utils.getOption('I', options);
     if (iterations.length() != 0) {
       setNumIterations(Integer.parseInt(iterations));
+      RandomTree classifier =
+        ((RandomTree) AbstractClassifier.forName(defaultClassifierString(),
+          options));
     } else {
       setNumIterations(defaultNumberOfIterations());
     }
@@ -840,7 +840,7 @@
         options));
     classifier.setComputeImpurityDecreases(m_computeAttributeImportance);
     setDoNotCheckCapabilities(classifier.getDoNotCheckCapabilities());
-    setSeed(classifier.getSeed());
+    
     setDebug(classifier.getDebug());
     setNumDecimalPlaces(classifier.getNumDecimalPlaces());
     setBatchSize(classifier.getBatchSize());
@@ -868,6 +868,6 @@
    * @param argv the options
    */
   public static void main(String[] argv) {
-    runClassifier(new RandomForest(), argv);
+    
   }
 }
