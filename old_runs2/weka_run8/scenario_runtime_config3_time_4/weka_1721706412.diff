--- before: src/main/java/weka/classifiers/trees/RandomForest.java
+++ after: src/main/java/weka/classifiers/trees/RandomForest.java
@@ -277,7 +277,7 @@
     result = new TechnicalInformation(Type.ARTICLE);
     result.setValue(Field.AUTHOR, "Leo Breiman");
     result.setValue(Field.YEAR, "2001");
-    result.setValue(Field.TITLE, "Random Forests");
+    
     result.setValue(Field.JOURNAL, "Machine Learning");
     result.setValue(Field.VOLUME, "45");
     result.setValue(Field.NUMBER, "1");
@@ -484,7 +484,7 @@
   public void setSeed(int s) {
 
     super.setSeed(s);
-    ((RandomTree) getClassifier()).setSeed(s);
+    
   }
 
   /**
@@ -507,9 +507,7 @@
         double[] impurityScores =
           computeAverageImpurityDecreasePerAttribute(nodeCounts);
         int[] sortedIndices = Utils.sort(impurityScores);
-        buffer
-          .append("\n\nAttribute importance based on average impurity decrease "
-            + "(and number of nodes using that attribute)\n\n");
+        
         for (int i = sortedIndices.length - 1; i >= 0; i--) {
           int index = sortedIndices[i];
           if (index != m_data.classIndex()) {
@@ -558,7 +556,7 @@
       double[][] forClassifier = ((RandomTree) c).getImpurityDecreases();
       for (int i = 0; i < m_data.numAttributes(); i++) {
         impurityDecreases[i] += forClassifier[i][0];
-        nodeCounts[i] += forClassifier[i][1];
+        
       }
     }
     for (int i = 0; i < m_data.numAttributes(); i++) {
@@ -598,10 +596,7 @@
         "output-out-of-bag-complexity-statistics", 0,
         "-output-out-of-bag-complexity-statistics"));
 
-    newVector
-      .addElement(new Option(
-        "\tPrint the individual classifiers in the output", "print", 0,
-        "-print"));
+    
 
     newVector.addElement(new Option(
       "\tCompute and output attribute importance (mean impurity decrease "
@@ -820,6 +815,7 @@
 
     setComputeAttributeImportance(Utils
       .getFlag("attribute-importance", options));
+    TechnicalInformation result;
 
     String iterations = Utils.getOption('I', options);
     if (iterations.length() != 0) {
@@ -868,6 +864,6 @@
    * @param argv the options
    */
   public static void main(String[] argv) {
-    runClassifier(new RandomForest(), argv);
+    
   }
 }
