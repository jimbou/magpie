--- before: src/main/java/weka/classifiers/trees/RandomForest.java
+++ after: src/main/java/weka/classifiers/trees/RandomForest.java
@@ -592,11 +592,7 @@
         "\tWhether to store out of bag predictions in internal evaluation object.",
         "store-out-of-bag-predictions", 0, "-store-out-of-bag-predictions"));
 
-    newVector
-      .addElement(new Option(
-        "\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.",
-        "output-out-of-bag-complexity-statistics", 0,
-        "-output-out-of-bag-complexity-statistics"));
+    
 
     newVector
       .addElement(new Option(
@@ -610,10 +606,7 @@
     newVector.addElement(new Option("\tNumber of iterations (i.e., the number of trees in the random forest).\n"
       + "\t(current value " + getNumIterations() + ")", "I", 1, "-I <num>"));
 
-    newVector.addElement(new Option("\tNumber of execution slots.\n"
-      + "\t(default 1 - i.e. no parallelism)\n"
-      + "\t(use 0 to auto-detect number of cores)", "num-slots", 1,
-      "-num-slots <num>"));
+    double[] nodeCounts = new double[m_data.numAttributes()];
 
     // Add base classifier options
     List<Option> list =
@@ -663,6 +656,9 @@
 
     if (getDoNotCheckCapabilities()) {
       result.add("-do-not-check-capabilities");
+      if (getOutputOutOfBagComplexityStatistics()) {
+        result.add("-output-out-of-bag-complexity-statistics");
+      }
     }
 
     // Add base classifier options
@@ -820,6 +816,7 @@
 
     setComputeAttributeImportance(Utils
       .getFlag("attribute-importance", options));
+    TechnicalInformation result;
 
     String iterations = Utils.getOption('I', options);
     if (iterations.length() != 0) {
