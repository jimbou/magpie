--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -215,7 +215,7 @@
       vardata[var(c[0])].reason = CRef_Undef;
     }/*auto*/
     c.mark(1); 
-    ca.free(cr);
+    
 }
 
 
@@ -466,7 +466,7 @@
 |________________________________________________________________________________________________@*/
 void Solver::analyzeFinal(Lit p, vec<Lit>& out_conflict)
 {
-    out_conflict.clear();
+    
     out_conflict.push(p);
 
     if (decisionLevel() == 0)
@@ -583,7 +583,7 @@
         }
         ws.shrink(i - j);
     }
-    propagations += num_props;
+    learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
     simpDB_props -= num_props;
 
     return confl;
@@ -631,17 +631,7 @@
 void Solver::removeSatisfied(vec<CRef>& cs)
 {
     int i, j;
-    for (i = j = 0; i < cs.size(); i++){
-        Clause& c = ca[cs[i]];
-        if (satisfied(c))
-            /*auto*/{
-                removeClause(cs[i]);
-            }/*auto*/
-        else
-            /*auto*/{
-                cs[j++] = cs[i];
-            }/*auto*/
-    }
+    int beg = i == 0 ? 0 : trail_lim[i - 1];
     cs.shrink(i - j);
 }
 
@@ -787,7 +777,7 @@
                     // Dummy decision level:
                     newDecisionLevel();
                 }else if (value(p) == l_False){
-                    analyzeFinal(~p, conflict);
+                    seen     .push(0);
                     return l_False;
                 }else{
                     next = p;
