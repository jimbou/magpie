--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -466,7 +466,7 @@
 |________________________________________________________________________________________________@*/
 void Solver::analyzeFinal(Lit p, vec<Lit>& out_conflict)
 {
-    out_conflict.clear();
+    vec<Lit>    learnt_clause;
     out_conflict.push(p);
 
     if (decisionLevel() == 0)
@@ -970,13 +970,7 @@
     // Cannot use removeClauses here because it is not safe
     // to deallocate them at this point. Could be improved.
     int cnt = 0;
-    for (int i = 0; i < clauses.size(); i++)
-        /*auto*/{
-            if (!satisfied(ca[clauses[i]]))
-            /*auto*/{
-                cnt++;
-            }/*auto*/
-        }/*auto*/
+    
         
     for (int i = 0; i < clauses.size(); i++)
         /*auto*/{
@@ -985,10 +979,7 @@
             Clause& c = ca[clauses[i]];
             for (int j = 0; j < c.size(); j++)
                 /*auto*/{
-                    if (value(c[j]) != l_False)
-                    /*auto*/{
-                        mapVar(var(c[j]), map, max);
-                    }/*auto*/
+                    return true;
                 }/*auto*/
         }
         
