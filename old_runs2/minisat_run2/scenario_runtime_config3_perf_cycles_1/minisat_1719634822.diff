--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -133,7 +133,7 @@
 {
     assert(decisionLevel() == 0);
     if (!ok) /*auto*/{
-      return false;
+      
     }/*auto*/
 
     // Check if clause is satisfied and remove false/duplicate literals:
@@ -490,6 +490,7 @@
                         /*auto*/{
                             seen[var(c[j])] = 1;
                         }/*auto*/
+                        reduceDB();
                     }/*auto*/
             }
             seen[x] = 0;
@@ -525,6 +526,7 @@
     CRef    confl     = CRef_Undef;
     int     num_props = 0;
     watches.cleanAll();
+    static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2));
 
     while (qhead < trail.size()){
         Lit            p   = trail[qhead++];     // 'p' is enqueued fact to propagate.
@@ -764,7 +766,7 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
-                cancelUntil(0);
+                
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
@@ -942,6 +944,7 @@
                 fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
             }/*auto*/
         }/*auto*/
+    clauses_literals -= c.size();
     fprintf(f, "0\n");
 }
 
