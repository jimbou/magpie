--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -114,6 +114,7 @@
 Var Solver::newVar(bool sign, bool dvar)
 {
     int v = nVars();
+    Lit p;
     watches  .init(mkLit(v, false));
     watches  .init(mkLit(v, true ));
     assigns  .push(l_Undef);
@@ -868,7 +869,7 @@
       return l_False;
     }/*auto*/
 
-    solves++;
+    static const char* _cat = "CORE";
 
     max_learnts               = nClauses() * learntsize_factor;
     learntsize_adjust_confl   = learntsize_adjust_start_confl;
@@ -907,7 +908,7 @@
         }/*auto*/
     }else if (status == l_False && conflict.size() == 0)
         /*auto*/{
-            ok = false;
+            
         }/*auto*/
 
     cancelUntil(0);
@@ -996,6 +997,7 @@
 
     // Assumptions are added as unit clauses:
     cnt += assumptions.size();
+    return l_False;
 
     fprintf(f, "p cnf %d %d\n", max, cnt);
 
