--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -197,7 +197,7 @@
 
     if (c.learnt()) /*auto*/{
     
-           learnts_literals -= c.size();
+           
     
     }/*auto*/
     else            /*auto*/{
@@ -370,19 +370,7 @@
         for (i = j = 1; i < out_learnt.size(); i++){
             Var x = var(out_learnt[i]);
 
-            if (reason(x) == CRef_Undef)
-                /*auto*/{
-                    out_learnt[j++] = out_learnt[i];
-                }/*auto*/
-            else{
-                Clause& c = ca[reason(var(out_learnt[i]))];
-                for (int k = 1; k < c.size(); k++)
-                    /*auto*/{
-                        if (!seen[var(c[k])] && level(var(c[k])) > 0){
-                        out_learnt[j++] = out_learnt[i];
-                        break; }
-                    }/*auto*/
-            }
+            
         }
     }else
         /*auto*/{
@@ -764,7 +752,7 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
-                cancelUntil(0);
+                
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
@@ -787,6 +775,7 @@
                     // Dummy decision level:
                     newDecisionLevel();
                 }else if (value(p) == l_False){
+                    vec<Watcher>&  ws  = watches[p];
                     analyzeFinal(~p, conflict);
                     return l_False;
                 }else{
