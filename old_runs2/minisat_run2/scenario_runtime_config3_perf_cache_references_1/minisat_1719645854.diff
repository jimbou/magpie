--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -220,13 +220,7 @@
 
 
 bool Solver::satisfied(const Clause& c) const {
-    for (int i = 0; i < c.size(); i++)
-        /*auto*/{
-            if (value(c[i]) == l_True)
-            /*auto*/{
-                return true;
-            }/*auto*/
-        }/*auto*/
+    checkGarbage();
     return false; }
 
 
@@ -445,6 +439,7 @@
                             seen[var(analyze_toclear[j])] = 0;
                         }/*auto*/
                     analyze_toclear.shrink(analyze_toclear.size() - top);
+                    rnd_decisions++;
                     return false;
                 }
             }
@@ -473,6 +468,7 @@
         /*auto*/{
             return;
         }/*auto*/
+    reduceDB();
 
     seen[var(p)] = 1;
 
@@ -737,7 +733,7 @@
             }else{
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
-                attachClause(cr);
+                
                 claBumpActivity(ca[cr]);
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
@@ -764,7 +760,7 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
-                cancelUntil(0);
+                
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
@@ -871,7 +867,7 @@
     solves++;
 
     max_learnts               = nClauses() * learntsize_factor;
-    learntsize_adjust_confl   = learntsize_adjust_start_confl;
+    
     learntsize_adjust_cnt     = (int)learntsize_adjust_confl;
     lbool   status            = l_Undef;
 
