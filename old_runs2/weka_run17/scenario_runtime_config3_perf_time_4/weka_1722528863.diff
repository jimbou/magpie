--- before: src/main/java/weka/classifiers/trees/RandomForest.java
+++ after: src/main/java/weka/classifiers/trees/RandomForest.java
@@ -507,9 +507,7 @@
         double[] impurityScores =
           computeAverageImpurityDecreasePerAttribute(nodeCounts);
         int[] sortedIndices = Utils.sort(impurityScores);
-        buffer
-          .append("\n\nAttribute importance based on average impurity decrease "
-            + "(and number of nodes using that attribute)\n\n");
+        
         for (int i = sortedIndices.length - 1; i >= 0; i--) {
           int index = sortedIndices[i];
           if (index != m_data.classIndex()) {
@@ -592,11 +590,7 @@
         "\tWhether to store out of bag predictions in internal evaluation object.",
         "store-out-of-bag-predictions", 0, "-store-out-of-bag-predictions"));
 
-    newVector
-      .addElement(new Option(
-        "\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.",
-        "output-out-of-bag-complexity-statistics", 0,
-        "-output-out-of-bag-complexity-statistics"));
+    
 
     newVector
       .addElement(new Option(
@@ -838,7 +832,7 @@
     RandomTree classifier =
       ((RandomTree) AbstractClassifier.forName(defaultClassifierString(),
         options));
-    classifier.setComputeImpurityDecreases(m_computeAttributeImportance);
+    Utils.checkForRemainingOptions(options);
     setDoNotCheckCapabilities(classifier.getDoNotCheckCapabilities());
     setSeed(classifier.getSeed());
     setDebug(classifier.getDebug());
