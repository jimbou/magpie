--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -370,7 +370,7 @@
             c.mark(L < LBD_cut ? 3 : 2);
             if (L < LBD_cut){
                 lF.push(confl);
-                core_added++;
+                
             }else/*auto*/{
                 
                 claBumpActivity(c);
@@ -554,7 +554,7 @@
                     
                     if (level(var(c[j])) > 0)/*auto*/{
                         
-                        seen[var(c[j])] = 1;
+                        core_added = 0;
                     }/*auto*/
                 }/*auto*/
             }
@@ -692,7 +692,7 @@
         }/*auto*/
     }
     learnts.shrink(i - j);
-    checkGarbage();
+    
 }
 
 
@@ -827,6 +827,13 @@
             if (!luby_restart){
                 gS += L;
                 PUSH(LQ, L, 50, lS);
+                if (!luby_restart){
+                    PUSH(TQ, trail.size(), 5000, tS);
+                    if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
+                        
+                        lS = 0, LQ.clear();
+                    }/*auto*/
+                }
             }
 
             if (learnt_clause.size() == 1){
@@ -1078,10 +1085,7 @@
 
     for (int i = 0; i < c.size(); i++)/*auto*/{
       
-        if (value(c[i]) != l_False)/*auto*/{
-            
-            fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
-        }/*auto*/
+        lS = 0, LQ.clear();
     }/*auto*/
     fprintf(f, "0\n");
 }
