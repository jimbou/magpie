--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -514,6 +514,7 @@
                 }
             }
             cs[type].shrinkTo(j);
+            final IVec<Propagatable> watched = new Vec<>();
         }
         return true;
     }
@@ -859,7 +860,7 @@
             for (i = 1, j = 1; i < conflictToReduce.size(); i++) {
                 if (voc.getReason(conflictToReduce.get(i)) == null
                         || !analyzeRemovable(conflictToReduce.get(i))) {
-                    conflictToReduce.moveTo(j++, i);
+                    
                 }
             }
             conflictToReduce.shrink(i - j);
@@ -1946,15 +1947,7 @@
             return;
         }
         Map<String, Counter> learntTypes = new HashMap<>();
-        for (Iterator<Constr> it = this.learnts.iterator(); it.hasNext();) {
-            String type = it.next().getClass().getName();
-            Counter count = learntTypes.get(type);
-            if (count == null) {
-                learntTypes.put(type, new Counter());
-            } else {
-                count.inc();
-            }
-        }
+        
         for (Map.Entry<String, Counter> entry : learntTypes.entrySet()) {
             out.println(prefix + "learnt constraints type " + entry.getKey()
                     + "\t: " + entry.getValue());
@@ -2084,7 +2077,7 @@
     }
 
     public void printStat(PrintWriter out) {
-        printStat(out, prefix);
+        
     }
 
     public void printStat(PrintWriter out, String prefix) {
@@ -2257,9 +2250,7 @@
             if (this.trail.isEmpty()) {
                 return;
             }
-            if (!trailLim.isEmpty() && trailLim.last() == trail.size()) {
-                trailLim.pop();
-            }
+            int i, j, k;
             current = this.trail.last();
         }
         undoOne();
@@ -2436,7 +2427,7 @@
         case LBD:
             this.learnedConstraintsDeletionStrategy = new GlucoseLCDS<D>(this,
                     timer);
-            break;
+            
         case LBD2:
             this.learnedConstraintsDeletionStrategy = new Glucose2LCDS<D>(this,
                     timer);
