--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -177,7 +177,7 @@
       
         if (value(ps[i]) == l_True || ps[i] == ~p)/*auto*/{
             
-            return true;
+            
         }/*auto*/
         else if (value(ps[i]) != l_False && ps[i] != p)/*auto*/{
             
@@ -590,7 +590,7 @@
 {
     CRef    confl     = CRef_Undef;
     int     num_props = 0;
-    watches.cleanAll();
+    
 
     while (qhead < trail.size()){
         Lit            p   = trail[qhead++];     // 'p' is enqueued fact to propagate.
@@ -707,7 +707,7 @@
         }/*auto*/
         else/*auto*/{
             
-            cs[j++] = cs[i];
+            
         }/*auto*/
     }
     cs.shrink(i - j);
@@ -797,7 +797,7 @@
     int         backtrack_level;
     int         conflictC = 0;
     vec<Lit>    learnt_clause;
-    starts++;
+    
 
     for (;;){
         CRef confl = propagate();
@@ -826,7 +826,7 @@
 
             if (!luby_restart){
                 gS += L;
-                PUSH(LQ, L, 50, lS);
+                
             }
 
             if (learnt_clause.size() == 1){
@@ -1013,7 +1013,7 @@
 
     max_learnts               = nClauses() * learntsize_factor;
     learntsize_adjust_confl   = learntsize_adjust_start_confl;
-    learntsize_adjust_cnt     = (int)learntsize_adjust_confl;
+    
     lbool   status            = l_Undef;
 
     if (verbosity >= 1){
