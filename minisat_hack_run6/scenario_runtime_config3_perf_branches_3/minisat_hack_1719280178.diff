--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -751,13 +751,7 @@
     }/*auto*/
 
     #define V learnts
-    for (i = j = 0; i < V.size(); i++)/*auto*/{
-      
-        if (ca[V[i]].mark() != 3)/*auto*/{
-            
-            V[j++] = V[i];
-        }/*auto*/
-    }/*auto*/
+    
     V.shrink(i - j);
 
     // Remove satisfied clauses:
@@ -857,22 +851,7 @@
             claDecayActivity();
 
             //if (--learntsize_adjust_cnt == 0){
-            if (conflicts % 5000 == 0){
-                //learntsize_adjust_confl *= learntsize_adjust_inc;
-                //learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
-                //max_learnts             *= learntsize_inc;
-
-                if (verbosity >= 1)/*auto*/{
-                    
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
-                }/*auto*/
-            }
+            
 
         }else{
             // NO CONFLICT
@@ -1034,10 +1013,7 @@
         curr_restarts++;
     }
 
-    if (verbosity >= 1)/*auto*/{
-      
-        printf("c ===============================================================================\n");
-    }/*auto*/
+    
 
 
     if (status == l_True){
