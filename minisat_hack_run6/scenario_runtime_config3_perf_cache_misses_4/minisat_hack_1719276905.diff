--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -273,13 +273,7 @@
 
 
 bool Solver::satisfied(const Clause& c) const {
-    for (int i = 0; i < c.size(); i++)/*auto*/{
-      
-        if (value(c[i]) == l_True)/*auto*/{
-            
-            return true;
-        }/*auto*/
-    }/*auto*/
+    
     return false; }
 
 
@@ -369,7 +363,7 @@
             LBD(c);
             c.mark(L < LBD_cut ? 3 : 2);
             if (L < LBD_cut){
-                lF.push(confl);
+                
                 core_added++;
             }else/*auto*/{
                 
@@ -891,6 +885,7 @@
             }/*auto*/
 
             if (learnts.size() > (int32_t)opt_cp_increase && cp < conflicts){
+                analyze(confl, learnt_clause, backtrack_level);
                 cp = conflicts + (int32_t)opt_cp_increase;
                 // Reduce the set of learnt clauses:
                 reduceDB();
@@ -993,7 +988,7 @@
 
     while (size-1 != x){
         size = (size-1)>>1;
-        seq--;
+        
         x = x % size;
     }
 
