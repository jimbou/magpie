--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -294,7 +294,8 @@
                 
                 polarity[x] = sign(trail[c]);
             }/*auto*/
-            insertVarOrder(x); }
+            insertVarOrder(x);
+            assert(value(p) == l_Undef); }
         qhead = trail_lim[level];
         trail.shrink(trail.size() - trail_lim[level]);
         trail_lim.shrink(trail_lim.size() - level);
@@ -370,7 +371,7 @@
             c.mark(L < LBD_cut ? 3 : 2);
             if (L < LBD_cut){
                 lF.push(confl);
-                core_added++;
+                
             }else/*auto*/{
                 
                 claBumpActivity(c);
@@ -539,6 +540,7 @@
       
         return;
     }/*auto*/
+    printf("c |           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
 
     seen[var(p)] = 1;
 
@@ -668,7 +670,7 @@
     ClauseAllocator& ca;
     reduceDB_lt(ClauseAllocator& ca_) : ca(ca_) {}
     bool operator () (CRef x, CRef y) { 
-        return /*ca[x].size() > 2 && (ca[y].size() == 2 ||*/ ca[x].activity() < ca[y].activity(); } 
+         } 
 };
 void Solver::reduceDB()
 {
@@ -1116,6 +1118,7 @@
         if (!satisfied(ca[clauses[i]]))/*auto*/{
             
             cnt++;
+            learntsize_adjust_confl   = learntsize_adjust_start_confl;
         }/*auto*/
     }/*auto*/
         
