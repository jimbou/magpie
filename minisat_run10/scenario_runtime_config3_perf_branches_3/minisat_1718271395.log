2024-06-13 10:36:35,257	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 8354439990153961
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 100
default_lengthout = 1e6
diff_method = unified
trust_local_filesystem = True
run_timeout = 100

[magpie.log]
color_output = True
format_info = {counter:<7} {status:<20} {best}{fitness} ({ratio}) [{size}] {cached} {log}
format_debug = patch({counter})="{patch}"{diffifbest}
format_fitness = {:.6f}
format_ratio = {:.2%%}
format_patchif = 
	 --> {patch}
format_diffif = 
	{diff}

[software]
path = examples/minisat
target_files = 
	core/Solver.cc.xml
software = BasicSoftware
model_rules = 
	*.params : ParamFileConfigModel
	*.xml : SrcmlModel
	* : LineModel
model_config = 
	*.params : [paramconfig]
	*.xml : [srcml]
init_cmd = bash init.sh
init_timeout = 60
init_lengthout = -1
setup_cmd = bash compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = bash compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = bash test.sh
test_timeout = 
test_lengthout = 
run_cmd = perf stat -e branches bash run_fixed.sh
run_timeout = 
run_lengthout = 
retries = 3
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = perf_branches

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[paramconfig]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
cli_none = hide
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = FirstImprovement
possible_edits = 
	SrcmlStmtReplacement
	SrcmlStmtInsertion
	SrcmlStmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 10000
max_time = 700
target_fitness = 
cache_maxsize = 100
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2024-06-13 10:36:35,257	[DEBUG]	
2024-06-13 10:36:35,257	[INFO]	==== SEARCH: FirstImprovement ====
2024-06-13 10:36:35,257	[INFO]	~~~~ WARMUP ~~~~
2024-06-13 10:37:13,534	[DEBUG]	EXEC>  SUCCESS 8638248280.666666
2024-06-13 10:37:13,534	[INFO]	WARM    SUCCESS               8638248280.666666 (--) [0 edit(s)]  
2024-06-13 10:37:48,741	[DEBUG]	EXEC>  SUCCESS 8638584027.333334
2024-06-13 10:37:48,741	[INFO]	WARM    SUCCESS               8638584027.333334 (--) [0 edit(s)]  
2024-06-13 10:38:23,909	[DEBUG]	EXEC>  SUCCESS 8638347395.666666
2024-06-13 10:38:23,909	[INFO]	WARM    SUCCESS               8638347395.666666 (--) [0 edit(s)]  
2024-06-13 10:38:23,909	[INFO]	REF     SUCCESS               8638347395.666666 (--) [0 edit(s)]  
2024-06-13 10:38:23,909	[INFO]	
2024-06-13 10:38:23,909	[INFO]	~~~~ START ~~~~
2024-06-13 10:38:24,155	[INFO]	1       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-13 10:38:24,155	[DEBUG]	patch(1)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 347), ('core/Solver.cc.xml', 'stmt', 110))"
2024-06-13 10:38:24,408	[INFO]	2       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-13 10:38:24,408	[DEBUG]	patch(2)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 125), ('core/Solver.cc.xml', 'stmt', 277))"
2024-06-13 10:39:00,664	[DEBUG]	EXEC>  SUCCESS 8638284380.666666
2024-06-13 10:39:00,664	[INFO]	3       SUCCESS              *8638284380.666666 (100.00%) [1 edit(s)]  
2024-06-13 10:39:00,664	[DEBUG]	patch(3)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -713,7 +713,7 @@
 |________________________________________________________________________________________________@*/
 lbool Solver::search(int nof_conflicts)
 {
-    assert(ok);
+    
     int         backtrack_level;
     int         conflictC = 0;
     vec<Lit>    learnt_clause;

2024-06-13 10:39:00,669	[INFO]	4       SUCCESS               8638347395.666666 (100.00%) [0 edit(s)] [cached] 
2024-06-13 10:39:00,669	[DEBUG]	patch(4)=""
2024-06-13 10:39:00,915	[INFO]	5       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 10:39:00,916	[DEBUG]	patch(5)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 78), ('core/Solver.cc.xml', 'stmt', 142))"
2024-06-13 10:39:01,137	[INFO]	6       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 10:39:01,137	[DEBUG]	patch(6)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 326), ('core/Solver.cc.xml', 'stmt', 304))"
2024-06-13 10:39:01,391	[INFO]	7       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 10:39:01,391	[DEBUG]	patch(7)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 27), ('core/Solver.cc.xml', 'stmt', 98))"
2024-06-13 10:39:01,655	[INFO]	8       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 10:39:01,655	[DEBUG]	patch(8)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 119), ('core/Solver.cc.xml', 'stmt', 398))"
2024-06-13 10:39:37,973	[DEBUG]	EXEC>  SUCCESS 8638532355.666666
2024-06-13 10:39:37,973	[INFO]	9       SUCCESS               8638532355.666666 (100.00%) [2 edit(s)]  
2024-06-13 10:39:37,973	[DEBUG]	patch(9)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 505), ('core/Solver.cc.xml', 'stmt', 3))"
2024-06-13 10:39:38,231	[INFO]	10      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 10:39:38,232	[DEBUG]	patch(10)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 422), ('core/Solver.cc.xml', 'stmt', 146))"
2024-06-13 10:39:39,612	[INFO]	11      TEST_CODE_ERROR       None (--) [2 edit(s)]  
2024-06-13 10:39:39,612	[DEBUG]	patch(11)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 131), ('core/Solver.cc.xml', 'stmt', 358))"
2024-06-13 10:40:15,803	[DEBUG]	EXEC>  SUCCESS 8638340701.333334
2024-06-13 10:40:15,804	[INFO]	12      SUCCESS               8638340701.333334 (100.00%) [2 edit(s)]  
2024-06-13 10:40:15,804	[DEBUG]	patch(12)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 319))"
2024-06-13 10:40:50,234	[DEBUG]	EXEC>  SUCCESS 8295193108.333333
2024-06-13 10:40:50,234	[INFO]	13      SUCCESS              *8295193108.333333 (96.03%) [2 edit(s)]  
2024-06-13 10:40:50,234	[DEBUG]	patch(13)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -351,43 +351,7 @@
     //
     int i, j;
     out_learnt.copyTo(analyze_toclear);
-    if (ccmin_mode == 2){
-        uint32_t abstract_level = 0;
-        for (i = 1; i < out_learnt.size(); i++)
-            /*auto*/{
-                abstract_level |= abstractLevel(var(out_learnt[i]));
-            }/*auto*/ // (maintain an abstraction of levels involved in conflict)
-
-        for (i = j = 1; i < out_learnt.size(); i++)
-            /*auto*/{
-                if (reason(var(out_learnt[i])) == CRef_Undef || !litRedundant(out_learnt[i], abstract_level))
-                /*auto*/{
-                    out_learnt[j++] = out_learnt[i];
-                }/*auto*/
-            }/*auto*/
-        
-    }else if (ccmin_mode == 1){
-        for (i = j = 1; i < out_learnt.size(); i++){
-            Var x = var(out_learnt[i]);
-
-            if (reason(x) == CRef_Undef)
-                /*auto*/{
-                    out_learnt[j++] = out_learnt[i];
-                }/*auto*/
-            else{
-                Clause& c = ca[reason(var(out_learnt[i]))];
-                for (int k = 1; k < c.size(); k++)
-                    /*auto*/{
-                        if (!seen[var(c[k])] && level(var(c[k])) > 0){
-                        out_learnt[j++] = out_learnt[i];
-                        break; }
-                    }/*auto*/
-            }
-        }
-    }else
-        /*auto*/{
-            i = j = out_learnt.size();
-        }/*auto*/
+    
 
     max_literals += out_learnt.size();
     out_learnt.shrink(i - j);
@@ -713,7 +677,7 @@
 |________________________________________________________________________________________________@*/
 lbool Solver::search(int nof_conflicts)
 {
-    assert(ok);
+    
     int         backtrack_level;
     int         conflictC = 0;
     vec<Lit>    learnt_clause;

2024-06-13 10:40:50,480	[INFO]	14      COMPILE_CODE_ERROR    None (--) [3 edit(s)]  
2024-06-13 10:40:50,480	[DEBUG]	patch(14)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 85), ('core/Solver.cc.xml', 'stmt', 254))"
2024-06-13 10:40:51,817	[INFO]	15      TEST_CODE_ERROR       None (--) [3 edit(s)]  
2024-06-13 10:40:51,817	[DEBUG]	patch(15)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 269))"
2024-06-13 10:40:51,823	[INFO]	16      SUCCESS               8638284380.666666 (100.00%) [1 edit(s)] [cached] 
2024-06-13 10:40:51,824	[DEBUG]	patch(16)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270))"
2024-06-13 10:42:33,162	[INFO]	17      TEST_TIMEOUT          None (--) [3 edit(s)]  
2024-06-13 10:42:33,162	[DEBUG]	patch(17)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 81))"
2024-06-13 10:42:33,421	[INFO]	18      COMPILE_CODE_ERROR    None (--) [3 edit(s)]  
2024-06-13 10:42:33,422	[DEBUG]	patch(18)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 270)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 268), ('core/Solver.cc.xml', 'stmt', 137))"
2024-06-13 10:43:07,890	[DEBUG]	EXEC>  SUCCESS 8295072340.666667
2024-06-13 10:43:07,891	[INFO]	19      SUCCESS              *8295072340.666667 (96.03%) [1 edit(s)]  
2024-06-13 10:43:07,891	[DEBUG]	patch(19)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -351,43 +351,7 @@
     //
     int i, j;
     out_learnt.copyTo(analyze_toclear);
-    if (ccmin_mode == 2){
-        uint32_t abstract_level = 0;
-        for (i = 1; i < out_learnt.size(); i++)
-            /*auto*/{
-                abstract_level |= abstractLevel(var(out_learnt[i]));
-            }/*auto*/ // (maintain an abstraction of levels involved in conflict)
-
-        for (i = j = 1; i < out_learnt.size(); i++)
-            /*auto*/{
-                if (reason(var(out_learnt[i])) == CRef_Undef || !litRedundant(out_learnt[i], abstract_level))
-                /*auto*/{
-                    out_learnt[j++] = out_learnt[i];
-                }/*auto*/
-            }/*auto*/
-        
-    }else if (ccmin_mode == 1){
-        for (i = j = 1; i < out_learnt.size(); i++){
-            Var x = var(out_learnt[i]);
-
-            if (reason(x) == CRef_Undef)
-                /*auto*/{
-                    out_learnt[j++] = out_learnt[i];
-                }/*auto*/
-            else{
-                Clause& c = ca[reason(var(out_learnt[i]))];
-                for (int k = 1; k < c.size(); k++)
-                    /*auto*/{
-                        if (!seen[var(c[k])] && level(var(c[k])) > 0){
-                        out_learnt[j++] = out_learnt[i];
-                        break; }
-                    }/*auto*/
-            }
-        }
-    }else
-        /*auto*/{
-            i = j = out_learnt.size();
-        }/*auto*/
+    
 
     max_literals += out_learnt.size();
     out_learnt.shrink(i - j);

2024-06-13 10:43:42,454	[DEBUG]	EXEC>  SUCCESS 8295255518.666667
2024-06-13 10:43:42,454	[INFO]	20      SUCCESS               8295255518.666667 (96.03%) [2 edit(s)]  
2024-06-13 10:43:42,454	[DEBUG]	patch(20)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 319), ('core/Solver.cc.xml', 'stmt', 252))"
2024-06-13 10:43:42,460	[INFO]	21      SUCCESS               8638347395.666666 (100.00%) [0 edit(s)] [cached] 
2024-06-13 10:43:42,461	[DEBUG]	patch(21)=""
2024-06-13 10:44:17,165	[DEBUG]	EXEC>  SUCCESS 8295207360.666667
2024-06-13 10:44:17,166	[INFO]	22      SUCCESS               8295207360.666667 (96.03%) [2 edit(s)]  
2024-06-13 10:44:17,166	[DEBUG]	patch(22)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 385))"
2024-06-13 10:44:18,499	[INFO]	23      TEST_CODE_ERROR       None (--) [2 edit(s)]  
2024-06-13 10:44:18,499	[DEBUG]	patch(23)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 102), ('core/Solver.cc.xml', 'stmt', 295))"
2024-06-13 10:44:53,236	[DEBUG]	EXEC>  SUCCESS 8295219753.0
2024-06-13 10:44:53,236	[INFO]	24      SUCCESS               8295219753.000000 (96.03%) [2 edit(s)]  
2024-06-13 10:44:53,236	[DEBUG]	patch(24)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 186), ('core/Solver.cc.xml', 'stmt', 225))"
2024-06-13 10:45:28,641	[DEBUG]	EXEC>  SUCCESS 9297591641.0
2024-06-13 10:45:28,641	[INFO]	25      SUCCESS               9297591641.000000 (107.63%) [2 edit(s)]  
2024-06-13 10:45:28,642	[DEBUG]	patch(25)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 294))"
2024-06-13 10:45:28,888	[INFO]	26      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 10:45:28,888	[DEBUG]	patch(26)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 4), ('core/Solver.cc.xml', 'stmt', 247))"
2024-06-13 10:45:30,252	[INFO]	27      TEST_CODE_ERROR       None (--) [2 edit(s)]  
2024-06-13 10:45:30,252	[DEBUG]	patch(27)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 282))"
2024-06-13 10:45:30,476	[INFO]	28      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 10:45:30,476	[DEBUG]	patch(28)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 8))"
2024-06-13 10:45:30,713	[INFO]	29      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 10:45:30,713	[DEBUG]	patch(29)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 247))"
2024-06-13 10:46:05,349	[DEBUG]	EXEC>  SUCCESS 8295071692.666667
2024-06-13 10:46:05,349	[INFO]	30      SUCCESS              *8295071692.666667 (96.03%) [2 edit(s)]  
2024-06-13 10:46:05,349	[DEBUG]	patch(30)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 496), ('core/Solver.cc.xml', 'stmt', 266))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -351,43 +351,7 @@
     //
     int i, j;
     out_learnt.copyTo(analyze_toclear);
-    if (ccmin_mode == 2){
-        uint32_t abstract_level = 0;
-        for (i = 1; i < out_learnt.size(); i++)
-            /*auto*/{
-                abstract_level |= abstractLevel(var(out_learnt[i]));
-            }/*auto*/ // (maintain an abstraction of levels involved in conflict)
-
-        for (i = j = 1; i < out_learnt.size(); i++)
-            /*auto*/{
-                if (reason(var(out_learnt[i])) == CRef_Undef || !litRedundant(out_learnt[i], abstract_level))
-                /*auto*/{
-                    out_learnt[j++] = out_learnt[i];
-                }/*auto*/
-            }/*auto*/
-        
-    }else if (ccmin_mode == 1){
-        for (i = j = 1; i < out_learnt.size(); i++){
-            Var x = var(out_learnt[i]);
-
-            if (reason(x) == CRef_Undef)
-                /*auto*/{
-                    out_learnt[j++] = out_learnt[i];
-                }/*auto*/
-            else{
-                Clause& c = ca[reason(var(out_learnt[i]))];
-                for (int k = 1; k < c.size(); k++)
-                    /*auto*/{
-                        if (!seen[var(c[k])] && level(var(c[k])) > 0){
-                        out_learnt[j++] = out_learnt[i];
-                        break; }
-                    }/*auto*/
-            }
-        }
-    }else
-        /*auto*/{
-            i = j = out_learnt.size();
-        }/*auto*/
+    
 
     max_literals += out_learnt.size();
     out_learnt.shrink(i - j);
@@ -933,6 +897,7 @@
 {
     if (satisfied(c)) /*auto*/{
       return;
+      rebuildOrderHeap();
     }/*auto*/
 
     for (int i = 0; i < c.size(); i++)

2024-06-13 10:46:06,735	[INFO]	31      TEST_CODE_ERROR       None (--) [3 edit(s)]  
2024-06-13 10:46:06,735	[DEBUG]	patch(31)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 496), ('core/Solver.cc.xml', 'stmt', 266)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 15), ('core/Solver.cc.xml', 'stmt', 347))"
2024-06-13 10:46:41,201	[DEBUG]	EXEC>  SUCCESS 8295178409.666667
2024-06-13 10:46:41,201	[INFO]	32      SUCCESS               8295178409.666667 (96.03%) [3 edit(s)]  
2024-06-13 10:46:41,201	[DEBUG]	patch(32)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 496), ('core/Solver.cc.xml', 'stmt', 266)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 373))"
2024-06-13 10:47:15,616	[DEBUG]	EXEC>  SUCCESS 8294896006.333333
2024-06-13 10:47:15,616	[INFO]	33      SUCCESS              *8294896006.333333 (96.02%) [3 edit(s)]  
2024-06-13 10:47:15,616	[DEBUG]	patch(33)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 496), ('core/Solver.cc.xml', 'stmt', 266)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 298), ('core/Solver.cc.xml', 'stmt', 94))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -351,43 +351,7 @@
     //
     int i, j;
     out_learnt.copyTo(analyze_toclear);
-    if (ccmin_mode == 2){
-        uint32_t abstract_level = 0;
-        for (i = 1; i < out_learnt.size(); i++)
-            /*auto*/{
-                abstract_level |= abstractLevel(var(out_learnt[i]));
-            }/*auto*/ // (maintain an abstraction of levels involved in conflict)
-
-        for (i = j = 1; i < out_learnt.size(); i++)
-            /*auto*/{
-                if (reason(var(out_learnt[i])) == CRef_Undef || !litRedundant(out_learnt[i], abstract_level))
-                /*auto*/{
-                    out_learnt[j++] = out_learnt[i];
-                }/*auto*/
-            }/*auto*/
-        
-    }else if (ccmin_mode == 1){
-        for (i = j = 1; i < out_learnt.size(); i++){
-            Var x = var(out_learnt[i]);
-
-            if (reason(x) == CRef_Undef)
-                /*auto*/{
-                    out_learnt[j++] = out_learnt[i];
-                }/*auto*/
-            else{
-                Clause& c = ca[reason(var(out_learnt[i]))];
-                for (int k = 1; k < c.size(); k++)
-                    /*auto*/{
-                        if (!seen[var(c[k])] && level(var(c[k])) > 0){
-                        out_learnt[j++] = out_learnt[i];
-                        break; }
-                    }/*auto*/
-            }
-        }
-    }else
-        /*auto*/{
-            i = j = out_learnt.size();
-        }/*auto*/
+    
 
     max_literals += out_learnt.size();
     out_learnt.shrink(i - j);
@@ -750,13 +714,7 @@
                 learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
                 max_learnts             *= learntsize_inc;
 
-                if (verbosity >= 1)
-                    /*auto*/{
-                        printf("| %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% |\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)max_learnts, nLearnts(), (double)learnts_literals/nLearnts(), progressEstimate()*100);
-                    }/*auto*/
+                Lit p     = lit_Undef;
             }
 
         }else{
@@ -933,6 +891,7 @@
 {
     if (satisfied(c)) /*auto*/{
       return;
+      rebuildOrderHeap();
     }/*auto*/
 
     for (int i = 0; i < c.size(); i++)

2024-06-13 10:48:56,995	[INFO]	34      TEST_TIMEOUT          None (--) [4 edit(s)]  
2024-06-13 10:48:56,995	[DEBUG]	patch(34)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 496), ('core/Solver.cc.xml', 'stmt', 266)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 298), ('core/Solver.cc.xml', 'stmt', 94)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 303))"
2024-06-13 10:48:57,260	[INFO]	35      COMPILE_CODE_ERROR    None (--) [4 edit(s)]  
2024-06-13 10:48:57,260	[DEBUG]	patch(35)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 496), ('core/Solver.cc.xml', 'stmt', 266)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 298), ('core/Solver.cc.xml', 'stmt', 94)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 284), ('core/Solver.cc.xml', 'stmt', 256))"
2024-06-13 10:49:33,445	[DEBUG]	EXEC>  SUCCESS 8638004322.0
2024-06-13 10:49:33,445	[INFO]	36      SUCCESS               8638004322.000000 (100.00%) [2 edit(s)]  
2024-06-13 10:49:33,445	[DEBUG]	patch(36)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 496), ('core/Solver.cc.xml', 'stmt', 266)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 298), ('core/Solver.cc.xml', 'stmt', 94))"
2024-06-13 10:49:34,818	[INFO]	37      TEST_CODE_ERROR       None (--) [4 edit(s)]  
2024-06-13 10:49:34,818	[DEBUG]	patch(37)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 496), ('core/Solver.cc.xml', 'stmt', 266)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 298), ('core/Solver.cc.xml', 'stmt', 94)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 207), ('core/Solver.cc.xml', 'stmt', 215))"
2024-06-13 10:49:34,829	[INFO]	38      SUCCESS               8295071692.666667 (96.03%) [2 edit(s)] [cached] 
2024-06-13 10:49:34,829	[DEBUG]	patch(38)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 496), ('core/Solver.cc.xml', 'stmt', 266))"
2024-06-13 10:49:36,235	[INFO]	39      TEST_CODE_ERROR       None (--) [4 edit(s)]  
2024-06-13 10:49:36,235	[DEBUG]	patch(39)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 496), ('core/Solver.cc.xml', 'stmt', 266)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 298), ('core/Solver.cc.xml', 'stmt', 94)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 148))"
2024-06-13 10:50:10,688	[DEBUG]	EXEC>  SUCCESS 8294897159.333333
2024-06-13 10:50:10,688	[INFO]	40      SUCCESS               8294897159.333333 (96.02%) [2 edit(s)]  
2024-06-13 10:50:10,688	[DEBUG]	patch(40)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 298), ('core/Solver.cc.xml', 'stmt', 94))"
2024-06-13 10:50:10,701	[INFO]	~~~~ END ~~~~
2024-06-13 10:50:10,702	[INFO]	
2024-06-13 10:50:10,702	[INFO]	==== REPORT ====
2024-06-13 10:50:10,702	[INFO]	Termination: time budget
2024-06-13 10:50:10,702	[INFO]	Retries: 3
2024-06-13 10:50:10,702	[INFO]	Log file: /home/jim/magpie/_magpie_logs/minisat_1718271395.log
2024-06-13 10:50:10,702	[INFO]	Patch file: _magpie_logs/minisat_1718271395.patch
2024-06-13 10:50:10,702	[INFO]	Diff file: _magpie_logs/minisat_1718271395.diff
2024-06-13 10:50:10,702	[INFO]	Reference fitness: 8638347395.666666
2024-06-13 10:50:10,702	[INFO]	Best fitness: 8294896006.333333
2024-06-13 10:50:10,702	[INFO]	
2024-06-13 10:50:10,704	[INFO]	==== BEST PATCH ====
SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 118)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 496), ('core/Solver.cc.xml', 'stmt', 266)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 298), ('core/Solver.cc.xml', 'stmt', 94))
2024-06-13 10:50:10,704	[INFO]	
2024-06-13 10:50:10,705	[INFO]	==== DIFF ====
[1m--- before: core/Solver.cc[0m
[1m+++ after: core/Solver.cc[0m
[36m@@ -351,43 +351,7 @@[0m
     //
     int i, j;
     out_learnt.copyTo(analyze_toclear);
[31m-    if (ccmin_mode == 2){[0m
[31m-        uint32_t abstract_level = 0;[0m
[31m-        for (i = 1; i < out_learnt.size(); i++)[0m
[31m-            /*auto*/{[0m
[31m-                abstract_level |= abstractLevel(var(out_learnt[i]));[0m
[31m-            }/*auto*/ // (maintain an abstraction of levels involved in conflict)[0m
[31m-[0m
[31m-        for (i = j = 1; i < out_learnt.size(); i++)[0m
[31m-            /*auto*/{[0m
[31m-                if (reason(var(out_learnt[i])) == CRef_Undef || !litRedundant(out_learnt[i], abstract_level))[0m
[31m-                /*auto*/{[0m
[31m-                    out_learnt[j++] = out_learnt[i];[0m
[31m-                }/*auto*/[0m
[31m-            }/*auto*/[0m
[31m-        [0m
[31m-    }else if (ccmin_mode == 1){[0m
[31m-        for (i = j = 1; i < out_learnt.size(); i++){[0m
[31m-            Var x = var(out_learnt[i]);[0m
[31m-[0m
[31m-            if (reason(x) == CRef_Undef)[0m
[31m-                /*auto*/{[0m
[31m-                    out_learnt[j++] = out_learnt[i];[0m
[31m-                }/*auto*/[0m
[31m-            else{[0m
[31m-                Clause& c = ca[reason(var(out_learnt[i]))];[0m
[31m-                for (int k = 1; k < c.size(); k++)[0m
[31m-                    /*auto*/{[0m
[31m-                        if (!seen[var(c[k])] && level(var(c[k])) > 0){[0m
[31m-                        out_learnt[j++] = out_learnt[i];[0m
[31m-                        break; }[0m
[31m-                    }/*auto*/[0m
[31m-            }[0m
[31m-        }[0m
[31m-    }else[0m
[31m-        /*auto*/{[0m
[31m-            i = j = out_learnt.size();[0m
[31m-        }/*auto*/[0m
[32m+    [0m
 
     max_literals += out_learnt.size();
     out_learnt.shrink(i - j);
[36m@@ -750,13 +714,7 @@[0m
                 learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
                 max_learnts             *= learntsize_inc;
 
[31m-                if (verbosity >= 1)[0m
[31m-                    /*auto*/{[0m
[31m-                        printf("| %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% |\n", [0m
[31m-                           (int)conflicts, [0m
[31m-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, [0m
[31m-                           (int)max_learnts, nLearnts(), (double)learnts_literals/nLearnts(), progressEstimate()*100);[0m
[31m-                    }/*auto*/[0m
[32m+                Lit p     = lit_Undef;[0m
             }
 
         }else{
[36m@@ -933,6 +891,7 @@[0m
 {
     if (satisfied(c)) /*auto*/{
       return;
[32m+      rebuildOrderHeap();[0m
     }/*auto*/
 
     for (int i = 0; i < c.size(); i++)

