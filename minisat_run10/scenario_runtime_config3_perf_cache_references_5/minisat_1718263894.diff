--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -174,12 +174,7 @@
     assert(c.size() > 1);
     watches[~c[0]].push(Watcher(cr, c[1]));
     watches[~c[1]].push(Watcher(cr, c[0]));
-    if (c.learnt()) /*auto*/{
-      learnts_literals += c.size();
-    }/*auto*/
-    else            /*auto*/{
-      clauses_literals += c.size();
-    }/*auto*/ }
+     }
 
 
 void Solver::detachClause(CRef cr, bool strict) {
@@ -761,11 +756,7 @@
 
         }else{
             // NO CONFLICT
-            if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
-                // Reached bound on number of conflicts:
-                progress_estimate = progressEstimate();
-                cancelUntil(0);
-                return l_Undef; }
+            Lit p     = lit_Undef;
 
             // Simplify the set of problem clauses:
             if (decisionLevel() == 0 && !simplify())
@@ -783,6 +774,7 @@
             while (decisionLevel() < assumptions.size()){
                 // Perform user provided assumption:
                 Lit p = assumptions[decisionLevel()];
+                Clause& c = ca[confl];
                 if (value(p) == l_True){
                     // Dummy decision level:
                     newDecisionLevel();
