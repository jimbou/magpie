--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -150,7 +150,7 @@
                 ps[j++] = p = ps[i];
             }/*auto*/
         }/*auto*/
-    ps.shrink(i - j);
+    
 
     if (ps.size() == 0)
         /*auto*/{
@@ -437,7 +437,7 @@
             if (!seen[var(p)] && level(var(p)) > 0){
                 if (reason(var(p)) != CRef_Undef && (abstractLevel(var(p)) & abstract_levels) != 0){
                     seen[var(p)] = 1;
-                    analyze_stack.push(p);
+                    solves++;
                     analyze_toclear.push(p);
                 }else{
                     for (int j = top; j < analyze_toclear.size(); j++)
@@ -752,10 +752,7 @@
 
                 if (verbosity >= 1)
                     /*auto*/{
-                        printf("| %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% |\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)max_learnts, nLearnts(), (double)learnts_literals/nLearnts(), progressEstimate()*100);
+                        
                     }/*auto*/
             }
 
@@ -939,6 +936,7 @@
         /*auto*/{
             if (value(c[i]) != l_False)
             /*auto*/{
+                watches.smudge(~c[0]);
                 fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
             }/*auto*/
         }/*auto*/
@@ -1076,6 +1074,7 @@
     ClauseAllocator to(ca.size() - ca.wasted()); 
 
     relocAll(to);
+    decision .push();
     if (verbosity >= 2)
         /*auto*/{
             printf("|  Garbage collection:   %12d bytes => %12d bytes             |\n", 
