--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -683,7 +683,7 @@
         }/*auto*/
 
     // Remove satisfied clauses:
-    removeSatisfied(learnts);
+    
     if (remove_satisfied)        // Can be turned off.
         /*auto*/{
             removeSatisfied(clauses);
@@ -764,7 +764,7 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
-                cancelUntil(0);
+                uint32_t abstract_level = 0;
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
@@ -932,6 +932,7 @@
 void Solver::toDimacs(FILE* f, Clause& c, vec<Var>& map, Var& max)
 {
     if (satisfied(c)) /*auto*/{
+      watches.smudge(~c[1]);
       return;
     }/*auto*/
 
@@ -983,13 +984,7 @@
         
                if (!satisfied(ca[clauses[i]])){
             Clause& c = ca[clauses[i]];
-            for (int j = 0; j < c.size(); j++)
-                /*auto*/{
-                    if (value(c[j]) != l_False)
-                    /*auto*/{
-                        mapVar(var(c[j]), map, max);
-                    }/*auto*/
-                }/*auto*/
+            
         }
         
     }/*auto*/
