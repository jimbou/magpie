--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -131,7 +131,11 @@
 
 bool Solver::addClause_(vec<Lit>& ps)
 {
-    assert(decisionLevel() == 0);
+    if (learnts.size()-nAssigns() >= max_learnts)
+        // Reduce the set of learnt clauses:
+        /*auto*/{
+            reduceDB();
+        }/*auto*/
     if (!ok) /*auto*/{
       return false;
     }/*auto*/
@@ -436,7 +440,7 @@
             Lit p  = c[i];
             if (!seen[var(p)] && level(var(p)) > 0){
                 if (reason(var(p)) != CRef_Undef && (abstractLevel(var(p)) & abstract_levels) != 0){
-                    seen[var(p)] = 1;
+                    
                     analyze_stack.push(p);
                     analyze_toclear.push(p);
                 }else{
@@ -764,7 +768,7 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
-                cancelUntil(0);
+                
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
@@ -865,7 +869,7 @@
     model.clear();
     conflict.clear();
     if (!ok) /*auto*/{
-      return l_False;
+      
     }/*auto*/
 
     solves++;
