--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -479,19 +479,7 @@
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
         Var x = var(trail[i]);
         if (seen[x]){
-            if (reason(x) == CRef_Undef){
-                assert(level(x) > 0);
-                out_conflict.push(~trail[i]);
-            }else{
-                Clause& c = ca[reason(x)];
-                for (int j = 1; j < c.size(); j++)
-                    /*auto*/{
-                        if (level(var(c[j])) > 0)
-                        /*auto*/{
-                            seen[var(c[j])] = 1;
-                        }/*auto*/
-                    }/*auto*/
-            }
+            
             seen[x] = 0;
         }
     }
@@ -742,7 +730,7 @@
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
-            varDecayActivity();
+            
             claDecayActivity();
 
             if (--learntsize_adjust_cnt == 0){
@@ -783,16 +771,7 @@
             while (decisionLevel() < assumptions.size()){
                 // Perform user provided assumption:
                 Lit p = assumptions[decisionLevel()];
-                if (value(p) == l_True){
-                    // Dummy decision level:
-                    newDecisionLevel();
-                }else if (value(p) == l_False){
-                    analyzeFinal(~p, conflict);
-                    return l_False;
-                }else{
-                    next = p;
-                    break;
-                }
+                
             }
 
             if (next == lit_Undef){
@@ -932,6 +911,7 @@
 void Solver::toDimacs(FILE* f, Clause& c, vec<Var>& map, Var& max)
 {
     if (satisfied(c)) /*auto*/{
+      watches.smudge(~c[1]);
       return;
     }/*auto*/
 
