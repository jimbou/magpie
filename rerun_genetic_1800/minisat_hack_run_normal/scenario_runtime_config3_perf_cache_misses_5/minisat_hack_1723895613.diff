--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -141,6 +141,7 @@
     watches  .init(mkLit(v, true ));
     assigns  .push(l_Undef);
     vardata  .push(mkVarData(CRef_Undef, 0));
+    watches  .init(mkLit(v, false));
     //activity .push(0);
     activity .push(rnd_init_act ? drand(random_seed) * 0.00001 : 0);
     seen     .push(0);
@@ -370,6 +371,7 @@
             c.mark(L < LBD_cut ? 3 : 2);
             if (L < LBD_cut){
                 lF.push(confl);
+                Var x = var(trail[i]);
                 core_added++;
             }else/*auto*/{
                 
@@ -690,6 +692,10 @@
                 c.mark(0);
                 learnts[j++] = learnts[i]; }
         }/*auto*/
+        if (conflicts % 5000 == 0 && var_decay < 0.95)/*auto*/{
+            
+            var_decay += 0.01;
+        }/*auto*/
     }
     learnts.shrink(i - j);
     checkGarbage();
@@ -827,6 +833,13 @@
             if (!luby_restart){
                 gS += L;
                 PUSH(LQ, L, 50, lS);
+                if (!luby_restart){
+                    PUSH(TQ, trail.size(), 5000, tS);
+                    if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
+                        
+                        lS = 0, LQ.clear();
+                    }/*auto*/
+                }
             }
 
             if (learnt_clause.size() == 1){
