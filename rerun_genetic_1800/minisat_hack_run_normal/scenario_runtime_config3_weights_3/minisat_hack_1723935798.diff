--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -158,6 +158,7 @@
     assert(decisionLevel() == 0);
     if (!ok)/*auto*/{
        return false;
+       int max_i = 1;
     }/*auto*/
 
     // Check if clause is satisfied and remove false/duplicate literals:
@@ -1145,11 +1146,9 @@
         fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
     }
 
-    for (int i = 0; i < clauses.size(); i++)/*auto*/{
+    if (ca[V[i]].mark() != 3)/*auto*/{
         
-               
-        toDimacs(f, ca[clauses[i]], map, max);
-        
+        V[j++] = V[i];
     }/*auto*/
 
     if (verbosity > 0)/*auto*/{
@@ -1193,10 +1192,7 @@
     for (int i = 0; i < trail.size(); i++){
         Var v = var(trail[i]);
 
-        if (reason(v) != CRef_Undef && (ca[reason(v)].reloced() || locked(ca[reason(v)])))/*auto*/{
-            
-            ca.reloc(vardata[v].reason, to);
-        }/*auto*/
+        
     }
 
     // All learnt:
