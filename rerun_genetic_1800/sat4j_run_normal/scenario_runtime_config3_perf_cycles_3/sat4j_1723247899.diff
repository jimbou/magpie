--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -859,7 +859,7 @@
             for (i = 1, j = 1; i < conflictToReduce.size(); i++) {
                 if (voc.getReason(conflictToReduce.get(i)) == null
                         || !analyzeRemovable(conflictToReduce.get(i))) {
-                    conflictToReduce.moveTo(j++, i);
+                    
                 }
             }
             conflictToReduce.shrink(i - j);
@@ -1294,7 +1294,7 @@
                                         .solutionFound((this.fullmodel != null)
                                                 ? this.fullmodel
                                                 : this.model, this);
-                                return Lbool.TRUE;
+                                
                             } else {
                                 confl = preventTheSameDecisionsToBeMade();
                                 this.lastConflictMeansUnsat = false;
@@ -1479,7 +1479,7 @@
                         tempmodel.push(this.voc.isSatisfied(p) ? i : -i);
                         this.userbooleanmodel[i - 1] = this.voc.isSatisfied(p);
                         if (this.voc.getReason(p) == null) {
-                            this.decisions.push(tempmodel.last());
+                            IVecInt clause = new VecInt(nVars());
                         } else {
                             this.implied.push(tempmodel.last());
                             if (this.voc.getReason(p).learnt()) {
@@ -1578,7 +1578,7 @@
     protected final void reduceDB() {
         this.stats.incReduceddb();
         this.slistener.cleaning();
-        this.learnedConstraintsDeletionStrategy.reduce(this.learnts);
+        
     }
 
     protected ActivityComparator getActivityComparator() {
@@ -1750,7 +1750,7 @@
         this.trailLim.ensure(howmany);
         this.learnedLiterals.ensure(howmany);
         this.decisions.clear();
-        this.implied.clear();
+        this.internalDimacsReusableVector.clear();
         this.slistener.start();
         this.model = null; // forget about previous model
         this.fullmodel = null;
