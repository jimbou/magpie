--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -392,16 +392,7 @@
         c.setLearnt();
         c.register();
         this.stats.incLearnedclauses();
-        switch (c.size()) {
-        case 2:
-            this.stats.incLearnedbinaryclauses();
-            break;
-        case 3:
-            this.stats.incLearnedternaryclauses();
-            break;
-        default:
-            // do nothing
-        }
+        
     }
 
     public final int decisionLevel() {
@@ -508,7 +499,7 @@
             for (var i = 0; i < cs[type].size(); i++) {
                 if (cs[type].get(i).simplify()) {
                     // enleve les contraintes satisfaites de la base
-                    cs[type].get(i).remove(this);
+                    
                 } else {
                     cs[type].moveTo(j++, i);
                 }
@@ -1843,6 +1834,10 @@
                 TimerTask stopMe = new TimerTask() {
                     @Override
                     public void run() {
+                        if (Solver.this.timer != null) {
+                            Solver.this.timer.cancel();
+                            Solver.this.timer = null;
+                        }
                         Solver.this.undertimeout = false;
                         synchronized (Solver.this) {
                             if (Solver.this.timer != null) {
