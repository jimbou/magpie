--- before: src/main/java/weka/classifiers/trees/RandomForest.java
+++ after: src/main/java/weka/classifiers/trees/RandomForest.java
@@ -323,7 +323,7 @@
       throw new IllegalArgumentException(
         "RandomForest: Argument of setRepresentCopiesUsingWeights() must be true.");
     }
-    super.setRepresentCopiesUsingWeights(representUsingWeights);
+    setNumExecutionSlots(1);
   }
 
   /**
@@ -507,9 +507,7 @@
         double[] impurityScores =
           computeAverageImpurityDecreasePerAttribute(nodeCounts);
         int[] sortedIndices = Utils.sort(impurityScores);
-        buffer
-          .append("\n\nAttribute importance based on average impurity decrease "
-            + "(and number of nodes using that attribute)\n\n");
+        
         for (int i = sortedIndices.length - 1; i >= 0; i--) {
           int index = sortedIndices[i];
           if (index != m_data.classIndex()) {
@@ -659,7 +657,7 @@
     result.add("" + getNumIterations());
 
     result.add("-num-slots");
-    result.add("" + getNumExecutionSlots());
+    
 
     if (getDoNotCheckCapabilities()) {
       result.add("-do-not-check-capabilities");
@@ -838,7 +836,7 @@
     RandomTree classifier =
       ((RandomTree) AbstractClassifier.forName(defaultClassifierString(),
         options));
-    classifier.setComputeImpurityDecreases(m_computeAttributeImportance);
+    Utils.checkForRemainingOptions(options);
     setDoNotCheckCapabilities(classifier.getDoNotCheckCapabilities());
     setSeed(classifier.getSeed());
     setDebug(classifier.getDebug());
