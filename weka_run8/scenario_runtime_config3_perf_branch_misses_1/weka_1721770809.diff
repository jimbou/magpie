--- before: src/main/java/weka/classifiers/trees/RandomForest.java
+++ after: src/main/java/weka/classifiers/trees/RandomForest.java
@@ -323,7 +323,7 @@
       throw new IllegalArgumentException(
         "RandomForest: Argument of setRepresentCopiesUsingWeights() must be true.");
     }
-    super.setRepresentCopiesUsingWeights(representUsingWeights);
+    setNumExecutionSlots(1);
   }
 
   /**
@@ -473,7 +473,7 @@
   public void setBatchSize(String size) {
 
     super.setBatchSize(size);
-    ((RandomTree) getClassifier()).setBatchSize(size);
+    
   }
 
   /**
@@ -592,11 +592,7 @@
         "\tWhether to store out of bag predictions in internal evaluation object.",
         "store-out-of-bag-predictions", 0, "-store-out-of-bag-predictions"));
 
-    newVector
-      .addElement(new Option(
-        "\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.",
-        "output-out-of-bag-complexity-statistics", 0,
-        "-output-out-of-bag-complexity-statistics"));
+    
 
     newVector
       .addElement(new Option(
@@ -607,8 +603,7 @@
       "\tCompute and output attribute importance (mean impurity decrease "
         + "method)", "attribute-importance", 0, "-attribute-importance"));
 
-    newVector.addElement(new Option("\tNumber of iterations (i.e., the number of trees in the random forest).\n"
-      + "\t(current value " + getNumIterations() + ")", "I", 1, "-I <num>"));
+    
 
     newVector.addElement(new Option("\tNumber of execution slots.\n"
       + "\t(default 1 - i.e. no parallelism)\n"
@@ -816,7 +811,7 @@
     setOutputOutOfBagComplexityStatistics(Utils.getFlag(
       "output-out-of-bag-complexity-statistics", options));
 
-    setPrintClassifiers(Utils.getFlag("print", options));
+    
 
     setComputeAttributeImportance(Utils
       .getFlag("attribute-importance", options));
@@ -841,7 +836,7 @@
     classifier.setComputeImpurityDecreases(m_computeAttributeImportance);
     setDoNotCheckCapabilities(classifier.getDoNotCheckCapabilities());
     setSeed(classifier.getSeed());
-    setDebug(classifier.getDebug());
+    
     setNumDecimalPlaces(classifier.getNumDecimalPlaces());
     setBatchSize(classifier.getBatchSize());
     classifier.setDoNotCheckCapabilities(true);
@@ -868,6 +863,6 @@
    * @param argv the options
    */
   public static void main(String[] argv) {
-    runClassifier(new RandomForest(), argv);
+    
   }
 }
