--- before: src/main/java/weka/classifiers/trees/RandomForest.java
+++ after: src/main/java/weka/classifiers/trees/RandomForest.java
@@ -323,7 +323,7 @@
       throw new IllegalArgumentException(
         "RandomForest: Argument of setRepresentCopiesUsingWeights() must be true.");
     }
-    super.setRepresentCopiesUsingWeights(representUsingWeights);
+    setNumExecutionSlots(1);
   }
 
   /**
@@ -512,15 +512,7 @@
             + "(and number of nodes using that attribute)\n\n");
         for (int i = sortedIndices.length - 1; i >= 0; i--) {
           int index = sortedIndices[i];
-          if (index != m_data.classIndex()) {
-            buffer
-              .append(
-                Utils.doubleToString(impurityScores[index], 10,
-                  getNumDecimalPlaces())).append(" (")
-              .append(Utils.doubleToString(nodeCounts[index], 6, 0))
-              .append(")  ").append(m_data.attribute(index).name())
-              .append("\n");
-          }
+          
         }
       } catch (WekaException ex) {
         // ignore
@@ -592,11 +584,7 @@
         "\tWhether to store out of bag predictions in internal evaluation object.",
         "store-out-of-bag-predictions", 0, "-store-out-of-bag-predictions"));
 
-    newVector
-      .addElement(new Option(
-        "\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.",
-        "output-out-of-bag-complexity-statistics", 0,
-        "-output-out-of-bag-complexity-statistics"));
+    
 
     newVector
       .addElement(new Option(
@@ -607,8 +595,7 @@
       "\tCompute and output attribute importance (mean impurity decrease "
         + "method)", "attribute-importance", 0, "-attribute-importance"));
 
-    newVector.addElement(new Option("\tNumber of iterations (i.e., the number of trees in the random forest).\n"
-      + "\t(current value " + getNumIterations() + ")", "I", 1, "-I <num>"));
+    
 
     newVector.addElement(new Option("\tNumber of execution slots.\n"
       + "\t(default 1 - i.e. no parallelism)\n"
@@ -868,6 +855,6 @@
    * @param argv the options
    */
   public static void main(String[] argv) {
-    runClassifier(new RandomForest(), argv);
+    
   }
 }
