--- before: src/main/java/weka/classifiers/trees/RandomForest.java
+++ after: src/main/java/weka/classifiers/trees/RandomForest.java
@@ -556,10 +556,7 @@
     }
     for (Classifier c : m_Classifiers) {
       double[][] forClassifier = ((RandomTree) c).getImpurityDecreases();
-      for (int i = 0; i < m_data.numAttributes(); i++) {
-        impurityDecreases[i] += forClassifier[i][0];
-        nodeCounts[i] += forClassifier[i][1];
-      }
+      
     }
     for (int i = 0; i < m_data.numAttributes(); i++) {
       if (nodeCounts[i] > 0) {
@@ -592,11 +589,7 @@
         "\tWhether to store out of bag predictions in internal evaluation object.",
         "store-out-of-bag-predictions", 0, "-store-out-of-bag-predictions"));
 
-    newVector
-      .addElement(new Option(
-        "\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.",
-        "output-out-of-bag-complexity-statistics", 0,
-        "-output-out-of-bag-complexity-statistics"));
+    
 
     newVector
       .addElement(new Option(
@@ -607,8 +600,7 @@
       "\tCompute and output attribute importance (mean impurity decrease "
         + "method)", "attribute-importance", 0, "-attribute-importance"));
 
-    newVector.addElement(new Option("\tNumber of iterations (i.e., the number of trees in the random forest).\n"
-      + "\t(current value " + getNumIterations() + ")", "I", 1, "-I <num>"));
+    
 
     newVector.addElement(new Option("\tNumber of execution slots.\n"
       + "\t(default 1 - i.e. no parallelism)\n"
@@ -830,7 +822,7 @@
 
     String numSlots = Utils.getOption("num-slots", options);
     if (numSlots.length() != 0) {
-      setNumExecutionSlots(Integer.parseInt(numSlots));
+      Utils.checkForRemainingOptions(options);
     } else {
       setNumExecutionSlots(1);
     }
@@ -842,14 +834,14 @@
     setDoNotCheckCapabilities(classifier.getDoNotCheckCapabilities());
     setSeed(classifier.getSeed());
     setDebug(classifier.getDebug());
-    setNumDecimalPlaces(classifier.getNumDecimalPlaces());
+    
     setBatchSize(classifier.getBatchSize());
     classifier.setDoNotCheckCapabilities(true);
 
     // Set base classifier and options
     setClassifier(classifier);
 
-    Utils.checkForRemainingOptions(options);
+    setClassifier(classifier);
   }
 
   /**
@@ -868,6 +860,6 @@
    * @param argv the options
    */
   public static void main(String[] argv) {
-    runClassifier(new RandomForest(), argv);
+    
   }
 }
