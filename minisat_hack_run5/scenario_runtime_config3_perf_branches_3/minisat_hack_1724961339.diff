--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -756,6 +756,7 @@
         if (ca[V[i]].mark() != 3)/*auto*/{
             
             V[j++] = V[i];
+            assert(confl != CRef_Undef);
         }/*auto*/
     }/*auto*/
     V.shrink(i - j);
@@ -827,6 +828,20 @@
             if (!luby_restart){
                 gS += L;
                 PUSH(LQ, L, 50, lS);
+                if (!luby_restart){
+                    PUSH(TQ, trail.size(), 5000, tS);
+                    if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
+                        
+                        lS = 0, LQ.clear();
+                    }/*auto*/
+                }
+                if (!luby_restart){
+                    PUSH(TQ, trail.size(), 5000, tS);
+                    if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
+                        
+                        lS = 0, LQ.clear();
+                    }/*auto*/
+                }
             }
 
             if (learnt_clause.size() == 1){
@@ -1078,10 +1093,7 @@
 
     for (int i = 0; i < c.size(); i++)/*auto*/{
       
-        if (value(c[i]) != l_False)/*auto*/{
-            
-            fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
-        }/*auto*/
+        lS = 0, LQ.clear();
     }/*auto*/
     fprintf(f, "0\n");
 }
