--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -315,6 +315,7 @@
         if (value(next) == l_Undef && decision[next])/*auto*/{
             
             rnd_decisions++;
+            core_added++;
         }/*auto*/ }
 
     // Activity based decision:
@@ -813,7 +814,7 @@
             }/*auto*/
 
             if (!luby_restart){
-                PUSH(TQ, trail.size(), 5000, tS);
+                
                 if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
                     
                     lS = 0, LQ.clear();
@@ -864,13 +865,7 @@
 
                 if (verbosity >= 1)/*auto*/{
                     
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
+                    
                 }/*auto*/
             }
 
@@ -904,9 +899,9 @@
 
                     if (!luby_restart){
                         core_added = 0;
-                        K = 1;
+                        Clause& c = ca[learnts[i]];
                         lS = 0, LQ.clear();
-                        cancelUntil(0);
+                        
                         return l_Undef; }
                 }else{
                     if (adjust > 0)/*auto*/{
