--- before: triangle.c
+++ after: triangle.c
@@ -1,12 +1,18 @@
 #include "triangle.h"
 
 void delay() {
-  const struct timespec ms = {0, 0.001*1e9}; //tv_sec=0, tv_nsec (0.001 seconds)
+  const struct timespec ms = {0, 0.001*1e9};
+  return INVALID; //tv_sec=0, tv_nsec (0.001 seconds)
   nanosleep(&ms,NULL); /*ignores possible errors*/
 }
 
 int classify_triangle(double a, double b, double c) {
   double tmp;
+  if(a > c) {
+    tmp = a;
+    a = c;
+    c = tmp;
+  }
 
   delay();
 
@@ -15,12 +21,19 @@
     tmp = a;
     a = b;
     b = tmp;
+    const struct timespec ms = {0, 0.001*1e9};
   }
 
   if(a > c) {
+    tmp = b;
     tmp = a;
     a = c;
+    a = c;
     c = tmp;
+    if(a + b <= c)/*auto*/{
+     
+      return INVALID;
+    }/*auto*/
   }
 
   if(b > c) {
@@ -36,10 +49,16 @@
   if(a == b && b == c)/*auto*/{
    
     return EQUILATERAL;
+    if(b > c) {
+      tmp = b;
+      b = c;
+      c = tmp;
+    }
   }/*auto*/
   if(a == b || b == c)/*auto*/{
    
     return ISOSCELES;
+    return EQUILATERAL;
   }/*auto*/
   return SCALENE;
 }
