2024-06-26 15:45:21,188	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 6431895379794967
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified
trust_local_filesystem = True

[magpie.log]
color_output = True
format_info = {counter:<7} {status:<20} {best}{fitness} ({ratio}) [{size}] {cached} {log}
format_debug = patch({counter})="{patch}"{diffifbest}
format_fitness = {:.6f}
format_ratio = {:.2%%}
format_patchif = 
	 --> {patch}
format_diffif = 
	{diff}

[software]
path = examples/sat4j
target_files = org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml
software = BasicSoftware
model_rules = 
	*.params : ParamFileConfigModel
	*.xml : SrcmlModel
	* : LineModel
model_config = 
	*.params : [paramconfig]
	*.xml : [srcml]
init_cmd = 
init_timeout = 60
init_lengthout = -1
setup_cmd = ant sat
setup_timeout = 
setup_lengthout = 
compile_cmd = ant sat
compile_timeout = 
compile_lengthout = 
test_cmd = bash test.sh
test_timeout = 
test_lengthout = 
run_cmd = perf stat -e cpu-clock bash run_fixed.sh
run_timeout = 
run_lengthout = 
retries = 1
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = perf_cpu_clock

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[paramconfig]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
cli_none = hide
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = FirstImprovement
possible_edits = 
	SrcmlStmtReplacement
	SrcmlStmtInsertion
	SrcmlStmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 1000
max_time = 100
target_fitness = 
cache_maxsize = 100
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2024-06-26 15:45:21,189	[DEBUG]	
2024-06-26 15:45:21,189	[INFO]	==== SEARCH: FirstImprovement ====
2024-06-26 15:45:21,189	[INFO]	~~~~ WARMUP ~~~~
2024-06-26 15:45:48,345	[DEBUG]	EXEC>  SUCCESS 62.0
2024-06-26 15:45:48,345	[INFO]	WARM    SUCCESS               62.000000 (--) [0 edit(s)]  
2024-06-26 15:46:05,973	[DEBUG]	EXEC>  SUCCESS 0.0
2024-06-26 15:46:05,974	[INFO]	WARM    SUCCESS               0.000000 (--) [0 edit(s)]  
2024-06-26 15:46:24,120	[DEBUG]	EXEC>  SUCCESS 62.0
2024-06-26 15:46:24,120	[INFO]	WARM    SUCCESS               62.000000 (--) [0 edit(s)]  
2024-06-26 15:46:24,120	[INFO]	REF     SUCCESS               62.000000 (--) [0 edit(s)]  
2024-06-26 15:46:24,120	[INFO]	
2024-06-26 15:46:24,120	[INFO]	~~~~ START ~~~~
2024-06-26 15:46:32,118	[INFO]	1       TEST_CODE_ERROR       None (--) [1 edit(s)]  
2024-06-26 15:46:32,118	[DEBUG]	patch(1)="SrcmlStmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 573), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 427))"
2024-06-26 15:46:49,888	[DEBUG]	EXEC>  SUCCESS 95.0
2024-06-26 15:46:49,888	[INFO]	2       SUCCESS               95.000000 (153.23%) [1 edit(s)]  
2024-06-26 15:46:49,888	[DEBUG]	patch(2)="SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 447))"
2024-06-26 15:46:53,312	[INFO]	3       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-26 15:46:53,313	[DEBUG]	patch(3)="SrcmlStmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 1004), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 294))"
2024-06-26 15:46:56,692	[INFO]	4       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-26 15:46:56,692	[DEBUG]	patch(4)="SrcmlStmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 485), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 424))"
2024-06-26 15:46:59,927	[INFO]	5       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-26 15:46:59,927	[DEBUG]	patch(5)="SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 17))"
2024-06-26 15:47:17,951	[DEBUG]	EXEC>  SUCCESS 37.0
2024-06-26 15:47:17,951	[INFO]	6       SUCCESS              *37.000000 (59.68%) [1 edit(s)]  
2024-06-26 15:47:17,952	[DEBUG]	patch(6)="SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 334))"
--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -960,21 +960,7 @@
                 assert voc.getReason(q) != null;
                 Constr c = voc.getReason(q);
                 analyzestack.pop();
-                for (var i = 1; i < c.size(); i++) {
-                    int l = c.get(i);
-                    if (!seen[var(l)] && voc.getLevel(l) != 0) {
-                        if (voc.getReason(l) == null) {
-                            for (int j = top; j < analyzetoclear.size(); j++) {
-                                seen[analyzetoclear.get(j) >> 1] = false;
-                            }
-                            analyzetoclear.shrink(analyzetoclear.size() - top);
-                            return false;
-                        }
-                        seen[l >> 1] = true;
-                        analyzestack.push(l);
-                        analyzetoclear.push(l);
-                    }
-                }
+                
             }
 
             return true;

2024-06-26 15:47:36,683	[DEBUG]	EXEC>  SUCCESS 59.0
2024-06-26 15:47:36,683	[INFO]	7       SUCCESS               59.000000 (95.16%) [2 edit(s)]  
2024-06-26 15:47:36,684	[DEBUG]	patch(7)="SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 334)) | SrcmlStmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 958), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 437))"
2024-06-26 15:47:39,837	[INFO]	8       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-26 15:47:39,837	[DEBUG]	patch(8)="SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 334)) | SrcmlStmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 698), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 344))"
2024-06-26 15:47:43,179	[INFO]	9       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-26 15:47:43,180	[DEBUG]	patch(9)="SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 334)) | SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 123))"
2024-06-26 15:48:01,040	[DEBUG]	EXEC>  SUCCESS 58.0
2024-06-26 15:48:01,040	[INFO]	10      SUCCESS               58.000000 (93.55%) [2 edit(s)]  
2024-06-26 15:48:01,040	[DEBUG]	patch(10)="SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 334)) | SrcmlStmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 1017), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 253))"
2024-06-26 15:48:04,109	[INFO]	11      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-26 15:48:04,109	[DEBUG]	patch(11)="SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 334)) | SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 89))"
2024-06-26 15:48:04,117	[INFO]	12      SUCCESS               62.000000 (100.00%) [0 edit(s)] [cached] 
2024-06-26 15:48:04,117	[DEBUG]	patch(12)=""
2024-06-26 15:48:22,316	[DEBUG]	EXEC>  SUCCESS 41.0
2024-06-26 15:48:22,316	[INFO]	13      SUCCESS               41.000000 (66.13%) [2 edit(s)]  
2024-06-26 15:48:22,316	[DEBUG]	patch(13)="SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 334)) | SrcmlStmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 297), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 942))"
2024-06-26 15:48:22,325	[INFO]	~~~~ END ~~~~
2024-06-26 15:48:22,325	[INFO]	
2024-06-26 15:48:22,325	[INFO]	==== REPORT ====
2024-06-26 15:48:22,325	[INFO]	Termination: time budget
2024-06-26 15:48:22,326	[INFO]	Retries: 1
2024-06-26 15:48:22,326	[INFO]	Log file: /home/dbouras/magpie/_magpie_logs/sat4j_1719413120.log
2024-06-26 15:48:22,326	[INFO]	Patch file: _magpie_logs/sat4j_1719413120.patch
2024-06-26 15:48:22,326	[INFO]	Diff file: _magpie_logs/sat4j_1719413120.diff
2024-06-26 15:48:22,326	[INFO]	Reference fitness: 62.000000
2024-06-26 15:48:22,326	[INFO]	Best fitness: 37.000000
2024-06-26 15:48:22,326	[INFO]	
2024-06-26 15:48:22,327	[INFO]	==== BEST PATCH ====
SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 334))
2024-06-26 15:48:22,327	[INFO]	
2024-06-26 15:48:22,327	[INFO]	==== DIFF ====
[1m--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java[0m
[1m+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java[0m
[36m@@ -960,21 +960,7 @@[0m
                 assert voc.getReason(q) != null;
                 Constr c = voc.getReason(q);
                 analyzestack.pop();
[31m-                for (var i = 1; i < c.size(); i++) {[0m
[31m-                    int l = c.get(i);[0m
[31m-                    if (!seen[var(l)] && voc.getLevel(l) != 0) {[0m
[31m-                        if (voc.getReason(l) == null) {[0m
[31m-                            for (int j = top; j < analyzetoclear.size(); j++) {[0m
[31m-                                seen[analyzetoclear.get(j) >> 1] = false;[0m
[31m-                            }[0m
[31m-                            analyzetoclear.shrink(analyzetoclear.size() - top);[0m
[31m-                            return false;[0m
[31m-                        }[0m
[31m-                        seen[l >> 1] = true;[0m
[31m-                        analyzestack.push(l);[0m
[31m-                        analyzetoclear.push(l);[0m
[31m-                    }[0m
[31m-                }[0m
[32m+                [0m
             }
 
             return true;

