--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -723,34 +723,7 @@
         if (confl == null) {
             return outLearnt;
         }
-        do {
-            preason.clear();
-            confl.calcReason(p, preason);
-            // Trace reason for p
-            for (var j = 0; j < preason.size(); j++) {
-                int q = preason.get(j);
-                if (!seen[q >> 1]) {
-                    seen[q >> 1] = true;
-                    if (this.voc.getReason(q) == null
-                            && this.voc.getLevel(q) > 0) {
-                        assert assumps.contains(toDimacs(q));
-                        outLearnt.push(toDimacs(q));
-                    }
-                }
-            }
-
-            // select next reason to look at
-            do {
-                p = this.trail.last();
-                confl = this.voc.getReason(p);
-                undoOne();
-                if (decisionLevel() > 0
-                        && this.trail.size() <= this.trailLim.last()) {
-                    this.trailLim.pop();
-                }
-            } while (this.trail.size() > 0 && decisionLevel() > 0
-                    && (!seen[p >> 1] || confl == null));
-        } while (decisionLevel() > 0);
+        
         return outLearnt;
     }
 
@@ -2517,7 +2490,7 @@
             clause.push(LiteralsUtils.toInternal(d));
         }
         this.sharedConflict = this.dsfactory.createUnregisteredClause(clause);
-        this.sharedConflict.register();
+        
         addConstr(this.sharedConflict);
         return this.sharedConflict;
     }
