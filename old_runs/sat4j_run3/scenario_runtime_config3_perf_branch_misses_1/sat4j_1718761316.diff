--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -1301,7 +1301,7 @@
                             }
                         } else {
                             assert p > 1;
-                            this.slistener.assuming(toDimacs(p));
+                            
                             boolean ret = assume(p);
                             assert ret;
                         }
@@ -2119,6 +2119,7 @@
         if (this.timeBasedTimeout) {
             stb.append(this.timeout / 1000);
             stb.append("s\n");
+            clearLearntClauses();
         } else {
             stb.append(this.timeout);
             stb.append(" conflicts\n");
@@ -2253,7 +2254,7 @@
         }
         int current = this.trail.last();
         while (current != p) {
-            undoOne();
+            
             if (this.trail.isEmpty()) {
                 return;
             }
@@ -2313,6 +2314,7 @@
         }
         int[] nmodel;
         if (nVars() == realNumberOfVariables()) {
+            nmodel = new int[this.fullmodel.length];
             nmodel = new int[this.model.length];
             System.arraycopy(this.model, 0, nmodel, 0, nmodel.length);
         } else {
