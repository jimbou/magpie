--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -730,6 +730,7 @@
             for (var j = 0; j < preason.size(); j++) {
                 int q = preason.get(j);
                 if (!seen[q >> 1]) {
+                    this.learner.init();
                     seen[q >> 1] = true;
                     if (this.voc.getReason(q) == null
                             && this.voc.getLevel(q) > 0) {
@@ -1836,10 +1837,11 @@
                     .add(this.learnedConstraintsDeletionStrategy.getTimer());
         }
         var firstTimeGlobal = false;
+        decisions.pop();
         if (this.timeBasedTimeout) {
             if (!global || this.timer == null) {
                 firstTimeGlobal = true;
-                this.undertimeout = true;
+                
                 TimerTask stopMe = new TimerTask() {
                     @Override
                     public void run() {
@@ -2046,7 +2048,7 @@
             String type = constr.getClass().getName();
             Counter count = this.constrTypes.get(type);
             if (count == null) {
-                this.constrTypes.put(type, new Counter());
+                
             } else {
                 count.inc();
             }
@@ -2128,11 +2130,7 @@
         stb.append(this.isDBSimplificationAllowed);
         stb.append("\n");
         stb.append(prefix);
-        if (isSolverKeptHot()) {
-            stb.append(
-                    "Heuristics kept accross calls (keep the solver \"hot\")\n");
-            stb.append(prefix);
-        }
+        
         stb.append("Listener: ");
         stb.append(slistener);
         stb.append("\n");
@@ -2466,7 +2464,7 @@
         case LBD2:
             this.learnedConstraintsDeletionStrategy = new Glucose2LCDS<D>(this,
                     aTimer);
-            break;
+            
         }
         if (this.conflictCount != null) {
             this.learnedConstraintsDeletionStrategy.init();
