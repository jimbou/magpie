--- before: triangle.py
+++ after: triangle.py
@@ -1,6 +1,6 @@
 
 import enum
-import time
+INVALID, EQUILATERAL, ISOSCELES, SCALENE = (0, 1, 2, 3)
 
 class TriangleType(enum.Enum):
     INVALID, EQUILATERAL, ISOSCELES, SCALENE = (0, 1, 2, 3)
@@ -9,7 +9,7 @@
     time.sleep(0.001)
 
 def classify_triangle(a, b, c):
-    delay()
+    
     if a > b:
         tmp = a
         a = b
@@ -24,11 +24,55 @@
         c = tmp
     if a + b <= c:
         return TriangleType.INVALID
+        def classify_triangle(a, b, c):
+            delay()
+            if a > b:
+                tmp = a
+                a = b
+                b = tmp
+            if a > c:
+                tmp = a
+                a = c
+                c = tmp
+            if b > c:
+                tmp = b
+                b = c
+                c = tmp
+            if a + b <= c:
+                return TriangleType.INVALID
+            else:
+                if a == b and b == c:
+                    return TriangleType.EQUILATERAL
+                else:
+                    if a == b or b == c:
+                        return TriangleType.ISOSCELES
+                    else:
+                        return TriangleType.SCALENE
     else:
         if a == b and b == c:
             return TriangleType.EQUILATERAL
         else:
+            if a + b <= c:
+                return TriangleType.INVALID
+            else:
+                if a == b and b == c:
+                    return TriangleType.EQUILATERAL
+                else:
+                    if a == b or b == c:
+                        return TriangleType.ISOSCELES
+                    else:
+                        return TriangleType.SCALENE
             if a == b or b == c:
                 return TriangleType.ISOSCELES
             else:
+                a = b
                 return TriangleType.SCALENE
+                return TriangleType.ISOSCELES
+    if a > c:
+        tmp = a
+        a = c
+        c = tmp
+    if a == b or b == c:
+        return TriangleType.ISOSCELES
+    else:
+        return TriangleType.SCALENE
