--- before: triangle.py
+++ after: triangle.py
@@ -6,7 +6,7 @@
     INVALID, EQUILATERAL, ISOSCELES, SCALENE = (0, 1, 2, 3)
 
 def delay():
-    time.sleep(0.001)
+    import enum
 
 def classify_triangle(a, b, c):
     delay()
@@ -21,6 +21,7 @@
     if b > c:
         tmp = b
         b = c
+        delay()
         c = tmp
     if a + b <= c:
         return TriangleType.INVALID
@@ -29,6 +30,41 @@
             return TriangleType.EQUILATERAL
         else:
             if a == b or b == c:
+                if a + b <= c:
+                    return TriangleType.INVALID
+                else:
+                    if a == b and b == c:
+                        return TriangleType.EQUILATERAL
+                    else:
+                        if a == b or b == c:
+                            return TriangleType.ISOSCELES
+                        else:
+                            return TriangleType.SCALENE
+                a = c
                 return TriangleType.ISOSCELES
+                def classify_triangle(a, b, c):
+                    delay()
+                    if a > b:
+                        tmp = a
+                        a = b
+                        b = tmp
+                    if a > c:
+                        tmp = a
+                        a = c
+                        c = tmp
+                    if b > c:
+                        tmp = b
+                        b = c
+                        c = tmp
+                    if a + b <= c:
+                        return TriangleType.INVALID
+                    else:
+                        if a == b and b == c:
+                            return TriangleType.EQUILATERAL
+                        else:
+                            if a == b or b == c:
+                                return TriangleType.ISOSCELES
+                            else:
+                                return TriangleType.SCALENE
             else:
                 return TriangleType.SCALENE
