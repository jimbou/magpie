2024-06-25 22:22:35,039	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 1878186986031681
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified
trust_local_filesystem = True

[magpie.log]
color_output = True
format_info = {counter:<7} {status:<20} {best}{fitness} ({ratio}) [{size}] {cached} {log}
format_debug = patch({counter})="{patch}"{diffifbest}
format_fitness = {:.6f}
format_ratio = {:.2%%}
format_patchif = 
	 --> {patch}
format_diffif = 
	{diff}

[software]
path = examples/sat4j
target_files = org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml
software = BasicSoftware
model_rules = 
	*.params : ParamFileConfigModel
	*.xml : SrcmlModel
	* : LineModel
model_config = 
	*.params : [paramconfig]
	*.xml : [srcml]
init_cmd = 
init_timeout = 60
init_lengthout = -1
setup_cmd = ant sat
setup_timeout = 
setup_lengthout = 
compile_cmd = ant sat
compile_timeout = 
compile_lengthout = 
test_cmd = bash test.sh
test_timeout = 
test_lengthout = 
run_cmd = ./run_custom.sh "bash run_fixed.sh"
run_timeout = 
run_lengthout = 
retries = 3
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = weights

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[paramconfig]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
cli_none = hide
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = FirstImprovement
possible_edits = 
	SrcmlStmtReplacement
	SrcmlStmtInsertion
	SrcmlStmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 1000
max_time = 100
target_fitness = 
cache_maxsize = 100
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2024-06-25 22:22:35,039	[DEBUG]	
2024-06-25 22:22:35,039	[INFO]	==== SEARCH: FirstImprovement ====
2024-06-25 22:22:35,039	[INFO]	~~~~ WARMUP ~~~~
2024-06-25 22:27:22,484	[DEBUG]	EXEC>  SUCCESS 973445293.578
2024-06-25 22:27:22,484	[INFO]	WARM    SUCCESS               973445293.578000 (--) [0 edit(s)]  
2024-06-25 22:32:01,673	[DEBUG]	EXEC>  SUCCESS 944993539.9063333
2024-06-25 22:32:01,673	[INFO]	WARM    SUCCESS               944993539.906333 (--) [0 edit(s)]  
2024-06-25 22:36:40,721	[DEBUG]	EXEC>  SUCCESS 1047292110.195
2024-06-25 22:36:40,721	[INFO]	WARM    SUCCESS               1047292110.195000 (--) [0 edit(s)]  
2024-06-25 22:36:40,721	[INFO]	REF     SUCCESS               1047292110.195000 (--) [0 edit(s)]  
2024-06-25 22:36:40,721	[INFO]	
2024-06-25 22:36:40,721	[INFO]	~~~~ START ~~~~
2024-06-25 22:36:50,817	[INFO]	1       TEST_CODE_ERROR       None (--) [1 edit(s)]  
2024-06-25 22:36:50,817	[DEBUG]	patch(1)="SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 423))"
2024-06-25 22:36:54,434	[INFO]	2       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-25 22:36:54,434	[DEBUG]	patch(2)="SrcmlStmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 82), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 785))"
2024-06-25 22:36:57,665	[INFO]	3       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-25 22:36:57,665	[DEBUG]	patch(3)="SrcmlStmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 662), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 190))"
2024-06-25 22:37:06,430	[INFO]	4       TEST_CODE_ERROR       None (--) [1 edit(s)]  
2024-06-25 22:37:06,430	[DEBUG]	patch(4)="SrcmlStmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 363), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 50))"
2024-06-25 22:37:09,808	[INFO]	5       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-25 22:37:09,808	[DEBUG]	patch(5)="SrcmlStmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 755), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 607))"
2024-06-25 22:37:11,094	[INFO]	6       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-25 22:37:11,094	[DEBUG]	patch(6)="SrcmlStmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 421), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 334))"
2024-06-25 22:37:14,523	[INFO]	7       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-25 22:37:14,523	[DEBUG]	patch(7)="SrcmlStmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 384), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 359))"
2024-06-25 22:37:15,893	[INFO]	8       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-25 22:37:15,893	[DEBUG]	patch(8)="SrcmlStmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 30), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 312))"
2024-06-25 22:37:19,148	[INFO]	9       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-25 22:37:19,148	[DEBUG]	patch(9)="SrcmlStmtInsertion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', '_inter_block', 574), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 224))"
2024-06-25 22:41:59,437	[DEBUG]	EXEC>  SUCCESS 973571333.052
2024-06-25 22:41:59,437	[INFO]	10      SUCCESS              *973571333.052000 (92.96%) [1 edit(s)]  
2024-06-25 22:41:59,437	[DEBUG]	patch(10)="SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 563))"
--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -1446,27 +1446,7 @@
         for (var i = 1; i <= nVars(); i++) {
             if (this.voc.belongsToPool(i)) {
                 int p = this.voc.getFromPool(i);
-                if (!this.voc.isUnassigned(p)) {
-                    tempmodel.push(this.voc.isSatisfied(p) ? i : -i);
-                    this.userbooleanmodel[i - 1] = this.voc.isSatisfied(p);
-                    reason = this.voc.getReason(p);
-                    if (reason == null && this.voc.getLevel(p) > 0
-                            // we consider literals propagated by learned
-                            // clauses
-                            // as decisions to allow blocking models by
-                            // decisions.
-                            || reason != null && reason.learnt()) {
-                        this.decisions.push(tempmodel.last());
-                        if (reason != null) {
-                            this.assignmentOrigins[i
-                                    - 1] = AssignmentOrigin.PROPAGATED_LEARNED;
-                        }
-                    } else {
-                        this.implied.push(tempmodel.last());
-                        this.assignmentOrigins[i
-                                - 1] = AssignmentOrigin.PROPAGATED_ORIGINAL;
-                    }
-                }
+                
             }
         }
         this.model = new int[tempmodel.size()];

2024-06-25 22:41:59,447	[INFO]	~~~~ END ~~~~
2024-06-25 22:41:59,447	[INFO]	
2024-06-25 22:41:59,447	[INFO]	==== REPORT ====
2024-06-25 22:41:59,447	[INFO]	Termination: time budget
2024-06-25 22:41:59,447	[INFO]	Retries: 3
2024-06-25 22:41:59,447	[INFO]	Log file: /home/dbouras/magpie/_magpie_logs/sat4j_1719350554.log
2024-06-25 22:41:59,447	[INFO]	Patch file: _magpie_logs/sat4j_1719350554.patch
2024-06-25 22:41:59,447	[INFO]	Diff file: _magpie_logs/sat4j_1719350554.diff
2024-06-25 22:41:59,448	[INFO]	Reference fitness: 1047292110.195000
2024-06-25 22:41:59,448	[INFO]	Best fitness: 973571333.052000
2024-06-25 22:41:59,448	[INFO]	
2024-06-25 22:41:59,449	[INFO]	==== BEST PATCH ====
SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 563))
2024-06-25 22:41:59,449	[INFO]	
2024-06-25 22:41:59,449	[INFO]	==== DIFF ====
[1m--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java[0m
[1m+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java[0m
[36m@@ -1446,27 +1446,7 @@[0m
         for (var i = 1; i <= nVars(); i++) {
             if (this.voc.belongsToPool(i)) {
                 int p = this.voc.getFromPool(i);
[31m-                if (!this.voc.isUnassigned(p)) {[0m
[31m-                    tempmodel.push(this.voc.isSatisfied(p) ? i : -i);[0m
[31m-                    this.userbooleanmodel[i - 1] = this.voc.isSatisfied(p);[0m
[31m-                    reason = this.voc.getReason(p);[0m
[31m-                    if (reason == null && this.voc.getLevel(p) > 0[0m
[31m-                            // we consider literals propagated by learned[0m
[31m-                            // clauses[0m
[31m-                            // as decisions to allow blocking models by[0m
[31m-                            // decisions.[0m
[31m-                            || reason != null && reason.learnt()) {[0m
[31m-                        this.decisions.push(tempmodel.last());[0m
[31m-                        if (reason != null) {[0m
[31m-                            this.assignmentOrigins[i[0m
[31m-                                    - 1] = AssignmentOrigin.PROPAGATED_LEARNED;[0m
[31m-                        }[0m
[31m-                    } else {[0m
[31m-                        this.implied.push(tempmodel.last());[0m
[31m-                        this.assignmentOrigins[i[0m
[31m-                                - 1] = AssignmentOrigin.PROPAGATED_ORIGINAL;[0m
[31m-                    }[0m
[31m-                }[0m
[32m+                [0m
             }
         }
         this.model = new int[tempmodel.size()];

