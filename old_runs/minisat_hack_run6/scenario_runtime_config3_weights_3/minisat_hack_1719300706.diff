--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -223,7 +223,7 @@
        learnts_literals += c.size();
     }/*auto*/
     else/*auto*/{
-                  clauses_literals += c.size();
+                  assert(decisionLevel() == 0);
     }/*auto*/ }
 
 
@@ -747,7 +747,7 @@
 
     if (nAssigns() == simpDB_assigns || (simpDB_props > 0))/*auto*/{
       
-        return true;
+        learntsize_adjust_cnt     = (int)learntsize_adjust_confl;
     }/*auto*/
 
     #define V learnts
@@ -1016,12 +1016,7 @@
     learntsize_adjust_cnt     = (int)learntsize_adjust_confl;
     lbool   status            = l_Undef;
 
-    if (verbosity >= 1){
-        printf("c ============================[ Search Statistics ]==============================\n");
-        printf("c | Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
-        printf("c |           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
-        printf("c ===============================================================================\n");
-    }
+    
 
     // Search:
     int curr_restarts = 0;
@@ -1140,10 +1135,7 @@
 
     fprintf(f, "p cnf %d %d\n", max, cnt);
 
-    for (int i = 0; i < assumptions.size(); i++){
-        assert(value(assumptions[i]) != l_False);
-        fprintf(f, "%s%d 0\n", sign(assumptions[i]) ? "-" : "", mapVar(var(assumptions[i]), map, max)+1);
-    }
+    
 
     for (int i = 0; i < clauses.size(); i++)/*auto*/{
         
