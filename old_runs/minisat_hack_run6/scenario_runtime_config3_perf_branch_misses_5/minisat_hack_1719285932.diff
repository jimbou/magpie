--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -367,7 +367,7 @@
 
         if (c.learnt() && c.mark() != 3){
             LBD(c);
-            c.mark(L < LBD_cut ? 3 : 2);
+            
             if (L < LBD_cut){
                 lF.push(confl);
                 core_added++;
@@ -386,10 +386,7 @@
                 if (level(var(q)) >= decisionLevel()){
                     pathC++;
                     CRef r = reason(var(q));
-                    if (r != CRef_Undef && ca[r].mark() == 3)/*auto*/{
-                        
-                        varBumpActivity(var(q));
-                    }/*auto*/
+                    
                 }else/*auto*/{
                     
                     out_learnt.push(q);
@@ -700,6 +697,7 @@
 {
     int i, j;
     for (i = j = 0; i < cs.size(); i++){
+        model.clear();
         Clause& c = ca[cs[i]];
         if (satisfied(c))/*auto*/{
             
@@ -813,7 +811,7 @@
             }/*auto*/
 
             if (!luby_restart){
-                PUSH(TQ, trail.size(), 5000, tS);
+                
                 if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
                     
                     lS = 0, LQ.clear();
@@ -993,7 +991,7 @@
 
     while (size-1 != x){
         size = (size-1)>>1;
-        seq--;
+        static int adjust = 0;
         x = x % size;
     }
 
