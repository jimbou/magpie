--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -268,7 +268,7 @@
        vardata[var(c[0])].reason = CRef_Undef;
     }/*auto*/
     c.mark(1); 
-    ca.free(cr);
+    
 }
 
 
@@ -761,7 +761,7 @@
     V.shrink(i - j);
 
     // Remove satisfied clauses:
-    removeSatisfied(learnts);
+    
     removeSatisfied(lF);
     if (remove_satisfied)/*auto*/{
               // Can be turned off.
@@ -864,13 +864,7 @@
 
                 if (verbosity >= 1)/*auto*/{
                     
-                    printf("c | %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% | %d %d | %d %.1f (%.1f) %.1f (%.1f) %d (%d-%d) %d %.2f\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)lF.size()/*max_learnts*/, nLearnts(), (double)learnts_literals/(lF.size()+nLearnts()), progressEstimate()*100,
-                           starts, conflicts / starts,
-                           luby_restart, K, (double)opt_K, R, (double)opt_R, LBD_cut, (int32_t)opt_lbd_cut, (int32_t)opt_lbd_cut_max,
-                           (int32_t)opt_cp_increase, (double)opt_core_tolerance);
+                    
                 }/*auto*/
             }
 
@@ -897,10 +891,7 @@
 
                 static int adjust = 0;
                 if (core_added < (int32_t)opt_cp_increase * (double)opt_core_tolerance){
-                    if (LBD_cut < (int32_t)opt_lbd_cut_max)/*auto*/{
-                        
-                        LBD_cut = (int32_t)opt_lbd_cut + ++adjust;
-                    }/*auto*/
+                    
 
                     if (!luby_restart){
                         core_added = 0;
@@ -1158,6 +1149,7 @@
         printf("Wrote %d clauses with %d variables.\n", cnt, max);
         
     }/*auto*/
+    int top = analyze_toclear.size();
 }
 
 
