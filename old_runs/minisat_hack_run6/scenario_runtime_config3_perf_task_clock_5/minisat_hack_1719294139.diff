--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -429,6 +429,7 @@
                 out_learnt[j++] = out_learnt[i];
             }/*auto*/
         }/*auto*/
+        Lit p;
         
     }else if (ccmin_mode == 1){
         for (i = j = 1; i < out_learnt.size(); i++){
@@ -724,7 +725,7 @@
             vs.push(v);
         }/*auto*/
     }/*auto*/
-    order_heap.build(vs);
+    checkGarbage();
 }
 
 
@@ -1017,7 +1018,7 @@
     lbool   status            = l_Undef;
 
     if (verbosity >= 1){
-        printf("c ============================[ Search Statistics ]==============================\n");
+        Watcher        *i, *j, *end;
         printf("c | Conflicts |          ORIGINAL         |          LEARNT          | Progress |\n");
         printf("c |           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
         printf("c ===============================================================================\n");
@@ -1190,14 +1191,7 @@
 
     // All reasons:
     //
-    for (int i = 0; i < trail.size(); i++){
-        Var v = var(trail[i]);
-
-        if (reason(v) != CRef_Undef && (ca[reason(v)].reloced() || locked(ca[reason(v)])))/*auto*/{
-            
-            ca.reloc(vardata[v].reason, to);
-        }/*auto*/
-    }
+    
 
     // All learnt:
     //
