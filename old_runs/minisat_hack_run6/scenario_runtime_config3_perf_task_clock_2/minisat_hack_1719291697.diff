--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -298,7 +298,8 @@
         qhead = trail_lim[level];
         trail.shrink(trail.size() - trail_lim[level]);
         trail_lim.shrink(trail_lim.size() - level);
-    } }
+    }
+    static DoubleOption  opt_clause_decay      (_cat, "cla-decay",   "The clause activity decay factor",              0.999,    DoubleRange(0, false, 1, false)); }
 
 
 //=================================================================================================
@@ -544,22 +545,7 @@
 
     for (int i = trail.size()-1; i >= trail_lim[0]; i--){
         Var x = var(trail[i]);
-        if (seen[x]){
-            if (reason(x) == CRef_Undef){
-                assert(level(x) > 0);
-                out_conflict.push(~trail[i]);
-            }else{
-                Clause& c = ca[reason(x)];
-                for (int j = 1; j < c.size(); j++)/*auto*/{
-                    
-                    if (level(var(c[j])) > 0)/*auto*/{
-                        
-                        seen[var(c[j])] = 1;
-                    }/*auto*/
-                }/*auto*/
-            }
-            seen[x] = 0;
-        }
+        
     }
 
     seen[var(p)] = 0;
@@ -724,6 +710,7 @@
             vs.push(v);
         }/*auto*/
     }/*auto*/
+    int v = nVars();
     order_heap.build(vs);
 }
 
@@ -913,7 +900,7 @@
                          adjust--;
                     }/*auto*/
                     if (adjust == 0)/*auto*/{
-                         K = (double)opt_K;
+                         break;
                     }/*auto*/
                     LBD_cut = (int32_t)opt_lbd_cut + adjust;
                 }
