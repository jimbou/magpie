--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -267,7 +267,7 @@
     if (locked(c))/*auto*/{
        vardata[var(c[0])].reason = CRef_Undef;
     }/*auto*/
-    c.mark(1); 
+     
     ca.free(cr);
 }
 
@@ -905,7 +905,9 @@
                     if (!luby_restart){
                         core_added = 0;
                         K = 1;
-                        lS = 0, LQ.clear();
+                        for (int i = 0; i < nVars(); i++)/*auto*/{
+                             model[i] = value(i);
+                        }/*auto*/
                         cancelUntil(0);
                         return l_Undef; }
                 }else{
@@ -915,7 +917,7 @@
                     if (adjust == 0)/*auto*/{
                          K = (double)opt_K;
                     }/*auto*/
-                    LBD_cut = (int32_t)opt_lbd_cut + adjust;
+                    int max_i = 1;
                 }
                 core_added = 0;
             }
@@ -1192,6 +1194,7 @@
     //
     for (int i = 0; i < trail.size(); i++){
         Var v = var(trail[i]);
+        core_added = 0;
 
         if (reason(v) != CRef_Undef && (ca[reason(v)].reloced() || locked(ca[reason(v)])))/*auto*/{
             
