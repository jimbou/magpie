2024-06-14 14:43:44,407	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 4026053233077293
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified
trust_local_filesystem = True

[magpie.log]
color_output = True
format_info = {counter:<7} {status:<20} {best}{fitness} ({ratio}) [{size}] {cached} {log}
format_debug = patch({counter})="{patch}"{diffifbest}
format_fitness = {:.6f}
format_ratio = {:.2%%}
format_patchif = 
	 --> {patch}
format_diffif = 
	{diff}

[software]
path = examples/sat4j
target_files = org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml
software = BasicSoftware
model_rules = 
	*.params : ParamFileConfigModel
	*.xml : SrcmlModel
	* : LineModel
model_config = 
	*.params : [paramconfig]
	*.xml : [srcml]
init_cmd = 
init_timeout = 60
init_lengthout = -1
setup_cmd = ant sat
setup_timeout = 
setup_lengthout = 
compile_cmd = ant sat
compile_timeout = 
compile_lengthout = 
test_cmd = bash test.sh
test_timeout = 
test_lengthout = 
run_cmd = ./run_custom.sh "bash run_fixed.sh"
run_timeout = 
run_lengthout = 
retries = 1
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = weights

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[paramconfig]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
cli_none = hide
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = FirstImprovement
possible_edits = 
	SrcmlStmtReplacement
	SrcmlStmtInsertion
	SrcmlStmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 1000
max_time = 120
target_fitness = 
cache_maxsize = 100
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2024-06-14 14:43:44,407	[DEBUG]	
2024-06-14 14:43:44,407	[INFO]	==== SEARCH: FirstImprovement ====
2024-06-14 14:43:44,407	[INFO]	~~~~ WARMUP ~~~~
2024-06-14 14:45:57,981	[DEBUG]	EXEC>  SUCCESS 8552909240.996
2024-06-14 14:45:57,982	[INFO]	WARM    SUCCESS               8552909240.996000 (--) [0 edit(s)]  
2024-06-14 14:48:02,891	[DEBUG]	EXEC>  SUCCESS 8080733505.221
2024-06-14 14:48:02,891	[INFO]	WARM    SUCCESS               8080733505.221000 (--) [0 edit(s)]  
2024-06-14 14:50:08,811	[DEBUG]	EXEC>  SUCCESS 8834727818.335
2024-06-14 14:50:08,811	[INFO]	WARM    SUCCESS               8834727818.334999 (--) [0 edit(s)]  
2024-06-14 14:50:08,811	[INFO]	REF     SUCCESS               8834727818.334999 (--) [0 edit(s)]  
2024-06-14 14:50:08,811	[INFO]	
2024-06-14 14:50:08,811	[INFO]	~~~~ START ~~~~
2024-06-14 14:50:11,961	[INFO]	1       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-14 14:50:11,961	[DEBUG]	patch(1)="SrcmlStmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 584), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 320))"
2024-06-14 14:50:14,924	[INFO]	2       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-14 14:50:14,924	[DEBUG]	patch(2)="SrcmlStmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 481), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 303))"
2024-06-14 14:50:17,973	[INFO]	3       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-14 14:50:17,973	[DEBUG]	patch(3)="SrcmlStmtReplacement(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 197), ('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 987))"
2024-06-14 14:52:27,869	[DEBUG]	EXEC>  SUCCESS 8766901081.372
2024-06-14 14:52:27,870	[INFO]	4       SUCCESS              *8766901081.372000 (99.23%) [1 edit(s)]  
2024-06-14 14:52:27,870	[DEBUG]	patch(4)="SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 576))"
--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -1472,29 +1472,7 @@
         this.model = new int[tempmodel.size()];
         tempmodel.copyTo(this.model);
         if (realNumberOfVariables() > nVars()) {
-            for (int i = nVars() + 1; i <= realNumberOfVariables(); i++) {
-                if (this.voc.belongsToPool(i)) {
-                    int p = this.voc.getFromPool(i);
-                    if (!this.voc.isUnassigned(p)) {
-                        tempmodel.push(this.voc.isSatisfied(p) ? i : -i);
-                        this.userbooleanmodel[i - 1] = this.voc.isSatisfied(p);
-                        if (this.voc.getReason(p) == null) {
-                            this.decisions.push(tempmodel.last());
-                        } else {
-                            this.implied.push(tempmodel.last());
-                            if (this.voc.getReason(p).learnt()) {
-                                this.assignmentOrigins[i
-                                        - 1] = AssignmentOrigin.PROPAGATED_LEARNED;
-                            } else {
-                                this.assignmentOrigins[i
-                                        - 1] = AssignmentOrigin.PROPAGATED_ORIGINAL;
-                            }
-                        }
-                    }
-                } else {
-                    this.assignmentOrigins[i - 1] = AssignmentOrigin.UNASSIGNED;
-                }
-            }
+            
             this.fullmodel = new int[tempmodel.size()];
             tempmodel.moveTo(this.fullmodel);
         } else {

2024-06-14 14:52:27,884	[INFO]	~~~~ END ~~~~
2024-06-14 14:52:27,885	[INFO]	
2024-06-14 14:52:27,885	[INFO]	==== REPORT ====
2024-06-14 14:52:27,885	[INFO]	Termination: time budget
2024-06-14 14:52:27,885	[INFO]	Retries: 1
2024-06-14 14:52:27,885	[INFO]	Log file: /home/jim/magpie/_magpie_logs/sat4j_1718372623.log
2024-06-14 14:52:27,885	[INFO]	Patch file: _magpie_logs/sat4j_1718372623.patch
2024-06-14 14:52:27,885	[INFO]	Diff file: _magpie_logs/sat4j_1718372623.diff
2024-06-14 14:52:27,886	[INFO]	Reference fitness: 8834727818.334999
2024-06-14 14:52:27,886	[INFO]	Best fitness: 8766901081.372000
2024-06-14 14:52:27,886	[INFO]	
2024-06-14 14:52:27,887	[INFO]	==== BEST PATCH ====
SrcmlStmtDeletion(('org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java.xml', 'stmt', 576))
2024-06-14 14:52:27,887	[INFO]	
2024-06-14 14:52:27,887	[INFO]	==== DIFF ====
[1m--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java[0m
[1m+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java[0m
[36m@@ -1472,29 +1472,7 @@[0m
         this.model = new int[tempmodel.size()];
         tempmodel.copyTo(this.model);
         if (realNumberOfVariables() > nVars()) {
[31m-            for (int i = nVars() + 1; i <= realNumberOfVariables(); i++) {[0m
[31m-                if (this.voc.belongsToPool(i)) {[0m
[31m-                    int p = this.voc.getFromPool(i);[0m
[31m-                    if (!this.voc.isUnassigned(p)) {[0m
[31m-                        tempmodel.push(this.voc.isSatisfied(p) ? i : -i);[0m
[31m-                        this.userbooleanmodel[i - 1] = this.voc.isSatisfied(p);[0m
[31m-                        if (this.voc.getReason(p) == null) {[0m
[31m-                            this.decisions.push(tempmodel.last());[0m
[31m-                        } else {[0m
[31m-                            this.implied.push(tempmodel.last());[0m
[31m-                            if (this.voc.getReason(p).learnt()) {[0m
[31m-                                this.assignmentOrigins[i[0m
[31m-                                        - 1] = AssignmentOrigin.PROPAGATED_LEARNED;[0m
[31m-                            } else {[0m
[31m-                                this.assignmentOrigins[i[0m
[31m-                                        - 1] = AssignmentOrigin.PROPAGATED_ORIGINAL;[0m
[31m-                            }[0m
[31m-                        }[0m
[31m-                    }[0m
[31m-                } else {[0m
[31m-                    this.assignmentOrigins[i - 1] = AssignmentOrigin.UNASSIGNED;[0m
[31m-                }[0m
[31m-            }[0m
[32m+            [0m
             this.fullmodel = new int[tempmodel.size()];
             tempmodel.moveTo(this.fullmodel);
         } else {

