2024-06-25 17:47:27,721	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 6119559263996997
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 100
default_lengthout = 1e6
diff_method = unified
trust_local_filesystem = True
run_timeout = 100

[magpie.log]
color_output = True
format_info = {counter:<7} {status:<20} {best}{fitness} ({ratio}) [{size}] {cached} {log}
format_debug = patch({counter})="{patch}"{diffifbest}
format_fitness = {:.6f}
format_ratio = {:.2%%}
format_patchif = 
	 --> {patch}
format_diffif = 
	{diff}

[software]
path = examples/minisat
target_files = 
	core/Solver.cc.xml
software = BasicSoftware
model_rules = 
	*.params : ParamFileConfigModel
	*.xml : SrcmlModel
	* : LineModel
model_config = 
	*.params : [paramconfig]
	*.xml : [srcml]
init_cmd = bash init.sh
init_timeout = 60
init_lengthout = -1
setup_cmd = bash compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = bash compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = bash test.sh
test_timeout = 
test_lengthout = 
run_cmd = perf stat  bash run_fixed.sh
run_timeout = 
run_lengthout = 
retries = 1
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = perf_time

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[paramconfig]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
cli_none = hide
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = FirstImprovement
possible_edits = 
	SrcmlStmtReplacement
	SrcmlStmtInsertion
	SrcmlStmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 10000
max_time = 60
target_fitness = 
cache_maxsize = 100
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2024-06-25 17:47:27,722	[DEBUG]	
2024-06-25 17:47:27,722	[INFO]	==== SEARCH: FirstImprovement ====
2024-06-25 17:47:27,722	[INFO]	~~~~ WARMUP ~~~~
2024-06-25 17:47:46,603	[DEBUG]	EXEC>  SUCCESS 13.99988111
2024-06-25 17:47:46,604	[INFO]	WARM    SUCCESS               13.999881 (--) [0 edit(s)]  
2024-06-25 17:48:00,804	[DEBUG]	EXEC>  SUCCESS 13.94088574
2024-06-25 17:48:00,804	[INFO]	WARM    SUCCESS               13.940886 (--) [0 edit(s)]  
2024-06-25 17:48:15,453	[DEBUG]	EXEC>  SUCCESS 14.38963573
2024-06-25 17:48:15,453	[INFO]	WARM    SUCCESS               14.389636 (--) [0 edit(s)]  
2024-06-25 17:48:15,453	[INFO]	REF     SUCCESS               14.389636 (--) [0 edit(s)]  
2024-06-25 17:48:15,453	[INFO]	
2024-06-25 17:48:15,453	[INFO]	~~~~ START ~~~~
2024-06-25 17:48:31,928	[DEBUG]	EXEC>  SUCCESS 14.35982227
2024-06-25 17:48:31,928	[INFO]	1       SUCCESS              *14.359822 (99.79%) [1 edit(s)]  
2024-06-25 17:48:31,928	[DEBUG]	patch(1)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 408))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -1014,7 +1014,7 @@
     if (verbosity > 0)
         /*auto*/{
         
-               printf("Wrote %d clauses with %d variables.\n", cnt, max);
+               
         
     }/*auto*/
 }

2024-06-25 17:48:33,925	[INFO]	2       TEST_CODE_ERROR       None (--) [2 edit(s)]  
2024-06-25 17:48:33,925	[DEBUG]	patch(2)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 408)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 111))"
2024-06-25 17:48:50,367	[DEBUG]	EXEC>  SUCCESS 14.42013702
2024-06-25 17:48:50,368	[INFO]	3       SUCCESS               14.420137 (100.21%) [2 edit(s)]  
2024-06-25 17:48:50,368	[DEBUG]	patch(3)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 408)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 383))"
2024-06-25 17:48:50,372	[INFO]	4       SUCCESS               14.389636 (100.00%) [0 edit(s)] [cached] 
2024-06-25 17:48:50,372	[DEBUG]	patch(4)=""
2024-06-25 17:49:06,072	[DEBUG]	EXEC>  SUCCESS 13.73343005
2024-06-25 17:49:06,072	[INFO]	5       SUCCESS              *13.733430 (95.44%) [2 edit(s)]  
2024-06-25 17:49:06,072	[DEBUG]	patch(5)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 408)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 271), ('core/Solver.cc.xml', 'stmt', 46))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -551,6 +551,7 @@
 
             // If 0th watch is true, then clause is already satisfied.
             Lit     first = c[0];
+            assert(c.size() > 1);
             Watcher w     = Watcher(cr, first);
             if (first != blocker && value(first) == l_True){
                 *j++ = w; continue; }
@@ -1014,7 +1015,7 @@
     if (verbosity > 0)
         /*auto*/{
         
-               printf("Wrote %d clauses with %d variables.\n", cnt, max);
+               
         
     }/*auto*/
 }

2024-06-25 17:49:06,530	[INFO]	6       COMPILE_CODE_ERROR    None (--) [3 edit(s)]  
2024-06-25 17:49:06,530	[DEBUG]	patch(6)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 408)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 271), ('core/Solver.cc.xml', 'stmt', 46)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 128), ('core/Solver.cc.xml', 'stmt', 181))"
2024-06-25 17:49:22,096	[DEBUG]	EXEC>  SUCCESS 13.60185051
2024-06-25 17:49:22,096	[INFO]	7       SUCCESS              *13.601851 (94.53%) [3 edit(s)]  
2024-06-25 17:49:22,096	[DEBUG]	patch(7)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 408)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 271), ('core/Solver.cc.xml', 'stmt', 46)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 311), ('core/Solver.cc.xml', 'stmt', 40))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -551,6 +551,7 @@
 
             // If 0th watch is true, then clause is already satisfied.
             Lit     first = c[0];
+            assert(c.size() > 1);
             Watcher w     = Watcher(cr, first);
             if (first != blocker && value(first) == l_True){
                 *j++ = w; continue; }
@@ -624,6 +625,7 @@
             }/*auto*/
     }
     learnts.shrink(i - j);
+    return ok = (propagate() == CRef_Undef);
     checkGarbage();
 }
 
@@ -1014,7 +1016,7 @@
     if (verbosity > 0)
         /*auto*/{
         
-               printf("Wrote %d clauses with %d variables.\n", cnt, max);
+               
         
     }/*auto*/
 }

2024-06-25 17:49:22,105	[INFO]	~~~~ END ~~~~
2024-06-25 17:49:22,105	[INFO]	
2024-06-25 17:49:22,105	[INFO]	==== REPORT ====
2024-06-25 17:49:22,105	[INFO]	Termination: time budget
2024-06-25 17:49:22,105	[INFO]	Retries: 1
2024-06-25 17:49:22,105	[INFO]	Log file: /home/dbouras/magpie/_magpie_logs/minisat_1719334047.log
2024-06-25 17:49:22,105	[INFO]	Patch file: _magpie_logs/minisat_1719334047.patch
2024-06-25 17:49:22,105	[INFO]	Diff file: _magpie_logs/minisat_1719334047.diff
2024-06-25 17:49:22,106	[INFO]	Reference fitness: 14.389636
2024-06-25 17:49:22,106	[INFO]	Best fitness: 13.601851
2024-06-25 17:49:22,106	[INFO]	
2024-06-25 17:49:22,106	[INFO]	==== BEST PATCH ====
SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 408)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 271), ('core/Solver.cc.xml', 'stmt', 46)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 311), ('core/Solver.cc.xml', 'stmt', 40))
2024-06-25 17:49:22,107	[INFO]	
2024-06-25 17:49:22,107	[INFO]	==== DIFF ====
[1m--- before: core/Solver.cc[0m
[1m+++ after: core/Solver.cc[0m
[36m@@ -551,6 +551,7 @@[0m
 
             // If 0th watch is true, then clause is already satisfied.
             Lit     first = c[0];
[32m+            assert(c.size() > 1);[0m
             Watcher w     = Watcher(cr, first);
             if (first != blocker && value(first) == l_True){
                 *j++ = w; continue; }
[36m@@ -624,6 +625,7 @@[0m
             }/*auto*/
     }
     learnts.shrink(i - j);
[32m+    return ok = (propagate() == CRef_Undef);[0m
     checkGarbage();
 }
 
[36m@@ -1014,7 +1016,7 @@[0m
     if (verbosity > 0)
         /*auto*/{
         
[31m-               printf("Wrote %d clauses with %d variables.\n", cnt, max);[0m
[32m+               [0m
         
     }/*auto*/
 }

