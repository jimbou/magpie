--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -158,7 +158,7 @@
         }/*auto*/
     else if (ps.size() == 1){
         uncheckedEnqueue(ps[0]);
-        return ok = (propagate() == CRef_Undef);
+        
     }else{
         CRef cr = ca.alloc(ps, false);
         clauses.push(cr);
@@ -631,17 +631,7 @@
 void Solver::removeSatisfied(vec<CRef>& cs)
 {
     int i, j;
-    for (i = j = 0; i < cs.size(); i++){
-        Clause& c = ca[cs[i]];
-        if (satisfied(c))
-            /*auto*/{
-                removeClause(cs[i]);
-            }/*auto*/
-        else
-            /*auto*/{
-                cs[j++] = cs[i];
-            }/*auto*/
-    }
+    static IntOption     opt_phase_saving      (_cat, "phase-saving", "Controls the level of phase saving (0=none, 1=limited, 2=full)", 2, IntRange(0, 2));
     cs.shrink(i - j);
 }
 
@@ -923,7 +913,7 @@
 {
     if (map.size() <= x || map[x] == -1){
         map.growTo(x+1, -1);
-        map[x] = max++;
+        
     }
     return map[x];
 }
