2024-06-13 04:22:21,367	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 1920638980455705
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 100
default_lengthout = 1e6
diff_method = unified
trust_local_filesystem = True
run_timeout = 100

[magpie.log]
color_output = True
format_info = {counter:<7} {status:<20} {best}{fitness} ({ratio}) [{size}] {cached} {log}
format_debug = patch({counter})="{patch}"{diffifbest}
format_fitness = {:.6f}
format_ratio = {:.2%%}
format_patchif = 
	 --> {patch}
format_diffif = 
	{diff}

[software]
path = examples/minisat
target_files = 
	core/Solver.cc.xml
software = BasicSoftware
model_rules = 
	*.params : ParamFileConfigModel
	*.xml : SrcmlModel
	* : LineModel
model_config = 
	*.params : [paramconfig]
	*.xml : [srcml]
init_cmd = bash init.sh
init_timeout = 60
init_lengthout = -1
setup_cmd = bash compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = bash compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = bash test.sh
test_timeout = 
test_lengthout = 
run_cmd = perf stat  bash run_fixed.sh
run_timeout = 
run_lengthout = 
retries = 5
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = perf_time

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[paramconfig]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
cli_none = hide
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = FirstImprovement
possible_edits = 
	SrcmlStmtReplacement
	SrcmlStmtInsertion
	SrcmlStmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 10000
max_time = 700
target_fitness = 
cache_maxsize = 100
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2024-06-13 04:22:21,367	[DEBUG]	
2024-06-13 04:22:21,367	[INFO]	==== SEARCH: FirstImprovement ====
2024-06-13 04:22:21,368	[INFO]	~~~~ WARMUP ~~~~
2024-06-13 04:23:22,826	[DEBUG]	EXEC>  SUCCESS 11.562815464
2024-06-13 04:23:22,826	[INFO]	WARM    SUCCESS               11.562815 (--) [0 edit(s)]  
2024-06-13 04:24:21,034	[DEBUG]	EXEC>  SUCCESS 11.574834864
2024-06-13 04:24:21,034	[INFO]	WARM    SUCCESS               11.574835 (--) [0 edit(s)]  
2024-06-13 04:25:19,294	[DEBUG]	EXEC>  SUCCESS 11.586474184
2024-06-13 04:25:19,295	[INFO]	WARM    SUCCESS               11.586474 (--) [0 edit(s)]  
2024-06-13 04:25:19,295	[INFO]	REF     SUCCESS               11.586474 (--) [0 edit(s)]  
2024-06-13 04:25:19,295	[INFO]	
2024-06-13 04:25:19,295	[INFO]	~~~~ START ~~~~
2024-06-13 04:25:46,278	[DEBUG]	EXEC>  LENGTHOUT None
2024-06-13 04:25:46,279	[INFO]	1       RUN_LENGTHOUT         None (--) [1 edit(s)]  
2024-06-13 04:25:46,279	[DEBUG]	patch(1)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 330), ('core/Solver.cc.xml', 'stmt', 352))"
2024-06-13 04:26:45,856	[DEBUG]	EXEC>  SUCCESS 11.59707514
2024-06-13 04:26:45,856	[INFO]	2       SUCCESS               11.597075 (100.09%) [1 edit(s)]  
2024-06-13 04:26:45,856	[DEBUG]	patch(2)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 178))"
2024-06-13 04:26:47,287	[INFO]	3       TEST_CODE_ERROR       None (--) [1 edit(s)]  
2024-06-13 04:26:47,288	[DEBUG]	patch(3)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 89))"
2024-06-13 04:26:47,488	[INFO]	4       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-13 04:26:47,488	[DEBUG]	patch(4)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 303), ('core/Solver.cc.xml', 'stmt', 57))"
2024-06-13 04:26:48,874	[INFO]	5       TEST_CODE_ERROR       None (--) [1 edit(s)]  
2024-06-13 04:26:48,874	[DEBUG]	patch(5)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 111))"
2024-06-13 04:26:49,115	[INFO]	6       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-13 04:26:49,115	[DEBUG]	patch(6)="SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 19), ('core/Solver.cc.xml', 'stmt', 98))"
2024-06-13 04:27:44,614	[DEBUG]	EXEC>  SUCCESS 10.770073980000001
2024-06-13 04:27:44,614	[INFO]	7       SUCCESS              *10.770074 (92.95%) [1 edit(s)]  
2024-06-13 04:27:44,614	[DEBUG]	patch(7)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -768,10 +768,7 @@
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
-            if (decisionLevel() == 0 && !simplify())
-                /*auto*/{
-                    return l_False;
-                }/*auto*/
+            
 
             if (learnts.size()-nAssigns() >= max_learnts)
                 // Reduce the set of learnt clauses:

2024-06-13 04:27:44,620	[INFO]	8       SUCCESS               11.586474 (100.00%) [0 edit(s)] [cached] 
2024-06-13 04:27:44,620	[DEBUG]	patch(8)=""
2024-06-13 04:27:44,870	[INFO]	9       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 04:27:44,870	[DEBUG]	patch(9)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 342), ('core/Solver.cc.xml', 'stmt', 232))"
2024-06-13 04:27:46,223	[INFO]	10      TEST_CODE_ERROR       None (--) [2 edit(s)]  
2024-06-13 04:27:46,223	[DEBUG]	patch(10)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 201))"
2024-06-13 04:27:46,462	[INFO]	11      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 04:27:46,462	[DEBUG]	patch(11)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 275), ('core/Solver.cc.xml', 'stmt', 185))"
2024-06-13 04:27:46,688	[INFO]	12      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 04:27:46,688	[DEBUG]	patch(12)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 234), ('core/Solver.cc.xml', 'stmt', 224))"
2024-06-13 04:27:46,917	[INFO]	13      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 04:27:46,917	[DEBUG]	patch(13)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 400), ('core/Solver.cc.xml', 'stmt', 103))"
2024-06-13 04:27:47,177	[INFO]	14      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-13 04:27:47,177	[DEBUG]	patch(14)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 411), ('core/Solver.cc.xml', 'stmt', 35))"
2024-06-13 04:27:48,568	[INFO]	15      TEST_CODE_ERROR       None (--) [2 edit(s)]  
2024-06-13 04:27:48,568	[DEBUG]	patch(15)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 72))"
2024-06-13 04:27:49,901	[INFO]	16      TEST_CODE_ERROR       None (--) [2 edit(s)]  
2024-06-13 04:27:49,901	[DEBUG]	patch(16)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 224), ('core/Solver.cc.xml', 'stmt', 134))"
2024-06-13 04:28:45,191	[DEBUG]	EXEC>  SUCCESS 10.7409882
2024-06-13 04:28:45,191	[INFO]	17      SUCCESS              *10.740988 (92.70%) [2 edit(s)]  
2024-06-13 04:28:45,192	[DEBUG]	patch(17)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -387,6 +387,7 @@
     }else
         /*auto*/{
             i = j = out_learnt.size();
+            return l_False;
         }/*auto*/
 
     max_literals += out_learnt.size();
@@ -768,10 +769,7 @@
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
-            if (decisionLevel() == 0 && !simplify())
-                /*auto*/{
-                    return l_False;
-                }/*auto*/
+            
 
             if (learnts.size()-nAssigns() >= max_learnts)
                 // Reduce the set of learnt clauses:

2024-06-13 04:29:40,464	[DEBUG]	EXEC>  SUCCESS 10.744467636
2024-06-13 04:29:40,464	[INFO]	18      SUCCESS               10.744468 (92.73%) [3 edit(s)]  
2024-06-13 04:29:40,464	[DEBUG]	patch(18)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 135))"
2024-06-13 04:30:39,853	[DEBUG]	EXEC>  SUCCESS 11.545494186
2024-06-13 04:30:39,854	[INFO]	19      SUCCESS               11.545494 (99.65%) [1 edit(s)]  
2024-06-13 04:30:39,854	[DEBUG]	patch(19)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281))"
2024-06-13 04:30:40,109	[INFO]	20      COMPILE_CODE_ERROR    None (--) [3 edit(s)]  
2024-06-13 04:30:40,109	[DEBUG]	patch(20)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 437), ('core/Solver.cc.xml', 'stmt', 283))"
2024-06-13 04:30:40,116	[INFO]	21      SUCCESS               10.770074 (92.95%) [1 edit(s)] [cached] 
2024-06-13 04:30:40,116	[DEBUG]	patch(21)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304))"
2024-06-13 04:31:35,328	[DEBUG]	EXEC>  SUCCESS 10.715823288
2024-06-13 04:31:35,328	[INFO]	22      SUCCESS              *10.715823 (92.49%) [3 edit(s)]  
2024-06-13 04:31:35,328	[DEBUG]	patch(22)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -175,7 +175,7 @@
     watches[~c[0]].push(Watcher(cr, c[1]));
     watches[~c[1]].push(Watcher(cr, c[0]));
     if (c.learnt()) /*auto*/{
-      learnts_literals += c.size();
+      const Clause& c = ca[cr];
     }/*auto*/
     else            /*auto*/{
       clauses_literals += c.size();
@@ -387,6 +387,7 @@
     }else
         /*auto*/{
             i = j = out_learnt.size();
+            return l_False;
         }/*auto*/
 
     max_literals += out_learnt.size();
@@ -768,10 +769,7 @@
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
-            if (decisionLevel() == 0 && !simplify())
-                /*auto*/{
-                    return l_False;
-                }/*auto*/
+            
 
             if (learnts.size()-nAssigns() >= max_learnts)
                 // Reduce the set of learnt clauses:

2024-06-13 04:31:35,339	[INFO]	23      SUCCESS               10.740988 (92.70%) [2 edit(s)] [cached] 
2024-06-13 04:31:35,339	[DEBUG]	patch(23)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281))"
2024-06-13 04:32:30,646	[DEBUG]	EXEC>  SUCCESS 10.749218848
2024-06-13 04:32:30,646	[INFO]	24      SUCCESS               10.749219 (92.77%) [2 edit(s)]  
2024-06-13 04:32:30,646	[DEBUG]	patch(24)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52))"
2024-06-13 04:33:29,907	[DEBUG]	EXEC>  SUCCESS 11.524839570000001
2024-06-13 04:33:29,907	[INFO]	25      SUCCESS               11.524840 (99.47%) [2 edit(s)]  
2024-06-13 04:33:29,907	[DEBUG]	patch(25)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52))"
2024-06-13 04:34:25,125	[DEBUG]	EXEC>  SUCCESS 10.727046612
2024-06-13 04:34:25,126	[INFO]	26      SUCCESS               10.727047 (92.58%) [4 edit(s)]  
2024-06-13 04:34:25,126	[DEBUG]	patch(26)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 257), ('core/Solver.cc.xml', 'stmt', 6))"
2024-06-13 04:34:26,419	[INFO]	27      TEST_CODE_ERROR       None (--) [4 edit(s)]  
2024-06-13 04:34:26,419	[DEBUG]	patch(27)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 122))"
2024-06-13 04:35:12,991	[DEBUG]	EXEC>  SUCCESS 8.985517712
2024-06-13 04:35:12,991	[INFO]	28      SUCCESS              *8.985518 (77.55%) [4 edit(s)]  
2024-06-13 04:35:12,991	[DEBUG]	patch(28)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 57), ('core/Solver.cc.xml', 'stmt', 295))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -175,7 +175,7 @@
     watches[~c[0]].push(Watcher(cr, c[1]));
     watches[~c[1]].push(Watcher(cr, c[0]));
     if (c.learnt()) /*auto*/{
-      learnts_literals += c.size();
+      const Clause& c = ca[cr];
     }/*auto*/
     else            /*auto*/{
       clauses_literals += c.size();
@@ -191,7 +191,7 @@
         remove(watches[~c[1]], Watcher(cr, c[0]));
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
-        watches.smudge(~c[0]);
+        learntsize_adjust_confl *= learntsize_adjust_inc;
         watches.smudge(~c[1]);
     }
 
@@ -387,6 +387,7 @@
     }else
         /*auto*/{
             i = j = out_learnt.size();
+            return l_False;
         }/*auto*/
 
     max_literals += out_learnt.size();
@@ -768,10 +769,7 @@
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
-            if (decisionLevel() == 0 && !simplify())
-                /*auto*/{
-                    return l_False;
-                }/*auto*/
+            
 
             if (learnts.size()-nAssigns() >= max_learnts)
                 // Reduce the set of learnt clauses:

2024-06-13 04:35:59,692	[DEBUG]	EXEC>  SUCCESS 9.007573070000001
2024-06-13 04:35:59,693	[INFO]	29      SUCCESS               9.007573 (77.74%) [3 edit(s)]  
2024-06-13 04:35:59,693	[DEBUG]	patch(29)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 57), ('core/Solver.cc.xml', 'stmt', 295))"
2024-06-13 04:36:00,969	[INFO]	30      TEST_CODE_ERROR       None (--) [5 edit(s)]  
2024-06-13 04:36:00,970	[DEBUG]	patch(30)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 57), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 160))"
2024-06-13 04:36:01,211	[INFO]	31      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-13 04:36:01,211	[DEBUG]	patch(31)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 57), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 313))"
2024-06-13 04:36:01,466	[INFO]	32      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-13 04:36:01,466	[DEBUG]	patch(32)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 57), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 431), ('core/Solver.cc.xml', 'stmt', 203))"
2024-06-13 04:36:01,480	[INFO]	33      SUCCESS               10.715823 (92.49%) [3 edit(s)] [cached] 
2024-06-13 04:36:01,481	[DEBUG]	patch(33)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52))"
2024-06-13 04:36:48,066	[DEBUG]	EXEC>  SUCCESS 8.988653006
2024-06-13 04:36:48,066	[INFO]	34      SUCCESS               8.988653 (77.58%) [3 edit(s)]  
2024-06-13 04:36:48,066	[DEBUG]	patch(34)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 57), ('core/Solver.cc.xml', 'stmt', 295))"
2024-06-13 04:36:49,505	[INFO]	35      TEST_CODE_ERROR       None (--) [5 edit(s)]  
2024-06-13 04:36:49,505	[DEBUG]	patch(35)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 57), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 321), ('core/Solver.cc.xml', 'stmt', 365))"
2024-06-13 04:36:49,766	[INFO]	36      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-13 04:36:49,766	[DEBUG]	patch(36)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 57), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 269), ('core/Solver.cc.xml', 'stmt', 134))"
2024-06-13 04:36:51,176	[INFO]	37      TEST_CODE_ERROR       None (--) [5 edit(s)]  
2024-06-13 04:36:51,176	[DEBUG]	patch(37)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 57), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 106), ('core/Solver.cc.xml', 'stmt', 258))"
2024-06-13 04:36:51,411	[INFO]	38      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-13 04:36:51,411	[DEBUG]	patch(38)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 57), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 25), ('core/Solver.cc.xml', 'stmt', 170))"
2024-06-13 04:37:37,660	[DEBUG]	EXEC>  SUCCESS 8.920707422000001
2024-06-13 04:37:37,661	[INFO]	39      SUCCESS              *8.920707 (76.99%) [5 edit(s)]  
2024-06-13 04:37:37,661	[DEBUG]	patch(39)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 57), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 288), ('core/Solver.cc.xml', 'stmt', 62))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -175,7 +175,7 @@
     watches[~c[0]].push(Watcher(cr, c[1]));
     watches[~c[1]].push(Watcher(cr, c[0]));
     if (c.learnt()) /*auto*/{
-      learnts_literals += c.size();
+      const Clause& c = ca[cr];
     }/*auto*/
     else            /*auto*/{
       clauses_literals += c.size();
@@ -191,7 +191,7 @@
         remove(watches[~c[1]], Watcher(cr, c[0]));
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
-        watches.smudge(~c[0]);
+        learntsize_adjust_confl *= learntsize_adjust_inc;
         watches.smudge(~c[1]);
     }
 
@@ -387,6 +387,7 @@
     }else
         /*auto*/{
             i = j = out_learnt.size();
+            return l_False;
         }/*auto*/
 
     max_literals += out_learnt.size();
@@ -559,7 +560,8 @@
             for (int k = 2; k < c.size(); k++)
                 /*auto*/{
                     if (value(c[k]) != l_False){
-                    c[1] = c[k]; c[k] = false_lit;
+                    c[1] = c[k];
+                    Clause& c = ca[cr]; c[k] = false_lit;
                     watches[~c[1]].push(w);
                     goto NextClause; }
                 }/*auto*/
@@ -768,10 +770,7 @@
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
-            if (decisionLevel() == 0 && !simplify())
-                /*auto*/{
-                    return l_False;
-                }/*auto*/
+            
 
             if (learnts.size()-nAssigns() >= max_learnts)
                 // Reduce the set of learnt clauses:

2024-06-13 04:37:37,680	[INFO]	~~~~ END ~~~~
2024-06-13 04:37:37,680	[INFO]	
2024-06-13 04:37:37,680	[INFO]	==== REPORT ====
2024-06-13 04:37:37,680	[INFO]	Termination: time budget
2024-06-13 04:37:37,680	[INFO]	Retries: 5
2024-06-13 04:37:37,680	[INFO]	Log file: /home/jim/magpie/_magpie_logs/minisat_1718248941.log
2024-06-13 04:37:37,680	[INFO]	Patch file: _magpie_logs/minisat_1718248941.patch
2024-06-13 04:37:37,681	[INFO]	Diff file: _magpie_logs/minisat_1718248941.diff
2024-06-13 04:37:37,681	[INFO]	Reference fitness: 11.586474
2024-06-13 04:37:37,681	[INFO]	Best fitness: 8.920707
2024-06-13 04:37:37,681	[INFO]	
2024-06-13 04:37:37,682	[INFO]	==== BEST PATCH ====
SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 304)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 175), ('core/Solver.cc.xml', 'stmt', 281)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 50), ('core/Solver.cc.xml', 'stmt', 52)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 57), ('core/Solver.cc.xml', 'stmt', 295)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 288), ('core/Solver.cc.xml', 'stmt', 62))
2024-06-13 04:37:37,682	[INFO]	
2024-06-13 04:37:37,682	[INFO]	==== DIFF ====
[1m--- before: core/Solver.cc[0m
[1m+++ after: core/Solver.cc[0m
[36m@@ -175,7 +175,7 @@[0m
     watches[~c[0]].push(Watcher(cr, c[1]));
     watches[~c[1]].push(Watcher(cr, c[0]));
     if (c.learnt()) /*auto*/{
[31m-      learnts_literals += c.size();[0m
[32m+      const Clause& c = ca[cr];[0m
     }/*auto*/
     else            /*auto*/{
       clauses_literals += c.size();
[36m@@ -191,7 +191,7 @@[0m
         remove(watches[~c[1]], Watcher(cr, c[0]));
     }else{
         // Lazy detaching: (NOTE! Must clean all watcher lists before garbage collecting this clause)
[31m-        watches.smudge(~c[0]);[0m
[32m+        learntsize_adjust_confl *= learntsize_adjust_inc;[0m
         watches.smudge(~c[1]);
     }
 
[36m@@ -387,6 +387,7 @@[0m
     }else
         /*auto*/{
             i = j = out_learnt.size();
[32m+            return l_False;[0m
         }/*auto*/
 
     max_literals += out_learnt.size();
[36m@@ -559,7 +560,8 @@[0m
             for (int k = 2; k < c.size(); k++)
                 /*auto*/{
                     if (value(c[k]) != l_False){
[31m-                    c[1] = c[k]; c[k] = false_lit;[0m
[32m+                    c[1] = c[k];[0m
[32m+                    Clause& c = ca[cr]; c[k] = false_lit;[0m
                     watches[~c[1]].push(w);
                     goto NextClause; }
                 }/*auto*/
[36m@@ -768,10 +770,7 @@[0m
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
[31m-            if (decisionLevel() == 0 && !simplify())[0m
[31m-                /*auto*/{[0m
[31m-                    return l_False;[0m
[31m-                }/*auto*/[0m
[32m+            [0m
 
             if (learnts.size()-nAssigns() >= max_learnts)
                 // Reduce the set of learnt clauses:

