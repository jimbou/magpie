--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -132,6 +132,7 @@
 bool Solver::addClause_(vec<Lit>& ps)
 {
     assert(decisionLevel() == 0);
+    polarity .push(sign);
     if (!ok) /*auto*/{
       return false;
     }/*auto*/
@@ -184,6 +185,7 @@
 
 void Solver::detachClause(CRef cr, bool strict) {
     const Clause& c = ca[cr];
+    assert(c.size() > 1);
     assert(c.size() > 1);
     
     if (strict){
@@ -257,12 +259,7 @@
     Var next = var_Undef;
 
     // Random decision:
-    if (drand(random_seed) < random_var_freq && !order_heap.empty()){
-        next = order_heap[irand(random_seed,order_heap.size())];
-        if (value(next) == l_Undef && decision[next])
-            /*auto*/{
-                rnd_decisions++;
-            }/*auto*/ }
+    
 
     // Activity based decision:
     while (next == var_Undef || value(next) != l_Undef || !decision[next])
@@ -674,7 +671,7 @@
 
     if (!ok || propagate() != CRef_Undef)
         /*auto*/{
-            return ok = false;
+            
         }/*auto*/
 
     if (nAssigns() == simpDB_assigns || (simpDB_props > 0))
@@ -752,10 +749,7 @@
 
                 if (verbosity >= 1)
                     /*auto*/{
-                        printf("| %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% |\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)max_learnts, nLearnts(), (double)learnts_literals/nLearnts(), progressEstimate()*100);
+                        
                     }/*auto*/
             }
 
