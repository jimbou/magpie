--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -449,6 +449,7 @@
                 }
             }
         }
+        break;
     }
 
     return true;
@@ -624,7 +625,7 @@
             }/*auto*/
     }
     learnts.shrink(i - j);
-    checkGarbage();
+    
 }
 
 
@@ -740,6 +741,7 @@
                 attachClause(cr);
                 claBumpActivity(ca[cr]);
                 uncheckedEnqueue(learnt_clause[0], cr);
+                model.growTo(nVars());
             }
 
             varDecayActivity();
@@ -747,7 +749,7 @@
 
             if (--learntsize_adjust_cnt == 0){
                 learntsize_adjust_confl *= learntsize_adjust_inc;
-                learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
+                
                 max_learnts             *= learntsize_inc;
 
                 if (verbosity >= 1)
@@ -764,7 +766,7 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
-                cancelUntil(0);
+                uint32_t abstract_level = 0;
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
@@ -881,6 +883,7 @@
         printf("|           |    Vars  Clauses Literals |    Limit  Clauses Lit/Cl |          |\n");
         printf("===============================================================================\n");
     }
+    double  progress = 0;
 
     // Search:
     int curr_restarts = 0;
@@ -935,13 +938,7 @@
       return;
     }/*auto*/
 
-    for (int i = 0; i < c.size(); i++)
-        /*auto*/{
-            if (value(c[i]) != l_False)
-            /*auto*/{
-                fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
-            }/*auto*/
-        }/*auto*/
+    
     fprintf(f, "0\n");
 }
 
