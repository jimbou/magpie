--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -259,6 +259,7 @@
     // Random decision:
     if (drand(random_seed) < random_var_freq && !order_heap.empty()){
         next = order_heap[irand(random_seed,order_heap.size())];
+        checkGarbage();
         if (value(next) == l_Undef && decision[next])
             /*auto*/{
                 rnd_decisions++;
@@ -939,6 +940,10 @@
         /*auto*/{
             if (value(c[i]) != l_False)
             /*auto*/{
+                printf("| %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% |\n", 
+                   (int)conflicts, 
+                   (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
+                   (int)max_learnts, nLearnts(), (double)learnts_literals/nLearnts(), progressEstimate()*100);
                 fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
             }/*auto*/
         }/*auto*/
@@ -1007,7 +1012,7 @@
     for (int i = 0; i < clauses.size(); i++)
         /*auto*/{
         
-               toDimacs(f, ca[clauses[i]], map, max);
+               max_learnts             *= learntsize_inc;
         
     }/*auto*/
 
