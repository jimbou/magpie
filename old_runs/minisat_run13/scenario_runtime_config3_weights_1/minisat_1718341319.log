2024-06-14 06:01:59,843	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 2082658695963192
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 100
default_lengthout = 1e6
diff_method = unified
trust_local_filesystem = True
run_timeout = 100

[magpie.log]
color_output = True
format_info = {counter:<7} {status:<20} {best}{fitness} ({ratio}) [{size}] {cached} {log}
format_debug = patch({counter})="{patch}"{diffifbest}
format_fitness = {:.6f}
format_ratio = {:.2%%}
format_patchif = 
	 --> {patch}
format_diffif = 
	{diff}

[software]
path = examples/minisat
target_files = 
	core/Solver.cc.xml
software = BasicSoftware
model_rules = 
	*.params : ParamFileConfigModel
	*.xml : SrcmlModel
	* : LineModel
model_config = 
	*.params : [paramconfig]
	*.xml : [srcml]
init_cmd = bash init.sh
init_timeout = 60
init_lengthout = -1
setup_cmd = bash compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = bash compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = bash test.sh
test_timeout = 
test_lengthout = 
run_cmd = ./run_custom.sh "bash run_fixed.sh"
run_timeout = 
run_lengthout = 
retries = 1
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = weights

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[paramconfig]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
cli_none = hide
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = FirstImprovement
possible_edits = 
	SrcmlStmtReplacement
	SrcmlStmtInsertion
	SrcmlStmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 10000
max_time = 700
target_fitness = 
cache_maxsize = 100
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2024-06-14 06:01:59,843	[DEBUG]	
2024-06-14 06:01:59,843	[INFO]	==== SEARCH: FirstImprovement ====
2024-06-14 06:01:59,843	[INFO]	~~~~ WARMUP ~~~~
2024-06-14 06:02:19,885	[DEBUG]	EXEC>  SUCCESS 27710096349.619
2024-06-14 06:02:19,886	[INFO]	WARM    SUCCESS               27710096349.618999 (--) [0 edit(s)]  
2024-06-14 06:02:37,205	[DEBUG]	EXEC>  SUCCESS 27768639591.567
2024-06-14 06:02:37,205	[INFO]	WARM    SUCCESS               27768639591.567001 (--) [0 edit(s)]  
2024-06-14 06:02:54,102	[DEBUG]	EXEC>  SUCCESS 27820667160.526
2024-06-14 06:02:54,102	[INFO]	WARM    SUCCESS               27820667160.526001 (--) [0 edit(s)]  
2024-06-14 06:02:54,103	[INFO]	REF     SUCCESS               27820667160.526001 (--) [0 edit(s)]  
2024-06-14 06:02:54,103	[INFO]	
2024-06-14 06:02:54,103	[INFO]	~~~~ START ~~~~
2024-06-14 06:02:55,487	[INFO]	1       TEST_CODE_ERROR       None (--) [1 edit(s)]  
2024-06-14 06:02:55,487	[DEBUG]	patch(1)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 34))"
2024-06-14 06:02:55,749	[INFO]	2       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-14 06:02:55,749	[DEBUG]	patch(2)="SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 181), ('core/Solver.cc.xml', 'stmt', 416))"
2024-06-14 06:02:57,106	[INFO]	3       TEST_CODE_ERROR       None (--) [1 edit(s)]  
2024-06-14 06:02:57,106	[DEBUG]	patch(3)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 113))"
2024-06-14 06:02:57,336	[INFO]	4       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-14 06:02:57,337	[DEBUG]	patch(4)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 116))"
2024-06-14 06:02:57,533	[INFO]	5       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-14 06:02:57,533	[DEBUG]	patch(5)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 125))"
2024-06-14 06:02:57,751	[INFO]	6       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-14 06:02:57,751	[DEBUG]	patch(6)="SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 365), ('core/Solver.cc.xml', 'stmt', 279))"
2024-06-14 06:02:58,011	[INFO]	7       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-14 06:02:58,011	[DEBUG]	patch(7)="SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 416), ('core/Solver.cc.xml', 'stmt', 118))"
2024-06-14 06:02:58,243	[INFO]	8       COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-14 06:02:58,243	[DEBUG]	patch(8)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 309), ('core/Solver.cc.xml', 'stmt', 197))"
2024-06-14 06:03:25,132	[DEBUG]	EXEC>  SUCCESS 64027688124.194
2024-06-14 06:03:25,132	[INFO]	9       SUCCESS               64027688124.194000 (230.14%) [1 edit(s)]  
2024-06-14 06:03:25,132	[DEBUG]	patch(9)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 383), ('core/Solver.cc.xml', 'stmt', 345))"
2024-06-14 06:03:25,349	[INFO]	10      COMPILE_CODE_ERROR    None (--) [1 edit(s)]  
2024-06-14 06:03:25,350	[DEBUG]	patch(10)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 319), ('core/Solver.cc.xml', 'stmt', 230))"
2024-06-14 06:03:44,165	[DEBUG]	EXEC>  SUCCESS 27730199791.22
2024-06-14 06:03:44,165	[INFO]	11      SUCCESS              *27730199791.220001 (99.67%) [1 edit(s)]  
2024-06-14 06:03:44,165	[DEBUG]	patch(11)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -686,7 +686,7 @@
     removeSatisfied(learnts);
     if (remove_satisfied)        // Can be turned off.
         /*auto*/{
-            removeSatisfied(clauses);
+            
         }/*auto*/
     checkGarbage();
     rebuildOrderHeap();

2024-06-14 06:04:02,205	[DEBUG]	EXEC>  SUCCESS 27843252641.032
2024-06-14 06:04:02,205	[INFO]	12      SUCCESS               27843252641.032001 (100.08%) [2 edit(s)]  
2024-06-14 06:04:02,205	[DEBUG]	patch(12)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 65))"
2024-06-14 06:04:02,418	[INFO]	13      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-14 06:04:02,418	[DEBUG]	patch(13)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 286), ('core/Solver.cc.xml', 'stmt', 285))"
2024-06-14 06:04:03,839	[INFO]	14      TEST_CODE_ERROR       None (--) [2 edit(s)]  
2024-06-14 06:04:03,840	[DEBUG]	patch(14)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 152))"
2024-06-14 06:04:05,237	[INFO]	15      TEST_CODE_ERROR       None (--) [2 edit(s)]  
2024-06-14 06:04:05,237	[DEBUG]	patch(15)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 220))"
2024-06-14 06:04:05,240	[INFO]	16      SUCCESS               27820667160.526001 (100.00%) [0 edit(s)] [cached] 
2024-06-14 06:04:05,240	[DEBUG]	patch(16)=""
2024-06-14 06:04:06,594	[INFO]	17      TEST_CODE_ERROR       None (--) [2 edit(s)]  
2024-06-14 06:04:06,594	[DEBUG]	patch(17)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 217))"
2024-06-14 06:04:25,839	[DEBUG]	EXEC>  SUCCESS 27766854474.666
2024-06-14 06:04:25,840	[INFO]	18      SUCCESS               27766854474.666000 (99.81%) [2 edit(s)]  
2024-06-14 06:04:25,840	[DEBUG]	patch(18)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 406))"
2024-06-14 06:04:26,082	[INFO]	19      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-14 06:04:26,082	[DEBUG]	patch(19)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 240), ('core/Solver.cc.xml', 'stmt', 81))"
2024-06-14 06:04:44,750	[DEBUG]	EXEC>  SUCCESS 27709977299.125
2024-06-14 06:04:44,750	[INFO]	20      SUCCESS              *27709977299.125000 (99.60%) [2 edit(s)]  
2024-06-14 06:04:44,750	[DEBUG]	patch(20)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -382,6 +382,7 @@
                         out_learnt[j++] = out_learnt[i];
                         break; }
                     }/*auto*/
+                learnts.shrink(i - j);
             }
         }
     }else
@@ -686,7 +687,7 @@
     removeSatisfied(learnts);
     if (remove_satisfied)        // Can be turned off.
         /*auto*/{
-            removeSatisfied(clauses);
+            
         }/*auto*/
     checkGarbage();
     rebuildOrderHeap();

2024-06-14 06:04:44,758	[INFO]	21      SUCCESS               27730199791.220001 (99.67%) [1 edit(s)] [cached] 
2024-06-14 06:04:44,758	[DEBUG]	patch(21)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264))"
2024-06-14 06:05:03,264	[DEBUG]	EXEC>  SUCCESS 27864315266.265
2024-06-14 06:05:03,264	[INFO]	22      SUCCESS               27864315266.264999 (100.16%) [1 edit(s)]  
2024-06-14 06:05:03,264	[DEBUG]	patch(22)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243))"
2024-06-14 06:05:21,503	[DEBUG]	EXEC>  SUCCESS 28034198770.313
2024-06-14 06:05:21,503	[INFO]	23      SUCCESS               28034198770.313000 (100.77%) [3 edit(s)]  
2024-06-14 06:05:21,503	[DEBUG]	patch(23)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 85))"
2024-06-14 06:05:22,875	[INFO]	24      TEST_CODE_ERROR       None (--) [3 edit(s)]  
2024-06-14 06:05:22,875	[DEBUG]	patch(24)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 17))"
2024-06-14 06:05:23,112	[INFO]	25      COMPILE_CODE_ERROR    None (--) [3 edit(s)]  
2024-06-14 06:05:23,112	[DEBUG]	patch(25)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 32), ('core/Solver.cc.xml', 'stmt', 51))"
2024-06-14 06:05:23,341	[INFO]	26      COMPILE_CODE_ERROR    None (--) [3 edit(s)]  
2024-06-14 06:05:23,341	[DEBUG]	patch(26)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 54), ('core/Solver.cc.xml', 'stmt', 101))"
2024-06-14 06:05:24,734	[INFO]	27      TEST_CODE_ERROR       None (--) [3 edit(s)]  
2024-06-14 06:05:24,734	[DEBUG]	patch(27)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 307), ('core/Solver.cc.xml', 'stmt', 98))"
2024-06-14 06:05:43,513	[DEBUG]	EXEC>  SUCCESS 27920479059.912
2024-06-14 06:05:43,513	[INFO]	28      SUCCESS               27920479059.911999 (100.36%) [3 edit(s)]  
2024-06-14 06:05:43,513	[DEBUG]	patch(28)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 360))"
2024-06-14 06:05:43,773	[INFO]	29      COMPILE_CODE_ERROR    None (--) [3 edit(s)]  
2024-06-14 06:05:43,773	[DEBUG]	patch(29)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 351), ('core/Solver.cc.xml', 'stmt', 166))"
2024-06-14 06:06:00,547	[DEBUG]	EXEC>  SUCCESS 23883483353.394
2024-06-14 06:06:00,547	[INFO]	30      SUCCESS              *23883483353.394001 (85.85%) [3 edit(s)]  
2024-06-14 06:06:00,547	[DEBUG]	patch(30)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -382,6 +382,7 @@
                         out_learnt[j++] = out_learnt[i];
                         break; }
                     }/*auto*/
+                learnts.shrink(i - j);
             }
         }
     }else
@@ -686,7 +687,7 @@
     removeSatisfied(learnts);
     if (remove_satisfied)        // Can be turned off.
         /*auto*/{
-            removeSatisfied(clauses);
+            
         }/*auto*/
     checkGarbage();
     rebuildOrderHeap();
@@ -738,7 +739,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 

2024-06-14 06:06:16,558	[DEBUG]	EXEC>  SUCCESS 23920925647.49
2024-06-14 06:06:16,558	[INFO]	31      SUCCESS               23920925647.490002 (85.98%) [2 edit(s)]  
2024-06-14 06:06:16,558	[DEBUG]	patch(31)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290))"
2024-06-14 06:06:16,793	[INFO]	32      COMPILE_CODE_ERROR    None (--) [4 edit(s)]  
2024-06-14 06:06:16,793	[DEBUG]	patch(32)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 106), ('core/Solver.cc.xml', 'stmt', 128))"
2024-06-14 06:06:17,017	[INFO]	33      COMPILE_CODE_ERROR    None (--) [4 edit(s)]  
2024-06-14 06:06:17,017	[DEBUG]	patch(33)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 498), ('core/Solver.cc.xml', 'stmt', 212))"
2024-06-14 06:06:17,254	[INFO]	34      COMPILE_CODE_ERROR    None (--) [4 edit(s)]  
2024-06-14 06:06:17,254	[DEBUG]	patch(34)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 529), ('core/Solver.cc.xml', 'stmt', 246))"
2024-06-14 06:06:18,626	[INFO]	35      TEST_CODE_ERROR       None (--) [4 edit(s)]  
2024-06-14 06:06:18,626	[DEBUG]	patch(35)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 78))"
2024-06-14 06:06:18,631	[INFO]	36      SUCCESS               27709977299.125000 (99.60%) [2 edit(s)] [cached] 
2024-06-14 06:06:18,631	[DEBUG]	patch(36)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 264)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243))"
2024-06-14 06:06:35,186	[DEBUG]	EXEC>  SUCCESS 23762886171.55
2024-06-14 06:06:35,186	[INFO]	37      SUCCESS              *23762886171.549999 (85.41%) [2 edit(s)]  
2024-06-14 06:06:35,186	[DEBUG]	patch(37)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -382,6 +382,7 @@
                         out_learnt[j++] = out_learnt[i];
                         break; }
                     }/*auto*/
+                learnts.shrink(i - j);
             }
         }
     }else
@@ -738,7 +739,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 

2024-06-14 06:06:35,191	[INFO]	38      SUCCESS               27864315266.264999 (100.16%) [1 edit(s)] [cached] 
2024-06-14 06:06:35,191	[DEBUG]	patch(38)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243))"
2024-06-14 06:06:35,441	[INFO]	39      COMPILE_CODE_ERROR    None (--) [3 edit(s)]  
2024-06-14 06:06:35,442	[DEBUG]	patch(39)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 168), ('core/Solver.cc.xml', 'stmt', 243)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 73), ('core/Solver.cc.xml', 'stmt', 376))"
2024-06-14 06:06:51,921	[DEBUG]	EXEC>  SUCCESS 23583715054.85
2024-06-14 06:06:51,921	[INFO]	40      SUCCESS              *23583715054.849998 (84.77%) [1 edit(s)]  
2024-06-14 06:06:51,922	[DEBUG]	patch(40)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -738,7 +738,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 

2024-06-14 06:06:51,927	[INFO]	41      SUCCESS               27820667160.526001 (100.00%) [0 edit(s)] [cached] 
2024-06-14 06:06:51,927	[DEBUG]	patch(41)=""
2024-06-14 06:06:52,176	[INFO]	42      COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-14 06:06:52,176	[DEBUG]	patch(42)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 423), ('core/Solver.cc.xml', 'stmt', 227))"
2024-06-14 06:07:08,996	[DEBUG]	EXEC>  SUCCESS 24429574529.445
2024-06-14 06:07:08,996	[INFO]	43      SUCCESS               24429574529.445000 (87.81%) [2 edit(s)]  
2024-06-14 06:07:08,996	[DEBUG]	patch(43)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 167), ('core/Solver.cc.xml', 'stmt', 168))"
2024-06-14 06:07:25,901	[DEBUG]	EXEC>  SUCCESS 23533498373.343
2024-06-14 06:07:25,902	[INFO]	44      SUCCESS              *23533498373.342999 (84.59%) [2 edit(s)]  
2024-06-14 06:07:25,902	[DEBUG]	patch(44)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -738,7 +738,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -974,7 +974,7 @@
         /*auto*/{
             if (!satisfied(ca[clauses[i]]))
             /*auto*/{
-                cnt++;
+                
             }/*auto*/
         }/*auto*/
         

2024-06-14 06:07:25,928	[INFO]	45      SUCCESS               23583715054.849998 (84.77%) [1 edit(s)] [cached] 
2024-06-14 06:07:25,928	[DEBUG]	patch(45)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290))"
2024-06-14 06:07:26,182	[INFO]	46      COMPILE_CODE_ERROR    None (--) [3 edit(s)]  
2024-06-14 06:07:26,182	[DEBUG]	patch(46)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 340), ('core/Solver.cc.xml', 'stmt', 118))"
2024-06-14 06:07:26,409	[INFO]	47      COMPILE_CODE_ERROR    None (--) [3 edit(s)]  
2024-06-14 06:07:26,410	[DEBUG]	patch(47)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 331), ('core/Solver.cc.xml', 'stmt', 258))"
2024-06-14 06:07:42,944	[DEBUG]	EXEC>  SUCCESS 23432917562.331
2024-06-14 06:07:42,945	[INFO]	48      SUCCESS              *23432917562.331001 (84.23%) [3 edit(s)]  
2024-06-14 06:07:42,945	[DEBUG]	patch(48)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -738,7 +738,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -764,6 +764,99 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
+                for (;;){
+                    CRef confl = propagate();
+                    if (confl != CRef_Undef){
+                        // CONFLICT
+                        conflicts++; conflictC++;
+                        if (decisionLevel() == 0) /*auto*/{
+                            return l_False;
+                        }/*auto*/
+
+                        learnt_clause.clear();
+                        analyze(confl, learnt_clause, backtrack_level);
+                        cancelUntil(backtrack_level);
+
+                        if (learnt_clause.size() == 1){
+                            uncheckedEnqueue(learnt_clause[0]);
+                        }else{
+                            CRef cr = ca.alloc(learnt_clause, true);
+                            learnts.push(cr);
+                            attachClause(cr);
+                            claBumpActivity(ca[cr]);
+                            uncheckedEnqueue(learnt_clause[0], cr);
+                        }
+
+                        varDecayActivity();
+                        claDecayActivity();
+
+                        if (--learntsize_adjust_cnt == 0){
+                            learntsize_adjust_confl *= learntsize_adjust_inc;
+                            learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
+                            max_learnts             *= learntsize_inc;
+
+                            if (verbosity >= 1)
+                                /*auto*/{
+                                    printf("| %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% |\n", 
+                                       (int)conflicts, 
+                                       (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
+                                       (int)max_learnts, nLearnts(), (double)learnts_literals/nLearnts(), progressEstimate()*100);
+                                }/*auto*/
+                        }
+
+                    }else{
+                        // NO CONFLICT
+                        if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
+                            // Reached bound on number of conflicts:
+                            progress_estimate = progressEstimate();
+                            cancelUntil(0);
+                            return l_Undef; }
+
+                        // Simplify the set of problem clauses:
+                        if (decisionLevel() == 0 && !simplify())
+                            /*auto*/{
+                                return l_False;
+                            }/*auto*/
+
+                        if (learnts.size()-nAssigns() >= max_learnts)
+                            // Reduce the set of learnt clauses:
+                            /*auto*/{
+                                reduceDB();
+                            }/*auto*/
+
+                        Lit next = lit_Undef;
+                        while (decisionLevel() < assumptions.size()){
+                            // Perform user provided assumption:
+                            Lit p = assumptions[decisionLevel()];
+                            if (value(p) == l_True){
+                                // Dummy decision level:
+                                newDecisionLevel();
+                            }else if (value(p) == l_False){
+                                analyzeFinal(~p, conflict);
+                                return l_False;
+                            }else{
+                                next = p;
+                                break;
+                            }
+                        }
+
+                        if (next == lit_Undef){
+                            // New variable decision:
+                            decisions++;
+                            next = pickBranchLit();
+
+                            if (next == lit_Undef)
+                                // Model found:
+                                /*auto*/{
+                                    return l_True;
+                                }/*auto*/
+                        }
+
+                        // Increase decision level and enqueue 'next'
+                        newDecisionLevel();
+                        uncheckedEnqueue(next);
+                    }
+                }
                 cancelUntil(0);
                 return l_Undef; }
 
@@ -974,7 +1067,7 @@
         /*auto*/{
             if (!satisfied(ca[clauses[i]]))
             /*auto*/{
-                cnt++;
+                
             }/*auto*/
         }/*auto*/
         

2024-06-14 06:08:24,997	[DEBUG]	EXEC>  CODE_ERROR None
2024-06-14 06:08:24,998	[INFO]	49      RUN_CODE_ERROR        None (--) [4 edit(s)]  
2024-06-14 06:08:24,998	[DEBUG]	patch(49)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 158), ('core/Solver.cc.xml', 'stmt', 351))"
2024-06-14 06:08:25,002	[INFO]	50      SUCCESS               23533498373.342999 (84.59%) [2 edit(s)] [cached] 
2024-06-14 06:08:25,002	[DEBUG]	patch(50)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393))"
2024-06-14 06:08:25,234	[INFO]	51      COMPILE_CODE_ERROR    None (--) [4 edit(s)]  
2024-06-14 06:08:25,234	[DEBUG]	patch(51)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 201), ('core/Solver.cc.xml', 'stmt', 84))"
2024-06-14 06:08:41,476	[DEBUG]	EXEC>  SUCCESS 24426425569.52
2024-06-14 06:08:41,476	[INFO]	52      SUCCESS               24426425569.520000 (87.80%) [4 edit(s)]  
2024-06-14 06:08:41,477	[DEBUG]	patch(52)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 65))"
2024-06-14 06:08:59,804	[DEBUG]	EXEC>  SUCCESS 27421280400.65
2024-06-14 06:08:59,804	[INFO]	53      SUCCESS               27421280400.650002 (98.56%) [2 edit(s)]  
2024-06-14 06:08:59,804	[DEBUG]	patch(53)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275))"
2024-06-14 06:09:00,072	[INFO]	54      COMPILE_CODE_ERROR    None (--) [4 edit(s)]  
2024-06-14 06:09:00,072	[DEBUG]	patch(54)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 116))"
2024-06-14 06:09:00,335	[INFO]	55      COMPILE_CODE_ERROR    None (--) [4 edit(s)]  
2024-06-14 06:09:00,335	[DEBUG]	patch(55)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 69), ('core/Solver.cc.xml', 'stmt', 369))"
2024-06-14 06:09:01,929	[INFO]	56      TEST_CODE_ERROR       None (--) [4 edit(s)]  
2024-06-14 06:09:01,929	[DEBUG]	patch(56)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 321))"
2024-06-14 06:09:03,543	[INFO]	57      TEST_CODE_ERROR       None (--) [4 edit(s)]  
2024-06-14 06:09:03,543	[DEBUG]	patch(57)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 23))"
2024-06-14 06:09:04,993	[INFO]	58      TEST_CODE_ERROR       None (--) [4 edit(s)]  
2024-06-14 06:09:04,994	[DEBUG]	patch(58)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 255))"
2024-06-14 06:09:05,248	[INFO]	59      COMPILE_CODE_ERROR    None (--) [4 edit(s)]  
2024-06-14 06:09:05,248	[DEBUG]	patch(59)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 10))"
2024-06-14 06:09:22,072	[DEBUG]	EXEC>  SUCCESS 23700541613.055
2024-06-14 06:09:22,073	[INFO]	60      SUCCESS               23700541613.055000 (85.19%) [2 edit(s)]  
2024-06-14 06:09:22,073	[DEBUG]	patch(60)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275))"
2024-06-14 06:09:22,339	[INFO]	61      COMPILE_CODE_ERROR    None (--) [4 edit(s)]  
2024-06-14 06:09:22,339	[DEBUG]	patch(61)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 36), ('core/Solver.cc.xml', 'stmt', 316))"
2024-06-14 06:09:38,778	[DEBUG]	EXEC>  SUCCESS 23823510337.387
2024-06-14 06:09:38,778	[INFO]	62      SUCCESS               23823510337.387001 (85.63%) [4 edit(s)]  
2024-06-14 06:09:38,778	[DEBUG]	patch(62)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 258), ('core/Solver.cc.xml', 'stmt', 20))"
2024-06-14 06:09:55,478	[DEBUG]	EXEC>  SUCCESS 23801108291.291
2024-06-14 06:09:55,478	[INFO]	63      SUCCESS               23801108291.291000 (85.55%) [4 edit(s)]  
2024-06-14 06:09:55,478	[DEBUG]	patch(63)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 35), ('core/Solver.cc.xml', 'stmt', 188))"
2024-06-14 06:09:55,715	[INFO]	64      COMPILE_CODE_ERROR    None (--) [4 edit(s)]  
2024-06-14 06:09:55,715	[DEBUG]	patch(64)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 55), ('core/Solver.cc.xml', 'stmt', 105))"
2024-06-14 06:10:12,425	[DEBUG]	EXEC>  SUCCESS 23848392103.31
2024-06-14 06:10:12,425	[INFO]	65      SUCCESS               23848392103.310001 (85.72%) [4 edit(s)]  
2024-06-14 06:10:12,425	[DEBUG]	patch(65)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 238), ('core/Solver.cc.xml', 'stmt', 175))"
2024-06-14 06:10:12,689	[INFO]	66      COMPILE_CODE_ERROR    None (--) [4 edit(s)]  
2024-06-14 06:10:12,689	[DEBUG]	patch(66)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 290), ('core/Solver.cc.xml', 'stmt', 81))"
2024-06-14 06:10:12,933	[INFO]	67      COMPILE_CODE_ERROR    None (--) [4 edit(s)]  
2024-06-14 06:10:12,933	[DEBUG]	patch(67)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 216), ('core/Solver.cc.xml', 'stmt', 247))"
2024-06-14 06:10:28,026	[DEBUG]	EXEC>  SUCCESS 20339619988.719
2024-06-14 06:10:28,027	[INFO]	68      SUCCESS              *20339619988.719002 (73.11%) [4 edit(s)]  
2024-06-14 06:10:28,027	[DEBUG]	patch(68)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -390,7 +390,7 @@
         }/*auto*/
 
     max_literals += out_learnt.size();
-    out_learnt.shrink(i - j);
+    
     tot_literals += out_learnt.size();
 
     // Find correct backtrack level:
@@ -738,7 +738,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -764,6 +764,99 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
+                for (;;){
+                    CRef confl = propagate();
+                    if (confl != CRef_Undef){
+                        // CONFLICT
+                        conflicts++; conflictC++;
+                        if (decisionLevel() == 0) /*auto*/{
+                            return l_False;
+                        }/*auto*/
+
+                        learnt_clause.clear();
+                        analyze(confl, learnt_clause, backtrack_level);
+                        cancelUntil(backtrack_level);
+
+                        if (learnt_clause.size() == 1){
+                            uncheckedEnqueue(learnt_clause[0]);
+                        }else{
+                            CRef cr = ca.alloc(learnt_clause, true);
+                            learnts.push(cr);
+                            attachClause(cr);
+                            claBumpActivity(ca[cr]);
+                            uncheckedEnqueue(learnt_clause[0], cr);
+                        }
+
+                        varDecayActivity();
+                        claDecayActivity();
+
+                        if (--learntsize_adjust_cnt == 0){
+                            learntsize_adjust_confl *= learntsize_adjust_inc;
+                            learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
+                            max_learnts             *= learntsize_inc;
+
+                            if (verbosity >= 1)
+                                /*auto*/{
+                                    printf("| %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% |\n", 
+                                       (int)conflicts, 
+                                       (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
+                                       (int)max_learnts, nLearnts(), (double)learnts_literals/nLearnts(), progressEstimate()*100);
+                                }/*auto*/
+                        }
+
+                    }else{
+                        // NO CONFLICT
+                        if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
+                            // Reached bound on number of conflicts:
+                            progress_estimate = progressEstimate();
+                            cancelUntil(0);
+                            return l_Undef; }
+
+                        // Simplify the set of problem clauses:
+                        if (decisionLevel() == 0 && !simplify())
+                            /*auto*/{
+                                return l_False;
+                            }/*auto*/
+
+                        if (learnts.size()-nAssigns() >= max_learnts)
+                            // Reduce the set of learnt clauses:
+                            /*auto*/{
+                                reduceDB();
+                            }/*auto*/
+
+                        Lit next = lit_Undef;
+                        while (decisionLevel() < assumptions.size()){
+                            // Perform user provided assumption:
+                            Lit p = assumptions[decisionLevel()];
+                            if (value(p) == l_True){
+                                // Dummy decision level:
+                                newDecisionLevel();
+                            }else if (value(p) == l_False){
+                                analyzeFinal(~p, conflict);
+                                return l_False;
+                            }else{
+                                next = p;
+                                break;
+                            }
+                        }
+
+                        if (next == lit_Undef){
+                            // New variable decision:
+                            decisions++;
+                            next = pickBranchLit();
+
+                            if (next == lit_Undef)
+                                // Model found:
+                                /*auto*/{
+                                    return l_True;
+                                }/*auto*/
+                        }
+
+                        // Increase decision level and enqueue 'next'
+                        newDecisionLevel();
+                        uncheckedEnqueue(next);
+                    }
+                }
                 cancelUntil(0);
                 return l_Undef; }
 
@@ -974,7 +1067,7 @@
         /*auto*/{
             if (!satisfied(ca[clauses[i]]))
             /*auto*/{
-                cnt++;
+                
             }/*auto*/
         }/*auto*/
         

2024-06-14 06:10:28,302	[INFO]	69      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-14 06:10:28,303	[DEBUG]	patch(69)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 266), ('core/Solver.cc.xml', 'stmt', 68))"
2024-06-14 06:10:28,554	[INFO]	70      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-14 06:10:28,555	[DEBUG]	patch(70)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 153), ('core/Solver.cc.xml', 'stmt', 32))"
2024-06-14 06:10:30,149	[INFO]	71      TEST_CODE_ERROR       None (--) [5 edit(s)]  
2024-06-14 06:10:30,149	[DEBUG]	patch(71)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 71))"
2024-06-14 06:10:45,541	[DEBUG]	EXEC>  SUCCESS 20266301641.51
2024-06-14 06:10:45,541	[INFO]	72      SUCCESS              *20266301641.509998 (72.85%) [5 edit(s)]  
2024-06-14 06:10:45,541	[DEBUG]	patch(72)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -390,7 +390,7 @@
         }/*auto*/
 
     max_literals += out_learnt.size();
-    out_learnt.shrink(i - j);
+    
     tot_literals += out_learnt.size();
 
     // Find correct backtrack level:
@@ -472,6 +472,7 @@
     if (decisionLevel() == 0)
         /*auto*/{
             return;
+            return l_False;
         }/*auto*/
 
     seen[var(p)] = 1;
@@ -738,7 +739,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -764,6 +765,99 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
+                for (;;){
+                    CRef confl = propagate();
+                    if (confl != CRef_Undef){
+                        // CONFLICT
+                        conflicts++; conflictC++;
+                        if (decisionLevel() == 0) /*auto*/{
+                            return l_False;
+                        }/*auto*/
+
+                        learnt_clause.clear();
+                        analyze(confl, learnt_clause, backtrack_level);
+                        cancelUntil(backtrack_level);
+
+                        if (learnt_clause.size() == 1){
+                            uncheckedEnqueue(learnt_clause[0]);
+                        }else{
+                            CRef cr = ca.alloc(learnt_clause, true);
+                            learnts.push(cr);
+                            attachClause(cr);
+                            claBumpActivity(ca[cr]);
+                            uncheckedEnqueue(learnt_clause[0], cr);
+                        }
+
+                        varDecayActivity();
+                        claDecayActivity();
+
+                        if (--learntsize_adjust_cnt == 0){
+                            learntsize_adjust_confl *= learntsize_adjust_inc;
+                            learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
+                            max_learnts             *= learntsize_inc;
+
+                            if (verbosity >= 1)
+                                /*auto*/{
+                                    printf("| %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% |\n", 
+                                       (int)conflicts, 
+                                       (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
+                                       (int)max_learnts, nLearnts(), (double)learnts_literals/nLearnts(), progressEstimate()*100);
+                                }/*auto*/
+                        }
+
+                    }else{
+                        // NO CONFLICT
+                        if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
+                            // Reached bound on number of conflicts:
+                            progress_estimate = progressEstimate();
+                            cancelUntil(0);
+                            return l_Undef; }
+
+                        // Simplify the set of problem clauses:
+                        if (decisionLevel() == 0 && !simplify())
+                            /*auto*/{
+                                return l_False;
+                            }/*auto*/
+
+                        if (learnts.size()-nAssigns() >= max_learnts)
+                            // Reduce the set of learnt clauses:
+                            /*auto*/{
+                                reduceDB();
+                            }/*auto*/
+
+                        Lit next = lit_Undef;
+                        while (decisionLevel() < assumptions.size()){
+                            // Perform user provided assumption:
+                            Lit p = assumptions[decisionLevel()];
+                            if (value(p) == l_True){
+                                // Dummy decision level:
+                                newDecisionLevel();
+                            }else if (value(p) == l_False){
+                                analyzeFinal(~p, conflict);
+                                return l_False;
+                            }else{
+                                next = p;
+                                break;
+                            }
+                        }
+
+                        if (next == lit_Undef){
+                            // New variable decision:
+                            decisions++;
+                            next = pickBranchLit();
+
+                            if (next == lit_Undef)
+                                // Model found:
+                                /*auto*/{
+                                    return l_True;
+                                }/*auto*/
+                        }
+
+                        // Increase decision level and enqueue 'next'
+                        newDecisionLevel();
+                        uncheckedEnqueue(next);
+                    }
+                }
                 cancelUntil(0);
                 return l_Undef; }
 
@@ -974,7 +1068,7 @@
         /*auto*/{
             if (!satisfied(ca[clauses[i]]))
             /*auto*/{
-                cnt++;
+                
             }/*auto*/
         }/*auto*/
         

2024-06-14 06:11:02,928	[DEBUG]	EXEC>  SUCCESS 25852217261.159
2024-06-14 06:11:02,928	[INFO]	73      SUCCESS               25852217261.159000 (92.92%) [4 edit(s)]  
2024-06-14 06:11:02,928	[DEBUG]	patch(73)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315))"
2024-06-14 06:11:17,888	[DEBUG]	EXEC>  SUCCESS 20325504113.076
2024-06-14 06:11:17,889	[INFO]	74      SUCCESS               20325504113.076000 (73.06%) [4 edit(s)]  
2024-06-14 06:11:17,889	[DEBUG]	patch(74)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315))"
2024-06-14 06:11:18,102	[INFO]	75      COMPILE_CODE_ERROR    None (--) [6 edit(s)]  
2024-06-14 06:11:18,103	[DEBUG]	patch(75)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 393)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 101), ('core/Solver.cc.xml', 'stmt', 400))"
2024-06-14 06:11:33,348	[DEBUG]	EXEC>  SUCCESS 20225710792.661
2024-06-14 06:11:33,349	[INFO]	76      SUCCESS              *20225710792.660999 (72.70%) [4 edit(s)]  
2024-06-14 06:11:33,349	[DEBUG]	patch(76)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -390,7 +390,7 @@
         }/*auto*/
 
     max_literals += out_learnt.size();
-    out_learnt.shrink(i - j);
+    
     tot_literals += out_learnt.size();
 
     // Find correct backtrack level:
@@ -472,6 +472,7 @@
     if (decisionLevel() == 0)
         /*auto*/{
             return;
+            return l_False;
         }/*auto*/
 
     seen[var(p)] = 1;
@@ -738,7 +739,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -764,6 +765,99 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
+                for (;;){
+                    CRef confl = propagate();
+                    if (confl != CRef_Undef){
+                        // CONFLICT
+                        conflicts++; conflictC++;
+                        if (decisionLevel() == 0) /*auto*/{
+                            return l_False;
+                        }/*auto*/
+
+                        learnt_clause.clear();
+                        analyze(confl, learnt_clause, backtrack_level);
+                        cancelUntil(backtrack_level);
+
+                        if (learnt_clause.size() == 1){
+                            uncheckedEnqueue(learnt_clause[0]);
+                        }else{
+                            CRef cr = ca.alloc(learnt_clause, true);
+                            learnts.push(cr);
+                            attachClause(cr);
+                            claBumpActivity(ca[cr]);
+                            uncheckedEnqueue(learnt_clause[0], cr);
+                        }
+
+                        varDecayActivity();
+                        claDecayActivity();
+
+                        if (--learntsize_adjust_cnt == 0){
+                            learntsize_adjust_confl *= learntsize_adjust_inc;
+                            learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
+                            max_learnts             *= learntsize_inc;
+
+                            if (verbosity >= 1)
+                                /*auto*/{
+                                    printf("| %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% |\n", 
+                                       (int)conflicts, 
+                                       (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
+                                       (int)max_learnts, nLearnts(), (double)learnts_literals/nLearnts(), progressEstimate()*100);
+                                }/*auto*/
+                        }
+
+                    }else{
+                        // NO CONFLICT
+                        if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
+                            // Reached bound on number of conflicts:
+                            progress_estimate = progressEstimate();
+                            cancelUntil(0);
+                            return l_Undef; }
+
+                        // Simplify the set of problem clauses:
+                        if (decisionLevel() == 0 && !simplify())
+                            /*auto*/{
+                                return l_False;
+                            }/*auto*/
+
+                        if (learnts.size()-nAssigns() >= max_learnts)
+                            // Reduce the set of learnt clauses:
+                            /*auto*/{
+                                reduceDB();
+                            }/*auto*/
+
+                        Lit next = lit_Undef;
+                        while (decisionLevel() < assumptions.size()){
+                            // Perform user provided assumption:
+                            Lit p = assumptions[decisionLevel()];
+                            if (value(p) == l_True){
+                                // Dummy decision level:
+                                newDecisionLevel();
+                            }else if (value(p) == l_False){
+                                analyzeFinal(~p, conflict);
+                                return l_False;
+                            }else{
+                                next = p;
+                                break;
+                            }
+                        }
+
+                        if (next == lit_Undef){
+                            // New variable decision:
+                            decisions++;
+                            next = pickBranchLit();
+
+                            if (next == lit_Undef)
+                                // Model found:
+                                /*auto*/{
+                                    return l_True;
+                                }/*auto*/
+                        }
+
+                        // Increase decision level and enqueue 'next'
+                        newDecisionLevel();
+                        uncheckedEnqueue(next);
+                    }
+                }
                 cancelUntil(0);
                 return l_Undef; }
 

2024-06-14 06:11:48,647	[DEBUG]	EXEC>  SUCCESS 20350445702.714
2024-06-14 06:11:48,647	[INFO]	77      SUCCESS               20350445702.714001 (73.15%) [3 edit(s)]  
2024-06-14 06:11:48,647	[DEBUG]	patch(77)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315))"
2024-06-14 06:12:05,394	[DEBUG]	EXEC>  SUCCESS 23937015306.234
2024-06-14 06:12:05,395	[INFO]	78      SUCCESS               23937015306.234001 (86.04%) [3 edit(s)]  
2024-06-14 06:12:05,395	[DEBUG]	patch(78)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315))"
2024-06-14 06:12:05,654	[INFO]	79      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-14 06:12:05,654	[DEBUG]	patch(79)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 467), ('core/Solver.cc.xml', 'stmt', 13))"
2024-06-14 06:12:05,870	[INFO]	80      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-14 06:12:05,870	[DEBUG]	patch(80)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 494), ('core/Solver.cc.xml', 'stmt', 34))"
2024-06-14 06:12:07,378	[INFO]	81      TEST_CODE_ERROR       None (--) [5 edit(s)]  
2024-06-14 06:12:07,378	[DEBUG]	patch(81)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 410))"
2024-06-14 06:12:23,192	[DEBUG]	EXEC>  SUCCESS 20245595812.498
2024-06-14 06:12:23,193	[INFO]	82      SUCCESS               20245595812.498001 (72.77%) [5 edit(s)]  
2024-06-14 06:12:23,193	[DEBUG]	patch(82)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 268))"
2024-06-14 06:12:23,426	[INFO]	83      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-14 06:12:23,426	[DEBUG]	patch(83)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 145), ('core/Solver.cc.xml', 'stmt', 31))"
2024-06-14 06:12:23,669	[INFO]	84      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-14 06:12:23,669	[DEBUG]	patch(84)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 93), ('core/Solver.cc.xml', 'stmt', 424))"
2024-06-14 06:12:23,916	[INFO]	85      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-14 06:12:23,916	[DEBUG]	patch(85)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 86), ('core/Solver.cc.xml', 'stmt', 357))"
2024-06-14 06:12:42,042	[DEBUG]	EXEC>  SUCCESS 26048612447.02
2024-06-14 06:12:42,042	[INFO]	86      SUCCESS               26048612447.020000 (93.63%) [3 edit(s)]  
2024-06-14 06:12:42,042	[DEBUG]	patch(86)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315))"
2024-06-14 06:12:42,277	[INFO]	87      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-14 06:12:42,277	[DEBUG]	patch(87)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 271))"
2024-06-14 06:12:57,415	[DEBUG]	EXEC>  SUCCESS 20505465760.008
2024-06-14 06:12:57,415	[INFO]	88      SUCCESS               20505465760.007999 (73.71%) [5 edit(s)]  
2024-06-14 06:12:57,415	[DEBUG]	patch(88)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 554), ('core/Solver.cc.xml', 'stmt', 149))"
2024-06-14 06:12:58,993	[INFO]	89      TEST_CODE_ERROR       None (--) [5 edit(s)]  
2024-06-14 06:12:58,993	[DEBUG]	patch(89)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 21))"
2024-06-14 06:13:14,661	[DEBUG]	EXEC>  SUCCESS 20431247502.244
2024-06-14 06:13:14,661	[INFO]	90      SUCCESS               20431247502.243999 (73.44%) [5 edit(s)]  
2024-06-14 06:13:14,661	[DEBUG]	patch(90)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 291), ('core/Solver.cc.xml', 'stmt', 239))"
2024-06-14 06:13:29,757	[DEBUG]	EXEC>  SUCCESS 20315286247.163
2024-06-14 06:13:29,757	[INFO]	91      SUCCESS               20315286247.162998 (73.02%) [3 edit(s)]  
2024-06-14 06:13:29,757	[DEBUG]	patch(91)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137))"
2024-06-14 06:13:31,302	[INFO]	92      TEST_CODE_ERROR       None (--) [5 edit(s)]  
2024-06-14 06:13:31,302	[DEBUG]	patch(92)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 95))"
2024-06-14 06:13:31,531	[INFO]	93      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-14 06:13:31,531	[DEBUG]	patch(93)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 502), ('core/Solver.cc.xml', 'stmt', 205))"
2024-06-14 06:13:31,755	[INFO]	94      COMPILE_CODE_ERROR    None (--) [5 edit(s)]  
2024-06-14 06:13:31,755	[DEBUG]	patch(94)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 250), ('core/Solver.cc.xml', 'stmt', 78))"
2024-06-14 06:13:47,959	[DEBUG]	EXEC>  SUCCESS 19840843760.725
2024-06-14 06:13:47,959	[INFO]	95      SUCCESS              *19840843760.724998 (71.32%) [5 edit(s)]  
2024-06-14 06:13:47,959	[DEBUG]	patch(95)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 290), ('core/Solver.cc.xml', 'stmt', 11))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -390,7 +390,7 @@
         }/*auto*/
 
     max_literals += out_learnt.size();
-    out_learnt.shrink(i - j);
+    
     tot_literals += out_learnt.size();
 
     // Find correct backtrack level:
@@ -472,6 +472,7 @@
     if (decisionLevel() == 0)
         /*auto*/{
             return;
+            return l_False;
         }/*auto*/
 
     seen[var(p)] = 1;
@@ -561,6 +562,7 @@
                     if (value(c[k]) != l_False){
                     c[1] = c[k]; c[k] = false_lit;
                     watches[~c[1]].push(w);
+                    static DoubleOption  opt_garbage_frac      (_cat, "gc-frac",     "The fraction of wasted memory allowed before a garbage collection is triggered",  0.20, DoubleRange(0, false, HUGE_VAL, false));
                     goto NextClause; }
                 }/*auto*/
 
@@ -738,7 +740,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -764,6 +766,99 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
+                for (;;){
+                    CRef confl = propagate();
+                    if (confl != CRef_Undef){
+                        // CONFLICT
+                        conflicts++; conflictC++;
+                        if (decisionLevel() == 0) /*auto*/{
+                            return l_False;
+                        }/*auto*/
+
+                        learnt_clause.clear();
+                        analyze(confl, learnt_clause, backtrack_level);
+                        cancelUntil(backtrack_level);
+
+                        if (learnt_clause.size() == 1){
+                            uncheckedEnqueue(learnt_clause[0]);
+                        }else{
+                            CRef cr = ca.alloc(learnt_clause, true);
+                            learnts.push(cr);
+                            attachClause(cr);
+                            claBumpActivity(ca[cr]);
+                            uncheckedEnqueue(learnt_clause[0], cr);
+                        }
+
+                        varDecayActivity();
+                        claDecayActivity();
+
+                        if (--learntsize_adjust_cnt == 0){
+                            learntsize_adjust_confl *= learntsize_adjust_inc;
+                            learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
+                            max_learnts             *= learntsize_inc;
+
+                            if (verbosity >= 1)
+                                /*auto*/{
+                                    printf("| %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% |\n", 
+                                       (int)conflicts, 
+                                       (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
+                                       (int)max_learnts, nLearnts(), (double)learnts_literals/nLearnts(), progressEstimate()*100);
+                                }/*auto*/
+                        }
+
+                    }else{
+                        // NO CONFLICT
+                        if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
+                            // Reached bound on number of conflicts:
+                            progress_estimate = progressEstimate();
+                            cancelUntil(0);
+                            return l_Undef; }
+
+                        // Simplify the set of problem clauses:
+                        if (decisionLevel() == 0 && !simplify())
+                            /*auto*/{
+                                return l_False;
+                            }/*auto*/
+
+                        if (learnts.size()-nAssigns() >= max_learnts)
+                            // Reduce the set of learnt clauses:
+                            /*auto*/{
+                                reduceDB();
+                            }/*auto*/
+
+                        Lit next = lit_Undef;
+                        while (decisionLevel() < assumptions.size()){
+                            // Perform user provided assumption:
+                            Lit p = assumptions[decisionLevel()];
+                            if (value(p) == l_True){
+                                // Dummy decision level:
+                                newDecisionLevel();
+                            }else if (value(p) == l_False){
+                                analyzeFinal(~p, conflict);
+                                return l_False;
+                            }else{
+                                next = p;
+                                break;
+                            }
+                        }
+
+                        if (next == lit_Undef){
+                            // New variable decision:
+                            decisions++;
+                            next = pickBranchLit();
+
+                            if (next == lit_Undef)
+                                // Model found:
+                                /*auto*/{
+                                    return l_True;
+                                }/*auto*/
+                        }
+
+                        // Increase decision level and enqueue 'next'
+                        newDecisionLevel();
+                        uncheckedEnqueue(next);
+                    }
+                }
                 cancelUntil(0);
                 return l_Undef; }
 

2024-06-14 06:13:48,198	[INFO]	96      COMPILE_CODE_ERROR    None (--) [6 edit(s)]  
2024-06-14 06:13:48,198	[DEBUG]	patch(96)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 290), ('core/Solver.cc.xml', 'stmt', 11)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 312), ('core/Solver.cc.xml', 'stmt', 380))"
2024-06-14 06:13:48,461	[INFO]	97      COMPILE_CODE_ERROR    None (--) [6 edit(s)]  
2024-06-14 06:13:48,461	[DEBUG]	patch(97)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 225), ('core/Solver.cc.xml', 'stmt', 315)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 290), ('core/Solver.cc.xml', 'stmt', 11)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 287), ('core/Solver.cc.xml', 'stmt', 324))"
2024-06-14 06:14:05,281	[DEBUG]	EXEC>  SUCCESS 19671918636.548
2024-06-14 06:14:05,281	[INFO]	98      SUCCESS              *19671918636.548000 (70.71%) [4 edit(s)]  
2024-06-14 06:14:05,281	[DEBUG]	patch(98)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 290), ('core/Solver.cc.xml', 'stmt', 11))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -390,7 +390,7 @@
         }/*auto*/
 
     max_literals += out_learnt.size();
-    out_learnt.shrink(i - j);
+    
     tot_literals += out_learnt.size();
 
     // Find correct backtrack level:
@@ -561,6 +561,7 @@
                     if (value(c[k]) != l_False){
                     c[1] = c[k]; c[k] = false_lit;
                     watches[~c[1]].push(w);
+                    static DoubleOption  opt_garbage_frac      (_cat, "gc-frac",     "The fraction of wasted memory allowed before a garbage collection is triggered",  0.20, DoubleRange(0, false, HUGE_VAL, false));
                     goto NextClause; }
                 }/*auto*/
 
@@ -738,7 +739,7 @@
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
-                claBumpActivity(ca[cr]);
+                
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
@@ -764,6 +765,99 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
+                for (;;){
+                    CRef confl = propagate();
+                    if (confl != CRef_Undef){
+                        // CONFLICT
+                        conflicts++; conflictC++;
+                        if (decisionLevel() == 0) /*auto*/{
+                            return l_False;
+                        }/*auto*/
+
+                        learnt_clause.clear();
+                        analyze(confl, learnt_clause, backtrack_level);
+                        cancelUntil(backtrack_level);
+
+                        if (learnt_clause.size() == 1){
+                            uncheckedEnqueue(learnt_clause[0]);
+                        }else{
+                            CRef cr = ca.alloc(learnt_clause, true);
+                            learnts.push(cr);
+                            attachClause(cr);
+                            claBumpActivity(ca[cr]);
+                            uncheckedEnqueue(learnt_clause[0], cr);
+                        }
+
+                        varDecayActivity();
+                        claDecayActivity();
+
+                        if (--learntsize_adjust_cnt == 0){
+                            learntsize_adjust_confl *= learntsize_adjust_inc;
+                            learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
+                            max_learnts             *= learntsize_inc;
+
+                            if (verbosity >= 1)
+                                /*auto*/{
+                                    printf("| %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% |\n", 
+                                       (int)conflicts, 
+                                       (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
+                                       (int)max_learnts, nLearnts(), (double)learnts_literals/nLearnts(), progressEstimate()*100);
+                                }/*auto*/
+                        }
+
+                    }else{
+                        // NO CONFLICT
+                        if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
+                            // Reached bound on number of conflicts:
+                            progress_estimate = progressEstimate();
+                            cancelUntil(0);
+                            return l_Undef; }
+
+                        // Simplify the set of problem clauses:
+                        if (decisionLevel() == 0 && !simplify())
+                            /*auto*/{
+                                return l_False;
+                            }/*auto*/
+
+                        if (learnts.size()-nAssigns() >= max_learnts)
+                            // Reduce the set of learnt clauses:
+                            /*auto*/{
+                                reduceDB();
+                            }/*auto*/
+
+                        Lit next = lit_Undef;
+                        while (decisionLevel() < assumptions.size()){
+                            // Perform user provided assumption:
+                            Lit p = assumptions[decisionLevel()];
+                            if (value(p) == l_True){
+                                // Dummy decision level:
+                                newDecisionLevel();
+                            }else if (value(p) == l_False){
+                                analyzeFinal(~p, conflict);
+                                return l_False;
+                            }else{
+                                next = p;
+                                break;
+                            }
+                        }
+
+                        if (next == lit_Undef){
+                            // New variable decision:
+                            decisions++;
+                            next = pickBranchLit();
+
+                            if (next == lit_Undef)
+                                // Model found:
+                                /*auto*/{
+                                    return l_True;
+                                }/*auto*/
+                        }
+
+                        // Increase decision level and enqueue 'next'
+                        newDecisionLevel();
+                        uncheckedEnqueue(next);
+                    }
+                }
                 cancelUntil(0);
                 return l_Undef; }
 

2024-06-14 06:14:22,226	[DEBUG]	EXEC>  SUCCESS 23063321115.399
2024-06-14 06:14:22,226	[INFO]	99      SUCCESS               23063321115.398998 (82.90%) [3 edit(s)]  
2024-06-14 06:14:22,226	[DEBUG]	patch(99)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 290), ('core/Solver.cc.xml', 'stmt', 11))"
2024-06-14 06:14:22,232	[INFO]	100     SUCCESS               20315286247.162998 (73.02%) [3 edit(s)] [cached] 
2024-06-14 06:14:22,232	[DEBUG]	patch(100)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137))"
2024-06-14 06:14:38,042	[DEBUG]	EXEC>  SUCCESS 19692387559.026
2024-06-14 06:14:38,042	[INFO]	101     SUCCESS               19692387559.026001 (70.78%) [3 edit(s)]  
2024-06-14 06:14:38,042	[DEBUG]	patch(101)="SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 290), ('core/Solver.cc.xml', 'stmt', 11))"
2024-06-14 06:14:38,050	[INFO]	~~~~ END ~~~~
2024-06-14 06:14:38,050	[INFO]	
2024-06-14 06:14:38,050	[INFO]	==== REPORT ====
2024-06-14 06:14:38,050	[INFO]	Termination: time budget
2024-06-14 06:14:38,050	[INFO]	Retries: 1
2024-06-14 06:14:38,050	[INFO]	Log file: /home/jim/magpie/_magpie_logs/minisat_1718341319.log
2024-06-14 06:14:38,050	[INFO]	Patch file: _magpie_logs/minisat_1718341319.patch
2024-06-14 06:14:38,050	[INFO]	Diff file: _magpie_logs/minisat_1718341319.diff
2024-06-14 06:14:38,050	[INFO]	Reference fitness: 27820667160.526001
2024-06-14 06:14:38,051	[INFO]	Best fitness: 19671918636.548000
2024-06-14 06:14:38,051	[INFO]	
2024-06-14 06:14:38,051	[INFO]	==== BEST PATCH ====
SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 290)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 404), ('core/Solver.cc.xml', 'stmt', 275)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 137)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 290), ('core/Solver.cc.xml', 'stmt', 11))
2024-06-14 06:14:38,052	[INFO]	
2024-06-14 06:14:38,052	[INFO]	==== DIFF ====
[1m--- before: core/Solver.cc[0m
[1m+++ after: core/Solver.cc[0m
[36m@@ -390,7 +390,7 @@[0m
         }/*auto*/
 
     max_literals += out_learnt.size();
[31m-    out_learnt.shrink(i - j);[0m
[32m+    [0m
     tot_literals += out_learnt.size();
 
     // Find correct backtrack level:
[36m@@ -561,6 +561,7 @@[0m
                     if (value(c[k]) != l_False){
                     c[1] = c[k]; c[k] = false_lit;
                     watches[~c[1]].push(w);
[32m+                    static DoubleOption  opt_garbage_frac      (_cat, "gc-frac",     "The fraction of wasted memory allowed before a garbage collection is triggered",  0.20, DoubleRange(0, false, HUGE_VAL, false));[0m
                     goto NextClause; }
                 }/*auto*/
 
[36m@@ -738,7 +739,7 @@[0m
                 CRef cr = ca.alloc(learnt_clause, true);
                 learnts.push(cr);
                 attachClause(cr);
[31m-                claBumpActivity(ca[cr]);[0m
[32m+                [0m
                 uncheckedEnqueue(learnt_clause[0], cr);
             }
 
[36m@@ -764,6 +765,99 @@[0m
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
[32m+                for (;;){[0m
[32m+                    CRef confl = propagate();[0m
[32m+                    if (confl != CRef_Undef){[0m
[32m+                        // CONFLICT[0m
[32m+                        conflicts++; conflictC++;[0m
[32m+                        if (decisionLevel() == 0) /*auto*/{[0m
[32m+                            return l_False;[0m
[32m+                        }/*auto*/[0m
[32m+[0m
[32m+                        learnt_clause.clear();[0m
[32m+                        analyze(confl, learnt_clause, backtrack_level);[0m
[32m+                        cancelUntil(backtrack_level);[0m
[32m+[0m
[32m+                        if (learnt_clause.size() == 1){[0m
[32m+                            uncheckedEnqueue(learnt_clause[0]);[0m
[32m+                        }else{[0m
[32m+                            CRef cr = ca.alloc(learnt_clause, true);[0m
[32m+                            learnts.push(cr);[0m
[32m+                            attachClause(cr);[0m
[32m+                            claBumpActivity(ca[cr]);[0m
[32m+                            uncheckedEnqueue(learnt_clause[0], cr);[0m
[32m+                        }[0m
[32m+[0m
[32m+                        varDecayActivity();[0m
[32m+                        claDecayActivity();[0m
[32m+[0m
[32m+                        if (--learntsize_adjust_cnt == 0){[0m
[32m+                            learntsize_adjust_confl *= learntsize_adjust_inc;[0m
[32m+                            learntsize_adjust_cnt    = (int)learntsize_adjust_confl;[0m
[32m+                            max_learnts             *= learntsize_inc;[0m
[32m+[0m
[32m+                            if (verbosity >= 1)[0m
[32m+                                /*auto*/{[0m
[32m+                                    printf("| %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% |\n", [0m
[32m+                                       (int)conflicts, [0m
[32m+                                       (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, [0m
[32m+                                       (int)max_learnts, nLearnts(), (double)learnts_literals/nLearnts(), progressEstimate()*100);[0m
[32m+                                }/*auto*/[0m
[32m+                        }[0m
[32m+[0m
[32m+                    }else{[0m
[32m+                        // NO CONFLICT[0m
[32m+                        if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){[0m
[32m+                            // Reached bound on number of conflicts:[0m
[32m+                            progress_estimate = progressEstimate();[0m
[32m+                            cancelUntil(0);[0m
[32m+                            return l_Undef; }[0m
[32m+[0m
[32m+                        // Simplify the set of problem clauses:[0m
[32m+                        if (decisionLevel() == 0 && !simplify())[0m
[32m+                            /*auto*/{[0m
[32m+                                return l_False;[0m
[32m+                            }/*auto*/[0m
[32m+[0m
[32m+                        if (learnts.size()-nAssigns() >= max_learnts)[0m
[32m+                            // Reduce the set of learnt clauses:[0m
[32m+                            /*auto*/{[0m
[32m+                                reduceDB();[0m
[32m+                            }/*auto*/[0m
[32m+[0m
[32m+                        Lit next = lit_Undef;[0m
[32m+                        while (decisionLevel() < assumptions.size()){[0m
[32m+                            // Perform user provided assumption:[0m
[32m+                            Lit p = assumptions[decisionLevel()];[0m
[32m+                            if (value(p) == l_True){[0m
[32m+                                // Dummy decision level:[0m
[32m+                                newDecisionLevel();[0m
[32m+                            }else if (value(p) == l_False){[0m
[32m+                                analyzeFinal(~p, conflict);[0m
[32m+                                return l_False;[0m
[32m+                            }else{[0m
[32m+                                next = p;[0m
[32m+                                break;[0m
[32m+                            }[0m
[32m+                        }[0m
[32m+[0m
[32m+                        if (next == lit_Undef){[0m
[32m+                            // New variable decision:[0m
[32m+                            decisions++;[0m
[32m+                            next = pickBranchLit();[0m
[32m+[0m
[32m+                            if (next == lit_Undef)[0m
[32m+                                // Model found:[0m
[32m+                                /*auto*/{[0m
[32m+                                    return l_True;[0m
[32m+                                }/*auto*/[0m
[32m+                        }[0m
[32m+[0m
[32m+                        // Increase decision level and enqueue 'next'[0m
[32m+                        newDecisionLevel();[0m
[32m+                        uncheckedEnqueue(next);[0m
[32m+                    }[0m
[32m+                }[0m
                 cancelUntil(0);
                 return l_Undef; }
 

