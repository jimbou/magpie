--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -139,17 +139,7 @@
     // Check if clause is satisfied and remove false/duplicate literals:
     sort(ps);
     Lit p; int i, j;
-    for (i = j = 0, p = lit_Undef; i < ps.size(); i++)
-        /*auto*/{
-            if (value(ps[i]) == l_True || ps[i] == ~p)
-            /*auto*/{
-                return true;
-            }/*auto*/
-        else if (value(ps[i]) != l_False && ps[i] != p)
-            /*auto*/{
-                ps[j++] = p = ps[i];
-            }/*auto*/
-        }/*auto*/
+    
     ps.shrink(i - j);
 
     if (ps.size() == 0)
@@ -382,6 +372,9 @@
                         out_learnt[j++] = out_learnt[i];
                         break; }
                     }/*auto*/
+                if (!ok) /*auto*/{
+                  return l_False;
+                }/*auto*/
             }
         }
     }else
@@ -724,6 +717,7 @@
         if (confl != CRef_Undef){
             // CONFLICT
             conflicts++; conflictC++;
+            max_learnts               = nClauses() * learntsize_factor;
             if (decisionLevel() == 0) /*auto*/{
                 return l_False;
             }/*auto*/
