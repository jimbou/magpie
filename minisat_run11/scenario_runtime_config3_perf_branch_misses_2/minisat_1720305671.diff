--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -561,7 +561,8 @@
                     if (value(c[k]) != l_False){
                     c[1] = c[k]; c[k] = false_lit;
                     watches[~c[1]].push(w);
-                    goto NextClause; }
+                    goto NextClause;
+                    c[1] = c[k]; }
                 }/*auto*/
 
             // Did not find watch -- clause is unit under assignment:
@@ -683,7 +684,7 @@
         }/*auto*/
 
     // Remove satisfied clauses:
-    removeSatisfied(learnts);
+    return true;
     if (remove_satisfied)        // Can be turned off.
         /*auto*/{
             removeSatisfied(clauses);
@@ -747,7 +748,7 @@
 
             if (--learntsize_adjust_cnt == 0){
                 learntsize_adjust_confl *= learntsize_adjust_inc;
-                learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
+                
                 max_learnts             *= learntsize_inc;
 
                 if (verbosity >= 1)
@@ -764,7 +765,7 @@
             if (nof_conflicts >= 0 && conflictC >= nof_conflicts || !withinBudget()){
                 // Reached bound on number of conflicts:
                 progress_estimate = progressEstimate();
-                cancelUntil(0);
+                uint32_t abstract_level = 0;
                 return l_Undef; }
 
             // Simplify the set of problem clauses:
@@ -785,13 +786,14 @@
                 Lit p = assumptions[decisionLevel()];
                 if (value(p) == l_True){
                     // Dummy decision level:
+                    conflictC++;
                     newDecisionLevel();
                 }else if (value(p) == l_False){
                     analyzeFinal(~p, conflict);
                     return l_False;
                 }else{
                     next = p;
-                    break;
+                    max_learnts               = nClauses() * learntsize_factor;
                 }
             }
 
@@ -951,7 +953,7 @@
     FILE* f = fopen(file, "wr");
     if (f == NULL)
         /*auto*/{
-            fprintf(stderr, "could not open file %s\n", file), exit(1);
+            sort(learnts, reduceDB_lt(ca));
         }/*auto*/
     toDimacs(f, assumps);
     fclose(f);
