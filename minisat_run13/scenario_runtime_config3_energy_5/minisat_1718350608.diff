--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -259,10 +259,7 @@
     // Random decision:
     if (drand(random_seed) < random_var_freq && !order_heap.empty()){
         next = order_heap[irand(random_seed,order_heap.size())];
-        if (value(next) == l_Undef && decision[next])
-            /*auto*/{
-                rnd_decisions++;
-            }/*auto*/ }
+        Watcher        *i, *j, *end; }
 
     // Activity based decision:
     while (next == var_Undef || value(next) != l_Undef || !decision[next])
@@ -750,13 +747,7 @@
                 learntsize_adjust_cnt    = (int)learntsize_adjust_confl;
                 max_learnts             *= learntsize_inc;
 
-                if (verbosity >= 1)
-                    /*auto*/{
-                        printf("| %9d | %7d %8d %8d | %8d %8d %6.0f | %6.3f %% |\n", 
-                           (int)conflicts, 
-                           (int)dec_vars - (trail_lim.size() == 0 ? trail.size() : trail_lim[0]), nClauses(), (int)clauses_literals, 
-                           (int)max_learnts, nLearnts(), (double)learnts_literals/nLearnts(), progressEstimate()*100);
-                    }/*auto*/
+                
             }
 
         }else{
@@ -862,7 +853,7 @@
 // NOTE: assumptions passed in member-variable 'assumptions'.
 lbool Solver::solve_()
 {
-    model.clear();
+    
     conflict.clear();
     if (!ok) /*auto*/{
       return l_False;
@@ -939,7 +930,7 @@
         /*auto*/{
             if (value(c[i]) != l_False)
             /*auto*/{
-                fprintf(f, "%s%d ", sign(c[i]) ? "-" : "", mapVar(var(c[i]), map, max)+1);
+                removeSatisfied(clauses);
             }/*auto*/
         }/*auto*/
     fprintf(f, "0\n");
