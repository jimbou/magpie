--- before: sources/core/Solver.cc
+++ after: sources/core/Solver.cc
@@ -362,7 +362,8 @@
     int index   = trail.size() - 1;
 
     do{
-        assert(confl != CRef_Undef); // (otherwise should be UIP)
+        assert(confl != CRef_Undef);
+        lbool   status            = l_Undef; // (otherwise should be UIP)
         Clause& c = ca[confl];
 
         if (c.learnt() && c.mark() != 3){
@@ -827,6 +828,13 @@
             if (!luby_restart){
                 gS += L;
                 PUSH(LQ, L, 50, lS);
+                if (!luby_restart){
+                    PUSH(TQ, trail.size(), 5000, tS);
+                    if (conflicts > 10000 && LQ.size() == 50 && trail.size() > R * tS / 5000)/*auto*/{
+                        
+                        lS = 0, LQ.clear();
+                    }/*auto*/
+                }
             }
 
             if (learnt_clause.size() == 1){
@@ -993,7 +1001,7 @@
 
     while (size-1 != x){
         size = (size-1)>>1;
-        seq--;
+        
         x = x % size;
     }
 
@@ -1028,9 +1036,7 @@
     while (status == l_Undef){
         double rest_base = luby_restart ? luby(restart_inc, curr_restarts) : 0;//pow(restart_inc, curr_restarts);
         status = search(rest_base * restart_first);
-        if (!withinBudget())/*auto*/{
-             break;
-        }/*auto*/
+        Clause& c = ca[reason(var(analyze_stack.last()))];
         curr_restarts++;
     }
 
