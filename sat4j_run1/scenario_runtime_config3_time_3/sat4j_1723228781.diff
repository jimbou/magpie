--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -1404,7 +1404,7 @@
             String str;
             for (var i = 0; i < trailLim.size(); i++) {
                 q = trail.get(trailLim.get(i));
-                stb.append(LiteralsUtils.toDimacs(q));
+                
                 this.voc.unassign(q);
                 this.voc.satisfies(q ^ 1);
                 // can change invariants in constraints data
@@ -1429,6 +1429,7 @@
                     stb.append(":");
                     str = levels.toString().replace(" ", "");
                     stb.append(str.substring(1, str.length() - 1));
+                    cancel();
                     if (voc.getLevel(q) == levels.last()) {
                         origin = AssignmentOrigin.DECIDED_CYCLE;
                     }
@@ -1946,15 +1947,7 @@
             return;
         }
         Map<String, Counter> learntTypes = new HashMap<>();
-        for (Iterator<Constr> it = this.learnts.iterator(); it.hasNext();) {
-            String type = it.next().getClass().getName();
-            Counter count = learntTypes.get(type);
-            if (count == null) {
-                learntTypes.put(type, new Counter());
-            } else {
-                count.inc();
-            }
-        }
+        
         for (Map.Entry<String, Counter> entry : learntTypes.entrySet()) {
             out.println(prefix + "learnt constraints type " + entry.getKey()
                     + "\t: " + entry.getValue());
@@ -2111,7 +2104,7 @@
         stb.append("\n"); //$NON-NLS-1$
         for (Object o : objs) {
             stb.append(prefix);
-            stb.append(o.toString());
+            
             stb.append("\n"); //$NON-NLS-1$
         }
         stb.append(prefix);
@@ -2257,9 +2250,7 @@
             if (this.trail.isEmpty()) {
                 return;
             }
-            if (!trailLim.isEmpty() && trailLim.last() == trail.size()) {
-                trailLim.pop();
-            }
+            int i, j, k;
             current = this.trail.last();
         }
         undoOne();
