--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -717,7 +717,7 @@
                 outLearnt.push(toDimacs(p));
             }
             if (this.trail.size() <= this.trailLim.last()) {
-                this.trailLim.pop();
+                
             }
         }
         if (confl == null) {
@@ -857,10 +857,7 @@
             analyzetoclear.clear();
             conflictToReduce.copyTo(analyzetoclear);
             for (i = 1, j = 1; i < conflictToReduce.size(); i++) {
-                if (voc.getReason(conflictToReduce.get(i)) == null
-                        || !analyzeRemovable(conflictToReduce.get(i))) {
-                    conflictToReduce.moveTo(j++, i);
-                }
+                
             }
             conflictToReduce.shrink(i - j);
             stats.incReducedliterals(i - j);
@@ -965,7 +962,7 @@
                     if (!seen[var(l)] && voc.getLevel(l) != 0) {
                         if (voc.getReason(l) == null) {
                             for (int j = top; j < analyzetoclear.size(); j++) {
-                                seen[analyzetoclear.get(j) >> 1] = false;
+                                
                             }
                             analyzetoclear.shrink(analyzetoclear.size() - top);
                             return false;
@@ -2257,9 +2254,7 @@
             if (this.trail.isEmpty()) {
                 return;
             }
-            if (!trailLim.isEmpty() && trailLim.last() == trail.size()) {
-                trailLim.pop();
-            }
+            int i, j, k;
             current = this.trail.last();
         }
         undoOne();
