2024-06-12 16:35:26,011	[DEBUG]	==== CONFIG ====
[magpie]
import = 
seed = 673999861630843
log_dir = _magpie_logs
work_dir = _magpie_work
local_original_copy = True
local_original_name = __original__
output_encoding = ascii
edit_retries = 10
default_timeout = 30
default_lengthout = 1e6
diff_method = unified
trust_local_filesystem = True

[magpie.log]
color_output = True
format_info = {counter:<7} {status:<20} {best}{fitness} ({ratio}) [{size}] {cached} {log}
format_debug = patch({counter})="{patch}"{diffifbest}
format_fitness = {:.6f}
format_ratio = {:.2%%}
format_patchif = 
	 --> {patch}
format_diffif = 
	{diff}

[software]
path = examples/minisat
target_files = 
	core/Solver.cc.xml
software = BasicSoftware
model_rules = 
	*.params : ParamFileConfigModel
	*.xml : SrcmlModel
	* : LineModel
model_config = 
	*.params : [paramconfig]
	*.xml : [srcml]
init_cmd = bash init.sh
init_timeout = 60
init_lengthout = -1
setup_cmd = bash compile.sh
setup_timeout = 
setup_lengthout = 
compile_cmd = bash compile.sh
compile_timeout = 
compile_lengthout = 
test_cmd = bash test.sh
test_timeout = 
test_lengthout = 
run_cmd = perf stat  bash run_fixed.sh
run_timeout = 
run_lengthout = 
retries = 1
batch_timeout = 
batch_lengthout = 
batch_bin_fitness_strategy = aggregate
batch_fitness_strategy = sum
fitness = perf_time

[srcml]
rename = 
	stmt: break continue decl_stmt do expr_stmt for goto if return switch while
	number: literal_number
focus = block stmt operator_comp operator_arith number
internodes = block
process_pseudo_blocks = True
process_literals = True
process_operators = True

[paramconfig]
timing = test run
cli_prefix = --
cli_glue = =
cli_boolean = show
cli_boolean_prefix_true = 
cli_boolean_prefix_false = no-
cli_none = hide
silent_prefix = @
silent_suffix = $

[search]
protocol = BasicProtocol
algorithm = FirstImprovement
possible_edits = 
	SrcmlStmtReplacement
	SrcmlStmtInsertion
	SrcmlStmtDeletion
warmup = 3
warmup_strategy = last
max_steps = 10000
max_time = 80
target_fitness = 
cache_maxsize = 100
cache_keep = 0.2
batch_instances = 
batch_shuffle = True
batch_bin_shuffle = False
batch_sample_size = 1

[search.ls]
delete_prob = 0.5
max_neighbours = 
when_trapped = continue
accept_fail = False
tabu_length = 10

[search.gp]
pop_size = 10
delete_prob = 0.5
offspring_elitism = 0.1
offspring_crossover = 0.5
offspring_mutation = 0.4
uniform_rate = 0.5
batch_reset = True

[search.minify]
do_cleanup = True
do_rebuild = True
do_simplify = True
round_robin_limit = 3


2024-06-12 16:35:26,011	[DEBUG]	
2024-06-12 16:35:26,011	[INFO]	==== SEARCH: FirstImprovement ====
2024-06-12 16:35:26,012	[INFO]	~~~~ WARMUP ~~~~
2024-06-12 16:35:41,090	[DEBUG]	EXEC>  SUCCESS 11.58749961
2024-06-12 16:35:41,090	[INFO]	WARM    SUCCESS               11.587500 (--) [0 edit(s)]  
2024-06-12 16:35:52,978	[DEBUG]	EXEC>  SUCCESS 11.62812057
2024-06-12 16:35:52,979	[INFO]	WARM    SUCCESS               11.628121 (--) [0 edit(s)]  
2024-06-12 16:36:04,880	[DEBUG]	EXEC>  SUCCESS 11.61733684
2024-06-12 16:36:04,880	[INFO]	WARM    SUCCESS               11.617337 (--) [0 edit(s)]  
2024-06-12 16:36:04,880	[INFO]	REF     SUCCESS               11.617337 (--) [0 edit(s)]  
2024-06-12 16:36:04,880	[INFO]	
2024-06-12 16:36:04,880	[INFO]	~~~~ START ~~~~
2024-06-12 16:36:17,973	[DEBUG]	EXEC>  SUCCESS 11.58227461
2024-06-12 16:36:17,974	[INFO]	1       SUCCESS              *11.582275 (99.70%) [1 edit(s)]  
2024-06-12 16:36:17,974	[DEBUG]	patch(1)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 527), ('core/Solver.cc.xml', 'stmt', 328))"
--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -981,6 +981,7 @@
     for (int i = 0; i < clauses.size(); i++)
         /*auto*/{
         
+               int beg = i == 0 ? 0 : trail_lim[i - 1];
                if (!satisfied(ca[clauses[i]])){
             Clause& c = ca[clauses[i]];
             for (int j = 0; j < c.size(); j++)

2024-06-12 16:36:17,980	[INFO]	2       SUCCESS               11.617337 (100.00%) [0 edit(s)] [cached] 
2024-06-12 16:36:17,980	[DEBUG]	patch(2)=""
2024-06-12 16:36:18,234	[INFO]	3       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-12 16:36:18,234	[DEBUG]	patch(3)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 527), ('core/Solver.cc.xml', 'stmt', 328)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 148), ('core/Solver.cc.xml', 'stmt', 359))"
2024-06-12 16:36:18,476	[INFO]	4       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-12 16:36:18,476	[DEBUG]	patch(4)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 527), ('core/Solver.cc.xml', 'stmt', 328)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 153))"
2024-06-12 16:36:18,697	[INFO]	5       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-12 16:36:18,698	[DEBUG]	patch(5)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 527), ('core/Solver.cc.xml', 'stmt', 328)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 133), ('core/Solver.cc.xml', 'stmt', 200))"
2024-06-12 16:36:50,006	[INFO]	6       TEST_TIMEOUT          None (--) [2 edit(s)]  
2024-06-12 16:36:50,007	[DEBUG]	patch(6)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 527), ('core/Solver.cc.xml', 'stmt', 328)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 291))"
2024-06-12 16:36:50,264	[INFO]	7       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-12 16:36:50,264	[DEBUG]	patch(7)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 527), ('core/Solver.cc.xml', 'stmt', 328)) | SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 256), ('core/Solver.cc.xml', 'stmt', 331))"
2024-06-12 16:36:50,472	[INFO]	8       COMPILE_CODE_ERROR    None (--) [2 edit(s)]  
2024-06-12 16:36:50,472	[DEBUG]	patch(8)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 527), ('core/Solver.cc.xml', 'stmt', 328)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 347), ('core/Solver.cc.xml', 'stmt', 92))"
2024-06-12 16:37:21,789	[INFO]	9       TEST_TIMEOUT          None (--) [2 edit(s)]  
2024-06-12 16:37:21,789	[DEBUG]	patch(9)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 527), ('core/Solver.cc.xml', 'stmt', 328)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 228))"
2024-06-12 16:37:23,230	[INFO]	10      TEST_CODE_ERROR       None (--) [2 edit(s)]  
2024-06-12 16:37:23,230	[DEBUG]	patch(10)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 527), ('core/Solver.cc.xml', 'stmt', 328)) | SrcmlStmtReplacement(('core/Solver.cc.xml', 'stmt', 283), ('core/Solver.cc.xml', 'stmt', 0))"
2024-06-12 16:37:24,646	[INFO]	11      TEST_CODE_ERROR       None (--) [2 edit(s)]  
2024-06-12 16:37:24,646	[DEBUG]	patch(11)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 527), ('core/Solver.cc.xml', 'stmt', 328)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 414))"
2024-06-12 16:37:37,830	[DEBUG]	EXEC>  SUCCESS 11.75520125
2024-06-12 16:37:37,831	[INFO]	12      SUCCESS               11.755201 (101.19%) [2 edit(s)]  
2024-06-12 16:37:37,831	[DEBUG]	patch(12)="SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 527), ('core/Solver.cc.xml', 'stmt', 328)) | SrcmlStmtDeletion(('core/Solver.cc.xml', 'stmt', 14))"
2024-06-12 16:37:37,840	[INFO]	~~~~ END ~~~~
2024-06-12 16:37:37,840	[INFO]	
2024-06-12 16:37:37,840	[INFO]	==== REPORT ====
2024-06-12 16:37:37,840	[INFO]	Termination: time budget
2024-06-12 16:37:37,840	[INFO]	Retries: 1
2024-06-12 16:37:37,840	[INFO]	Log file: /home/jim/magpie/_magpie_logs/minisat_1718206525.log
2024-06-12 16:37:37,841	[INFO]	Patch file: _magpie_logs/minisat_1718206525.patch
2024-06-12 16:37:37,841	[INFO]	Diff file: _magpie_logs/minisat_1718206525.diff
2024-06-12 16:37:37,841	[INFO]	Reference fitness: 11.617337
2024-06-12 16:37:37,841	[INFO]	Best fitness: 11.582275
2024-06-12 16:37:37,841	[INFO]	
2024-06-12 16:37:37,842	[INFO]	==== BEST PATCH ====
SrcmlStmtInsertion(('core/Solver.cc.xml', '_inter_block', 527), ('core/Solver.cc.xml', 'stmt', 328))
2024-06-12 16:37:37,842	[INFO]	
2024-06-12 16:37:37,843	[INFO]	==== DIFF ====
[1m--- before: core/Solver.cc[0m
[1m+++ after: core/Solver.cc[0m
[36m@@ -981,6 +981,7 @@[0m
     for (int i = 0; i < clauses.size(); i++)
         /*auto*/{
         
[32m+               int beg = i == 0 ? 0 : trail_lim[i - 1];[0m
                if (!satisfied(ca[clauses[i]])){
             Clause& c = ca[clauses[i]];
             for (int j = 0; j < c.size(); j++)

