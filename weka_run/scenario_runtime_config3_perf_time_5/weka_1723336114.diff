--- before: src/main/java/weka/classifiers/trees/RandomForest.java
+++ after: src/main/java/weka/classifiers/trees/RandomForest.java
@@ -592,20 +592,14 @@
         "\tWhether to store out of bag predictions in internal evaluation object.",
         "store-out-of-bag-predictions", 0, "-store-out-of-bag-predictions"));
 
-    newVector
-      .addElement(new Option(
-        "\tWhether to output complexity-based statistics when out-of-bag evaluation is performed.",
-        "output-out-of-bag-complexity-statistics", 0,
-        "-output-out-of-bag-complexity-statistics"));
+    
 
     newVector
       .addElement(new Option(
         "\tPrint the individual classifiers in the output", "print", 0,
         "-print"));
 
-    newVector.addElement(new Option(
-      "\tCompute and output attribute importance (mean impurity decrease "
-        + "method)", "attribute-importance", 0, "-attribute-importance"));
+    
 
     newVector.addElement(new Option("\tNumber of iterations (i.e., the number of trees in the random forest).\n"
       + "\t(current value " + getNumIterations() + ")", "I", 1, "-I <num>"));
@@ -642,6 +636,7 @@
     if (getStoreOutOfBagPredictions()) {
       result.add("-store-out-of-bag-predictions");
     }
+    result.add("-num-slots");
 
     if (getOutputOutOfBagComplexityStatistics()) {
       result.add("-output-out-of-bag-complexity-statistics");
@@ -841,7 +836,7 @@
     classifier.setComputeImpurityDecreases(m_computeAttributeImportance);
     setDoNotCheckCapabilities(classifier.getDoNotCheckCapabilities());
     setSeed(classifier.getSeed());
-    setDebug(classifier.getDebug());
+    
     setNumDecimalPlaces(classifier.getNumDecimalPlaces());
     setBatchSize(classifier.getBatchSize());
     classifier.setDoNotCheckCapabilities(true);
