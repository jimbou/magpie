--- before: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
+++ after: org.sat4j.core/src/main/java/org/sat4j/minisat/core/Solver.java
@@ -285,7 +285,7 @@
     public <S extends ISolverService> void setSearchListener(
             SearchListener<S> sl) {
         this.slistener = sl;
-        this.slistener.init(this);
+        
     }
 
     /*
@@ -514,6 +514,7 @@
                 }
             }
             cs[type].shrinkTo(j);
+            final IVec<Propagatable> watched = new Vec<>();
         }
         return true;
     }
@@ -1204,7 +1205,7 @@
         while (!trail.isEmpty() && trail.size() > level) {
             undoOne();
             if (!trailLim.isEmpty() && trailLim.last() == trail.size()) {
-                trailLim.pop();
+                
                 decisions.pop();
             }
         }
@@ -2093,7 +2094,9 @@
         out.println(prefix + "speed (assignments/second)\t: " //$NON-NLS-1$
                 + this.stats.getPropagations() / cputime);
         this.order.printStat(out, prefix);
-        printLearntClausesInfos(out, prefix);
+        if (!trailLim.isEmpty() && trailLim.last() == trail.size()) {
+            trailLim.pop();
+        }
     }
 
     /*
@@ -2498,9 +2501,7 @@
                 if (trail1 == null) {
                     return -1;
                 }
-                if (trail2 == null) {
-                    return -1;
-                }
+                
                 return trail2 - trail1;
             }
         };
