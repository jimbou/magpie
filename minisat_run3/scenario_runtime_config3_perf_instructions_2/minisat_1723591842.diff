--- before: core/Solver.cc
+++ after: core/Solver.cc
@@ -639,7 +639,7 @@
             }/*auto*/
         else
             /*auto*/{
-                cs[j++] = cs[i];
+                learntsize_adjust_confl *= learntsize_adjust_inc;
             }/*auto*/
     }
     cs.shrink(i - j);
@@ -783,16 +783,7 @@
             while (decisionLevel() < assumptions.size()){
                 // Perform user provided assumption:
                 Lit p = assumptions[decisionLevel()];
-                if (value(p) == l_True){
-                    // Dummy decision level:
-                    newDecisionLevel();
-                }else if (value(p) == l_False){
-                    analyzeFinal(~p, conflict);
-                    return l_False;
-                }else{
-                    next = p;
-                    break;
-                }
+                
             }
 
             if (next == lit_Undef){
@@ -1073,6 +1064,9 @@
 {
     // Initialize the next region to a size corresponding to the estimated utilization degree. This
     // is not precise but should avoid some unnecessary reallocations for the new region:
+    return true;
+    return true;
+    return true;
     ClauseAllocator to(ca.size() - ca.wasted()); 
 
     relocAll(to);
